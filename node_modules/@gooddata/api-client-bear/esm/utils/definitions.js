// (C) 2007-2020 GoodData Corporation
import difference from "lodash/difference";
import map from "lodash/map";
var IDENTIFIER_REGEX = /{\S+}/g;
function getDependencies(_a) {
    var metricDefinition = _a.metricDefinition;
    return (metricDefinition.expression.match(IDENTIFIER_REGEX) || []).map(function (s) {
        return s.substring(1, s.length - 1);
    });
}
function getIdentifier(_a) {
    var metricDefinition = _a.metricDefinition;
    return metricDefinition.identifier;
}
function resolvedDependencies(resolved, _a) {
    var dependencies = _a.dependencies;
    var identifiers = map(resolved, "identifier");
    return difference(dependencies, identifiers).length === 0;
}
function scan(resolved, unresolved) {
    for (var i = 0; i < unresolved.length; i += 1) {
        var tested = unresolved[i];
        if (resolvedDependencies(resolved, tested)) {
            resolved.push(tested);
            unresolved.splice(i, 1);
            i -= 1;
        }
    }
}
function sort(unresolved) {
    var resolved = [];
    var lastLength;
    while (unresolved.length > 0) {
        lastLength = unresolved.length;
        scan(resolved, unresolved);
        if (unresolved.length === lastLength) {
            throw new Error("Metric defintions cannot be sorted due to missing dependencies.");
        }
    }
    return resolved;
}
export function sortDefinitions(definitions) {
    var indexed = definitions.map(function (definition) { return ({
        definition: definition,
        identifier: getIdentifier(definition),
        dependencies: getDependencies(definition),
    }); });
    return map(sort(indexed), "definition");
}
//# sourceMappingURL=definitions.js.map