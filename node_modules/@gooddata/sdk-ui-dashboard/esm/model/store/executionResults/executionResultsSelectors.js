// (C) 2021 GoodData Corporation
import { createSelector } from "@reduxjs/toolkit";
import { serializeObjRef } from "@gooddata/sdk-model";
import { createMemoizedSelector } from "../_infra/selectors";
import { executionResultsAdapter } from "./executionResultsEntityAdapter";
import { selectWidgetByRef } from "../layout/layoutSelectors";
import { isNonExportableError } from "../../../_staging/errors/errorPredicates";
import { selectPermissions } from "../permissions/permissionsSelectors";
import { selectSettings } from "../config/configSelectors";
var selectSelf = createSelector(function (state) { return state; }, function (state) { return state.executionResults; });
var adapterSelectors = executionResultsAdapter.getSelectors(selectSelf);
var selectExecutionResultEntities = adapterSelectors.selectEntities;
/**
 * @alpha
 */
export var selectExecutionResult = adapterSelectors.selectById;
/**
 * @alpha
 */
export var selectExecutionResultByRef = createMemoizedSelector(function (ref) {
    return createSelector(selectExecutionResultEntities, function (executionResults) {
        var key = serializeObjRef(ref);
        return executionResults[key];
    });
});
/**
 * @alpha
 */
export var selectIsExecutionResultReadyForExportByRef = createMemoizedSelector(function (ref) {
    return createSelector(selectExecutionResultByRef(ref), selectWidgetByRef(ref), function (widgetExecution) {
        if (!widgetExecution) {
            return false;
        }
        var isLoading = widgetExecution.isLoading, error = widgetExecution.error, executionResult = widgetExecution.executionResult;
        return !!executionResult && !isLoading && !isNonExportableError(error);
    });
});
/**
 * @alpha
 */
export var selectIsExecutionResultExportableToCsvByRef = createMemoizedSelector(function (ref) {
    return createSelector(selectIsExecutionResultReadyForExportByRef(ref), selectPermissions, selectSettings, function (isReadyForExport, permissions, settings) {
        var isExportEnabled = Boolean(settings.enableKPIDashboardExport && permissions.canExportReport);
        var isRawExportEnabled = Boolean(isExportEnabled && permissions.canExecuteRaw);
        return isReadyForExport && isRawExportEnabled;
    });
});
/**
 * @alpha
 */
export var selectIsExecutionResultExportableToXlsxByRef = createMemoizedSelector(function (ref) {
    return createSelector(selectIsExecutionResultReadyForExportByRef(ref), selectPermissions, selectSettings, function (isReadyForExport, permissions, settings) {
        var isExportEnabled = Boolean(settings.enableKPIDashboardExport && permissions.canExportReport);
        return isReadyForExport && isExportEnabled;
    });
});
//# sourceMappingURL=executionResultsSelectors.js.map