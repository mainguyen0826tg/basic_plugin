import { __extends } from "tslib";
// (C) 2007-2020 GoodData Corporation
import React, { Component, createRef } from "react";
import cx from "classnames";
import throttle from "lodash/throttle";
import pickBy from "lodash/pickBy";
import { elementRegion } from "../utils/domUtilities";
/**
 * @internal
 */
var FlexDimensions = /** @class */ (function (_super) {
    __extends(FlexDimensions, _super);
    function FlexDimensions(props) {
        var _this = _super.call(this, props) || this;
        _this.wrapperRef = createRef();
        _this.updateSize = function () {
            var _a = elementRegion(_this.wrapperRef.current), width = _a.width, height = _a.height;
            _this.setState({
                width: width,
                height: height,
            });
        };
        _this.state = {
            width: 0,
            height: 0,
        };
        _this.throttledUpdateSize = throttle(_this.updateSize, 250, { leading: false });
        return _this;
    }
    FlexDimensions.prototype.componentDidMount = function () {
        window.addEventListener("resize", this.throttledUpdateSize);
        this.throttledUpdateSize();
    };
    FlexDimensions.prototype.componentWillUnmount = function () {
        this.throttledUpdateSize.cancel();
        window.removeEventListener("resize", this.throttledUpdateSize);
    };
    FlexDimensions.prototype.getChildrenDimensions = function () {
        var _this = this;
        return pickBy(this.state, function (_, key) {
            var setWidth = _this.props.measureWidth && key === "width";
            var setHeight = _this.props.measureHeight && key === "height";
            return setWidth || setHeight;
        });
    };
    FlexDimensions.prototype.renderChildren = function () {
        var child = React.Children.only(this.props.children);
        return React.cloneElement(child, this.getChildrenDimensions());
    };
    FlexDimensions.prototype.render = function () {
        var classNames = cx(this.props.className);
        return (React.createElement("div", { ref: this.wrapperRef, className: classNames }, this.renderChildren()));
    };
    FlexDimensions.defaultProps = {
        children: false,
        className: "",
        measureWidth: true,
        measureHeight: true,
    };
    return FlexDimensions;
}(Component));
export { FlexDimensions };
//# sourceMappingURL=FlexDimensions.js.map