import { IAttributeMetadataObject, isAttributeMetadataObject } from "./attribute";
import { IAttributeDisplayFormMetadataObject, isAttributeDisplayFormMetadataObject } from "./attributeDisplayForm";
import { IDashboardMetadataObject, isDashboardMetadataObject } from "./dashboard";
import { IDataSetMetadataObject, isDataSetMetadataObject } from "./dataSet";
import { IFactMetadataObject, isFactMetadataObject } from "./fact";
import { IMeasureMetadataObject, IMeasureMetadataObjectBase, IMetadataObjectDefinition, IMeasureMetadataObjectDefinition, isMeasureMetadataObject, isMeasureMetadataObjectDefinition, IMeasureReferencing } from "./measure";
import { IMetadataObject, IMetadataObjectBase, IMetadataObjectIdentity, isMetadataObject } from "./types";
import { isVariableMetadataObject, IVariableMetadataObject } from "./variable";
export { IMetadataObject, IMetadataObjectBase, IMetadataObjectIdentity, isMetadataObject, IAttributeMetadataObject, isAttributeMetadataObject, IAttributeDisplayFormMetadataObject, isAttributeDisplayFormMetadataObject, IFactMetadataObject, isFactMetadataObject, IMeasureMetadataObject, IMeasureMetadataObjectBase, IMetadataObjectDefinition, isMeasureMetadataObject, IMeasureMetadataObjectDefinition, isMeasureMetadataObjectDefinition, IDataSetMetadataObject, isDataSetMetadataObject, IVariableMetadataObject, isVariableMetadataObject, IDashboardMetadataObject, isDashboardMetadataObject, IMeasureReferencing, };
/**
 * Type that represents any metadata object
 *
 * @public
 */
export declare type MetadataObject = IAttributeMetadataObject | IAttributeDisplayFormMetadataObject | IFactMetadataObject | IMeasureMetadataObject | IDataSetMetadataObject | IVariableMetadataObject | IDashboardMetadataObject;
/**
 * Get metadata object identifier
 *
 * @public
 */
export declare const metadataObjectId: (metadataObject: MetadataObject) => string;
//# sourceMappingURL=index.d.ts.map