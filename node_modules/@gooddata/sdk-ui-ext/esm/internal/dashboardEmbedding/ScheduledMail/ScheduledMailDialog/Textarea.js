import { __extends } from "tslib";
// (C) 2019-2020 GoodData Corporation
import * as React from "react";
import cx from "classnames";
import { isMobileView } from "../utils/responsive";
var Textarea = /** @class */ (function (_super) {
    __extends(Textarea, _super);
    function Textarea(props) {
        var _this = _super.call(this, props) || this;
        _this.getTextareaClassNames = function () {
            var _a = _this.props, hasError = _a.hasError, hasWarning = _a.hasWarning;
            return cx("gd-input-field", {
                "has-error": hasError,
                "has-warning": hasWarning,
            });
        };
        _this.onBlur = function (_e) {
            if (isMobileView()) {
                _this.setState({ rows: 1 });
            }
        };
        _this.onChange = function (e) {
            _this.props.onChange(e.target.value);
        };
        _this.onFocus = function (_e) {
            if (isMobileView()) {
                _this.setState({ rows: _this.props.rows });
            }
        };
        _this.renderCollapseIndicator = function () {
            return React.createElement("span", { className: "gd-input-component-indicator" }, "\u22EF");
        };
        _this.state = {
            rows: isMobileView() ? 1 : props.rows,
        };
        return _this;
    }
    Textarea.prototype.render = function () {
        var _a = this.props, className = _a.className, label = _a.label, maxlength = _a.maxlength, placeholder = _a.placeholder;
        var rows = this.state.rows;
        var classNames = cx("gd-input-component gd-textarea-component " + className, {
            "gd-textarea-component-collapsed": rows === 1,
        });
        return (React.createElement("div", { className: classNames },
            React.createElement("label", { className: "gd-label" }, label),
            React.createElement("label", { className: "gd-input" },
                React.createElement("textarea", { className: this.getTextareaClassNames(), maxLength: maxlength, placeholder: placeholder, rows: rows, onBlur: this.onBlur, onChange: this.onChange, onFocus: this.onFocus }),
                rows === 1 ? this.renderCollapseIndicator() : null)));
    };
    Textarea.defaultProps = {
        className: "",
        hasError: false,
        hasWarning: false,
    };
    return Textarea;
}(React.PureComponent));
export { Textarea };
//# sourceMappingURL=Textarea.js.map