import React, { Component } from "react";
/**
 * @internal
 */
export interface IRenderItemProps<T> {
    rowIndex: number;
    item: T;
    width: number;
    height: number;
}
/**
 * @internal
 */
export declare type ScrollCallback = (visibleRowsStartIndex: number, visibleRowsEndIndex: number) => void;
/**
 * @internal
 */
export interface IListProps<T> {
    className?: string;
    height?: number;
    width?: number;
    items?: T[];
    itemsCount?: number;
    itemHeight?: number;
    itemHeightGetter?: (index: number) => number;
    maxVisibleItemsCount?: number;
    renderItem: (props: IRenderItemProps<T>) => React.ReactNode;
    onScrollStart?: ScrollCallback;
    onScrollEnd?: ScrollCallback;
    compensateBorder?: boolean;
    scrollToSelected?: boolean;
}
export declare const MAX_VISIBLE_ITEMS_COUNT = 10;
export declare const DEFAULT_ITEM_HEIGHT = 28;
/**
 * @internal
 */
export declare class List<T> extends Component<IListProps<T>> {
    componentWillUnmount(): void;
    render(): JSX.Element;
    private disablePageScrolling;
    private enablePageScrolling;
}
//# sourceMappingURL=List.d.ts.map