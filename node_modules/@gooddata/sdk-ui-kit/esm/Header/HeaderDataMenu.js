// (C) 2020 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import uniqueId from "lodash/uniqueId";
import cx from "classnames";
import { Button } from "../Button";
import { Bubble, BubbleHoverTrigger } from "../Bubble";
export var CoreHeaderDataMenu = function (_a) {
    var intl = _a.intl, onMenuItemClick = _a.onMenuItemClick, dataMenuItems = _a.dataMenuItems, className = _a.className;
    var renderSection = function (items) {
        return items.map(function (item) {
            var isDisable = item.isDisable, tooltipText = item.tooltipText, isActive = item.isActive, className = item.className, key = item.key, onClick = item.onClick;
            var classNames = cx("gd-button-primary " + className, {
                "is-active": !isDisable && isActive,
                "is-normal": !isDisable && !isActive,
            });
            var clickHandler = onClick ? onClick : function () { return onMenuItemClick(item); };
            return (React.createElement("li", { key: key },
                React.createElement(BubbleHoverTrigger, { tagName: "div", hideDelay: 100, showDelay: 100, className: "gd-bubble-trigger-data-menu" },
                    React.createElement(Button, { onClick: clickHandler, className: classNames, value: intl.formatMessage({ id: "" + key }), disabled: isDisable }),
                    tooltipText && isDisable && (React.createElement(Bubble, { alignPoints: [{ align: "bc tc" }, { align: "bc tl" }, { align: "bc tr" }] }, tooltipText)))));
        });
    };
    var dataMenuClassName = cx("gd-data-header-menu-section", className);
    return (React.createElement("div", { className: "gd-data-header-menu-wrapper" },
        React.createElement("ul", { key: uniqueId("section-"), className: dataMenuClassName }, renderSection(dataMenuItems))));
};
/**
 * @internal
 */
export var HeaderDataMenu = injectIntl(CoreHeaderDataMenu);
//# sourceMappingURL=HeaderDataMenu.js.map