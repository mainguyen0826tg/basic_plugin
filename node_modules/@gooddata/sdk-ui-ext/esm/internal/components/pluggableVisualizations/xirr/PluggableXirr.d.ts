import { IExecutionFactory } from "@gooddata/sdk-backend-spi";
import { IInsightDefinition } from "@gooddata/sdk-model";
import { IPushData } from "@gooddata/sdk-ui";
import { IExtendedReferencePoint, IReferencePoint, IVisConstruct, IVisProps, IVisualizationOptions } from "../../../interfaces/Visualization";
import { AbstractPluggableVisualization } from "../AbstractPluggableVisualization";
export declare class PluggableXirr extends AbstractPluggableVisualization {
    private settings?;
    private renderFun;
    constructor(props: IVisConstruct);
    unmount(): void;
    getExtendedReferencePoint: (referencePoint: Readonly<IReferencePoint>) => Promise<IExtendedReferencePoint>;
    protected renderVisualization(options: IVisProps, insight: IInsightDefinition, executionFactory: IExecutionFactory): void;
    protected renderConfigurationPanel(): void;
    private getXirrDimensions;
    private withEmptyAttributeTargets;
    private superPushData;
    protected pushData: (data: IPushData, options?: IVisualizationOptions) => void;
}
//# sourceMappingURL=PluggableXirr.d.ts.map