import { DashboardState } from "../types";
/**
 * This selector returns user's permissions in the workspace where the dashboard is stored. It is expected that the
 * selector is called only after the permission state is correctly initialized. Invocations before initialization lead to invariant errors.
 *
 * @public
 */
export declare const selectPermissions: import("@reduxjs/toolkit").OutputSelector<DashboardState, import("@gooddata/sdk-backend-spi").IWorkspacePermissions, (res: import("./permissionsState").PermissionsState) => import("@gooddata/sdk-backend-spi").IWorkspacePermissions>;
/**
 * Returns whether the current user has permissions to list other users in the workspace.
 *
 * @alpha
 */
export declare const selectCanListUsersInWorkspace: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IWorkspacePermissions) => boolean>;
/**
 * Returns whether the current user has permissions to manage current workspace.
 *
 * @alpha
 */
export declare const selectCanManageWorkspace: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IWorkspacePermissions) => boolean>;
/**
 * Returns whether the current user has permissions to export the report.
 *
 * @alpha
 */
export declare const selectCanExportReport: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IWorkspacePermissions) => boolean>;
/**
 * Returns whether the current user has permissions to create the analytical dashboard.
 *
 * @alpha
 */
export declare const selectCanCreateAnalyticalDashboard: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IWorkspacePermissions) => boolean>;
/**
 * Returns whether the current user has permissions to manage access rights.
 *
 * @alpha
 */
export declare const selectCanManageACL: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IWorkspacePermissions) => boolean>;
//# sourceMappingURL=permissionsSelectors.d.ts.map