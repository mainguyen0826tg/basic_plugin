import { __awaiter, __generator } from "tslib";
export function getElementTitle(projectId, dfRef, attrElementUriOrPrimaryLabel, ctx) {
    return __awaiter(this, void 0, void 0, function () {
        var validElementsQuery;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!ctx.backend.capabilities.supportsElementUris) {
                        /*
                         * TODO: for now return the "uri" directly on backends without element URI support (as it is the primary
                         * label value there), we need to implement the withOptions.uris there in some way later
                         */
                        return [2 /*return*/, Promise.resolve(attrElementUriOrPrimaryLabel)];
                    }
                    return [4 /*yield*/, ctx.backend
                            .workspace(projectId)
                            .attributes()
                            .elements()
                            .forDisplayForm(dfRef)
                            .withLimit(1)
                            .withOptions({
                            uris: [attrElementUriOrPrimaryLabel],
                        })
                            .query()];
                case 1:
                    validElementsQuery = _a.sent();
                    return [2 /*return*/, validElementsQuery.items[0].title];
            }
        });
    });
}
//# sourceMappingURL=getElementTitle.js.map