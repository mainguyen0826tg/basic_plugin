import { __generator } from "tslib";
import { selectWidgetsMap } from "../../store/layout/layoutSelectors";
import { put, select } from "redux-saga/effects";
import { validateExistingInsightWidget } from "./validation/widgetValidations";
import { layoutActions } from "../../store/layout";
import { insightWidgetHeaderChanged } from "../../events/insight";
export function changeInsightWidgetHeaderHandler(ctx, cmd) {
    var header, correlationId, widgets, insightWidget;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                header = cmd.payload.header, correlationId = cmd.correlationId;
                return [4 /*yield*/, select(selectWidgetsMap)];
            case 1:
                widgets = _a.sent();
                insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);
                return [4 /*yield*/, put(layoutActions.replaceWidgetHeader({
                        ref: insightWidget.ref,
                        header: header,
                        undo: {
                            cmd: cmd,
                        },
                    }))];
            case 2:
                _a.sent();
                return [2 /*return*/, insightWidgetHeaderChanged(ctx, insightWidget.ref, header, correlationId)];
        }
    });
}
//# sourceMappingURL=changeInsightWidgetHeaderHandler.js.map