import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React from "react";
import cx from "classnames";
import { FormattedMessage } from "react-intl";
import PreviewRows from "../shared/PreviewRows";
var ExtendedPreview = /** @class */ (function (_super) {
    __extends(ExtendedPreview, _super);
    function ExtendedPreview() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            expanded: false,
        };
        _this.openExtendedPreview = function () {
            _this.setState({ expanded: true });
        };
        return _this;
    }
    ExtendedPreview.prototype.render = function () {
        var expanded = this.state.expanded;
        var _a = this.props, format = _a.format, separators = _a.separators;
        return (React.createElement("div", { className: "gd-measure-format-extended-preview s-custom-format-dialog-extended-preview" },
            React.createElement("div", { className: cx("s-custom-format-dialog-extended-preview-button gd-measure-format-button", {
                    hidden: expanded,
                }), onClick: this.openExtendedPreview },
                React.createElement("div", { className: "gd-icon-navigateright gd-measure-format-button-icon-left" }),
                React.createElement("span", null,
                    React.createElement(FormattedMessage, { id: "measureNumberCustomFormatDialog.extendedPreview.button" }))),
            expanded && React.createElement(PreviewRows, { format: format, separators: separators })));
    };
    return ExtendedPreview;
}(React.Component));
export { ExtendedPreview };
//# sourceMappingURL=ExtendedPreview.js.map