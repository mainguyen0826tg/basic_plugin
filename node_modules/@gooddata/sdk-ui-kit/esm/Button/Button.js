import { __extends } from "tslib";
// (C) 2007-2020 GoodData Corporation
import React from "react";
import cx from "classnames";
import { stringUtils } from "@gooddata/util";
import noop from "lodash/noop";
/**
 * @internal
 */
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onClick = function (e) {
            if (!_this.props.disabled) {
                _this.props.onClick(e);
            }
        };
        return _this;
    }
    Button.prototype.render = function () {
        var _this = this;
        var _a = this.props, tagName = _a.tagName, title = _a.title, value = _a.value, tabIndex = _a.tabIndex, type = _a.type, iconLeft = _a.iconLeft, iconRight = _a.iconRight;
        var TagName = tagName;
        return (React.createElement(TagName, { ref: function (ref) {
                _this.buttonNode = ref;
            }, title: title, className: this.getClassnames(), type: type, onClick: this._onClick, tabIndex: tabIndex },
            this.renderIcon(iconLeft),
            value && React.createElement("span", { className: "gd-button-text" }, value),
            this.renderIcon(iconRight)));
    };
    Button.prototype.getClassnames = function () {
        var _a;
        var value = this.props.value;
        var generatedSeleniumClass = value ? "s-" + stringUtils.simplifyText(value) : "";
        return cx((_a = {},
            _a[this.props.className] = !!this.props.className,
            _a[generatedSeleniumClass] = true,
            _a["gd-button"] = true,
            _a.disabled = this.props.disabled,
            _a));
    };
    Button.prototype.renderIcon = function (icon) {
        if (!icon) {
            return null;
        }
        return React.createElement("span", { className: cx("gd-button-icon", icon) });
    };
    Button.defaultProps = {
        className: "",
        disabled: false,
        onClick: noop,
        tabIndex: -1,
        tagName: "button",
        title: "",
        type: "button",
        value: "",
        iconLeft: null,
        iconRight: null,
    };
    return Button;
}(React.Component));
export { Button };
//# sourceMappingURL=Button.js.map