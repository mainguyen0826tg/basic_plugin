import { __read, __spread } from "tslib";
// (C) 2021 GoodData Corporation
import React, { useState } from "react";
import { FormattedMessage, injectIntl } from "react-intl";
import cx from "classnames";
import isEmpty from "lodash/isEmpty";
import { Overlay } from "../Overlay";
export var CoreHeaderHelp = function (_a) {
    var _b;
    var className = _a.className, items = _a.items, onMenuItemClick = _a.onMenuItemClick, disableDropdown = _a.disableDropdown, onHelpClicked = _a.onHelpClicked, helpRedirectUrl = _a.helpRedirectUrl;
    var _c = __read(useState(false), 2), isOpen = _c[0], setIsOpen = _c[1];
    var classNames = cx((_b = {
            "gd-header-help": true,
            "gd-icon-header-help": true,
            "is-open": isOpen && !helpRedirectUrl,
            "anchor-tag-header-help": !isEmpty(helpRedirectUrl)
        },
        _b[className] = !!className,
        _b));
    var menuItems = items.map(function (item) {
        return (React.createElement("a", { key: item.key, href: item.href, target: item.target, rel: item.target === "_blank" ? "noreferrer noopener" : undefined, onClick: function () {
                menuItemClicked(item);
            }, className: "gd-list-item " + item.className },
            React.createElement(FormattedMessage, { id: item.key })));
    });
    var toggleHelpMenu = function (isMenuOpen) {
        if (isMenuOpen === void 0) { isMenuOpen = !isOpen; }
        onHelpClicked && onHelpClicked(isMenuOpen);
        setIsOpen(isMenuOpen);
    };
    var menuItemClicked = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        toggleHelpMenu(false);
        onMenuItemClick.apply(void 0, __spread(args));
    };
    var renderHelpMenu = function () {
        return isOpen ? (React.createElement(Overlay, { alignTo: ".gd-header-help", alignPoints: [
                {
                    align: "br tr",
                },
            ], closeOnOutsideClick: true, closeOnMouseDrag: true, closeOnParentScroll: true, onClose: function () {
                toggleHelpMenu(false);
            } }, !disableDropdown ? (React.createElement("div", { className: "gd-dialog gd-dropdown overlay gd-header-help-dropdown" },
            React.createElement("div", { className: "gd-list small" }, menuItems))) : null)) : (false);
    };
    return helpRedirectUrl ? (React.createElement("a", { className: classNames, href: helpRedirectUrl, target: "_blank", rel: "noreferrer noopener" },
        React.createElement(FormattedMessage, { id: "gs.header.help" }))) : (React.createElement("div", { className: classNames, onClick: function () { return toggleHelpMenu(); } },
        React.createElement(FormattedMessage, { id: "gs.header.help" }),
        renderHelpMenu()));
};
export var HeaderHelp = injectIntl(CoreHeaderHelp);
//# sourceMappingURL=HeaderHelp.js.map