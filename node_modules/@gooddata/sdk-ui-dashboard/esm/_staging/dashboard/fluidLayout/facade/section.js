// (C) 2019-2021 GoodData Corporation
import isEqual from "lodash/isEqual";
import isNil from "lodash/isNil";
import { DashboardLayoutItemFacade } from "./item";
import { DashboardLayoutItemsFacade } from "./items";
/**
 * @alpha
 */
var DashboardLayoutSectionFacade = /** @class */ (function () {
    function DashboardLayoutSectionFacade(layoutFacade, section, sectionIndex) {
        this.layoutFacade = layoutFacade;
        this.section = section;
        this.sectionIndex = sectionIndex;
    }
    DashboardLayoutSectionFacade.for = function (layoutFacade, section, index) {
        return new DashboardLayoutSectionFacade(layoutFacade, section, index);
    };
    DashboardLayoutSectionFacade.prototype.raw = function () {
        return this.section;
    };
    DashboardLayoutSectionFacade.prototype.header = function () {
        return this.section.header;
    };
    DashboardLayoutSectionFacade.prototype.title = function () {
        var _a;
        return (_a = this.header()) === null || _a === void 0 ? void 0 : _a.title;
    };
    DashboardLayoutSectionFacade.prototype.description = function () {
        var _a;
        return (_a = this.header()) === null || _a === void 0 ? void 0 : _a.description;
    };
    DashboardLayoutSectionFacade.prototype.index = function () {
        return this.sectionIndex;
    };
    DashboardLayoutSectionFacade.prototype.isFirst = function () {
        return this.indexIs(0);
    };
    DashboardLayoutSectionFacade.prototype.isLast = function () {
        return this.indexIs(this.layoutFacade.sections().count() - 1);
    };
    DashboardLayoutSectionFacade.prototype.testRaw = function (pred) {
        return pred(this.raw());
    };
    DashboardLayoutSectionFacade.prototype.test = function (pred) {
        return pred(this);
    };
    DashboardLayoutSectionFacade.prototype.indexIs = function (index) {
        return this.index() === index;
    };
    DashboardLayoutSectionFacade.prototype.headerEquals = function (header) {
        return isEqual(this.header(), header);
    };
    DashboardLayoutSectionFacade.prototype.hasHeader = function () {
        return !isNil(this.header());
    };
    DashboardLayoutSectionFacade.prototype.hasTitle = function () {
        return !isNil(this.title());
    };
    DashboardLayoutSectionFacade.prototype.hasDescription = function () {
        return !isNil(this.description());
    };
    DashboardLayoutSectionFacade.prototype.titleEquals = function (title) {
        return isEqual(this.title(), title);
    };
    DashboardLayoutSectionFacade.prototype.descriptionEquals = function (description) {
        return isEqual(this.description(), description);
    };
    DashboardLayoutSectionFacade.prototype.isEmpty = function () {
        return this.items().count() === 0;
    };
    DashboardLayoutSectionFacade.prototype.items = function () {
        return DashboardLayoutItemsFacade.for(this, this.section.items);
    };
    DashboardLayoutSectionFacade.prototype.item = function (index) {
        var column = this.section.items[index];
        if (!column) {
            return undefined;
        }
        return DashboardLayoutItemFacade.for(this, column, index);
    };
    DashboardLayoutSectionFacade.prototype.layout = function () {
        return this.layoutFacade;
    };
    return DashboardLayoutSectionFacade;
}());
export { DashboardLayoutSectionFacade };
//# sourceMappingURL=section.js.map