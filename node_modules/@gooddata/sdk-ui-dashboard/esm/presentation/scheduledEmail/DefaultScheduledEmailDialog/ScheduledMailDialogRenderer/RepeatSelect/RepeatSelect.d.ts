import * as React from "react";
import { WrappedComponentProps } from "react-intl";
export interface IRepeatSelectData {
    repeatExecuteOn: string;
    repeatFrequency: string;
    repeatPeriod: number;
    repeatType: string;
}
interface IRepeatSelectOwnProps {
    label: string;
    startDate: Date;
    onChange: (data: IRepeatSelectData) => void;
}
export declare type IRepeatSelectProps = IRepeatSelectData & IRepeatSelectOwnProps & WrappedComponentProps;
export declare const RepeatSelect: React.ForwardRefExoticComponent<Pick<IRepeatSelectProps, "label" | "onChange" | "repeatExecuteOn" | "repeatFrequency" | "repeatPeriod" | "repeatType" | "startDate"> & {
    forwardedRef?: React.RefObject<any> | ((instance: any) => void) | null | undefined;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IRepeatSelectProps>;
};
export {};
//# sourceMappingURL=RepeatSelect.d.ts.map