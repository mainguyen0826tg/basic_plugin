import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React, { Component } from "react";
import { FormattedMessage } from "react-intl";
import cx from "classnames";
import { stringUtils } from "@gooddata/util";
import noop from "lodash/noop";
/**
 * @internal
 */
var Tabs = /** @class */ (function (_super) {
    __extends(Tabs, _super);
    function Tabs(props) {
        var _a, _b;
        var _this = _super.call(this, props) || this;
        _this.state = {
            selectedTabId: props.selectedTabId || ((_b = (_a = props.tabs) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.id),
        };
        return _this;
    }
    Tabs.prototype.selectTab = function (tab) {
        var selectedTabId = tab === null || tab === void 0 ? void 0 : tab.id;
        var noChange = selectedTabId === this.state.selectedTabId;
        if (noChange) {
            return;
        }
        this.setState({
            selectedTabId: selectedTabId,
        });
        this.props.onTabSelect(tab);
    };
    Tabs.prototype.renderTab = function (tab) {
        var _a;
        var _this = this;
        var tabClassName = cx((_a = {
                "is-active": tab.id === this.state.selectedTabId,
                "gd-tab": true
            },
            _a["s-" + stringUtils.simplifyText(tab.id)] = true,
            _a));
        return (React.createElement("div", { className: tabClassName, key: tab.id, onClick: function () {
                _this.selectTab(tab);
            } },
            React.createElement("span", null,
                React.createElement(FormattedMessage, { id: tab.id }))));
    };
    Tabs.prototype.renderTabs = function () {
        return this.props.tabs.map(this.renderTab, this);
    };
    Tabs.prototype.render = function () {
        var classNames = cx(this.props.className, {
            "gd-tabs": true,
            small: true,
        });
        return React.createElement("div", { className: classNames }, this.renderTabs());
    };
    Tabs.defaultProps = {
        className: "",
        onTabSelect: noop,
        selectedTabId: "",
        tabs: [],
    };
    return Tabs;
}(Component));
export { Tabs };
//# sourceMappingURL=Tabs.js.map