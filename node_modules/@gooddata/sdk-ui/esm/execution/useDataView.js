import { convertError, DataViewFacade, useCancelablePromise, } from "../base";
/**
 * This hook provides easy way to get data for the provided {@link @gooddata/sdk-backend-spi#IPreparedExecution}.
 * You can use it to create custom visualizations on top of GoodData platform.
 * Be aware that execution is re-executed only on dependency list change, not on execution/window/callbacks change.
 *
 * @beta
 */
export function useDataView(_a, deps) {
    var execution = _a.execution, window = _a.window, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess;
    return useCancelablePromise({
        promise: execution
            ? function () {
                return execution
                    .execute()
                    .then(function (executionResult) {
                    return window
                        ? executionResult.readWindow(window.offset, window.size)
                        : executionResult.readAll();
                })
                    .then(function (dataView) {
                    return DataViewFacade.for(dataView);
                })
                    .catch(function (error) {
                    throw convertError(error);
                });
            }
            : null,
        onCancel: onCancel,
        onError: onError,
        onLoading: onLoading,
        onPending: onPending,
        onSuccess: onSuccess,
    }, deps);
}
//# sourceMappingURL=useDataView.js.map