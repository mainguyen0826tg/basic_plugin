// (C) 2007-2021 GoodData Corporation
import isNull from "lodash/isNull";
import { HYPHEN } from "./format";
export var LIMIT = 999;
function getTrend(prev, curr) {
    var previous = prev || 0;
    var current = curr || 0;
    if (previous === current) {
        return "neutral";
    }
    else if (previous < current) {
        return "up";
    }
    return "down";
}
function isTrendPositive(trend, meaning) {
    var isPositiveGrowing = trend === "up" && meaning === "growIsGood";
    var isPositiveFalling = trend === "down" && meaning === "growIsBad";
    return isPositiveGrowing || isPositiveFalling;
}
function isTrendNegative(trend, meaning) {
    var isNegativeGrowing = trend === "up" && meaning === "growIsBad";
    var isNegativeFalling = trend === "down" && meaning === "growIsGood";
    return isNegativeGrowing || isNegativeFalling;
}
function getMeaning(trend, meaning) {
    if (trend === "neutral") {
        return "neutral";
    }
    else if (isTrendPositive(trend, meaning)) {
        return "positive";
    }
    else if (isTrendNegative(trend, meaning)) {
        return "negative";
    }
    return "neutral";
}
function getPercentageValue(prev, curr) {
    var previous = prev || 0;
    var current = curr || 0;
    if (previous === 0 && current > 0) {
        return Number.POSITIVE_INFINITY;
    }
    else if (previous === 0 && current < 0) {
        return Number.NEGATIVE_INFINITY;
    }
    else if (previous === 0 && current === 0) {
        return 0;
    }
    var percent = Math.abs(previous / 100);
    var change = current - previous;
    return Math.round(change / percent);
}
function getPercentage(previous, current) {
    if (isNull(previous) && isNull(current)) {
        return HYPHEN;
    }
    var percentageValue = getPercentageValue(previous, current);
    var isOverLimit = percentageValue > LIMIT;
    var isUnderLimit = percentageValue < -LIMIT;
    if (isOverLimit) {
        return ">" + LIMIT + "%";
    }
    else if (isUnderLimit) {
        return "<" + -LIMIT + "%";
    }
    return percentageValue + "%";
}
export function getPopInfo(previous, current, meaning) {
    var trend = getTrend(previous, current);
    var trendMeaning = getMeaning(trend, meaning);
    var percentage = getPercentage(previous, current);
    return {
        trend: trend,
        meaning: trendMeaning,
        percentage: percentage,
    };
}
export function getErrorPopInfo() {
    return {
        trend: "neutral",
        meaning: "neutral",
        percentage: HYPHEN,
    };
}
//# sourceMappingURL=pop.js.map