// (C) 2021 GoodData Corporation
import { __generator } from "tslib";
import { select } from "redux-saga/effects";
import { filterContextChanged } from "../../events/filters";
import { selectFilterContextDefinition } from "../../store/filterContext/filterContextSelectors";
import { dispatchDashboardEvent } from "../../store/_infra/eventDispatcher";
import { selectEffectiveDateFilterOptions } from "../../store/dateFilterConfig/dateFilterConfigSelectors";
import { findDateFilterOptionByValue } from "../../../_staging/dateFilterConfig/dateFilterOptionMapping";
export function dispatchFilterContextChanged(ctx, cmd) {
    var filterContext;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, select(selectFilterContextDefinition)];
            case 1:
                filterContext = _a.sent();
                return [4 /*yield*/, dispatchDashboardEvent(filterContextChanged(ctx, filterContext, cmd.correlationId))];
            case 2:
                _a.sent();
                return [2 /*return*/];
        }
    });
}
export function canApplyDateFilter(dateFilter) {
    var effectiveDateFilterOptions, targetOption;
    var _a, _b, _c;
    return __generator(this, function (_d) {
        switch (_d.label) {
            case 0: return [4 /*yield*/, select(selectEffectiveDateFilterOptions)];
            case 1:
                effectiveDateFilterOptions = _d.sent();
                targetOption = findDateFilterOptionByValue(dateFilter, effectiveDateFilterOptions);
                if (!targetOption) {
                    if (dateFilter.dateFilter.type === "absolute") {
                        return [2 /*return*/, !!((_a = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.absoluteForm) === null || _a === void 0 ? void 0 : _a.visible)];
                    }
                    else if (dateFilter.dateFilter.type === "relative") {
                        if (dateFilter.dateFilter.granularity === "GDC.time.date" &&
                            dateFilter.dateFilter.from === undefined &&
                            dateFilter.dateFilter.to === undefined) {
                            return [2 /*return*/, !!((_b = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.allTime) === null || _b === void 0 ? void 0 : _b.visible)];
                        }
                        return [2 /*return*/, !!((_c = effectiveDateFilterOptions === null || effectiveDateFilterOptions === void 0 ? void 0 : effectiveDateFilterOptions.relativeForm) === null || _c === void 0 ? void 0 : _c.visible)];
                    }
                }
                return [2 /*return*/, !!targetOption];
        }
    });
}
//# sourceMappingURL=common.js.map