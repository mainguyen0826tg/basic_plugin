import { useBackend, useCancelablePromise, useWorkspace, } from "@gooddata/sdk-ui";
import { userWorkspaceSettingsDataLoaderFactory } from "../../../dataLoaders";
import { backendInvariant, workspaceInvariant } from "../utils";
/**
 * Hook allowing to download user workspace settings
 * @param config - configuration of the hook
 * @internal
 */
export function useUserWorkspaceSettings(_a) {
    var backend = _a.backend, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess, workspace = _a.workspace;
    var effectiveBackend = useBackend(backend);
    var effectiveWorkspace = useWorkspace(workspace);
    backendInvariant(effectiveBackend, "useUserWorkspaceSettings");
    workspaceInvariant(effectiveWorkspace, "useUserWorkspaceSettings");
    var loader = userWorkspaceSettingsDataLoaderFactory.forWorkspace(effectiveWorkspace);
    var promise = function () { return loader.getUserWorkspaceSettings(effectiveBackend); };
    return useCancelablePromise({ promise: promise, onCancel: onCancel, onError: onError, onLoading: onLoading, onPending: onPending, onSuccess: onSuccess }, [
        effectiveBackend,
        effectiveWorkspace,
    ]);
}
//# sourceMappingURL=useUserWorkspaceSettings.js.map