import { __awaiter, __generator } from "tslib";
// (C) 2007-2021 GoodData Corporation
import once from "lodash/once";
function getScrollbarWidthBody() {
    var _a;
    var outer = document.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.width = "100px";
    document.body.appendChild(outer);
    var widthNoScroll = outer.offsetWidth;
    // force scrollbars
    outer.style.overflow = "scroll";
    // add inner div
    var inner = document.createElement("div");
    inner.style.width = "100%";
    outer.appendChild(inner);
    var widthWithScroll = inner.offsetWidth;
    // remove divs
    (_a = outer.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(outer);
    return widthNoScroll - widthWithScroll;
}
/**
 * Returns the current actual scrollbar width.
 * For performance reasons this is memoized as the value is highly unlikely to change
 */
export var getScrollbarWidth = once(getScrollbarWidthBody);
export function sleep(delay) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve) {
                    setTimeout(resolve, delay);
                })];
        });
    });
}
//# sourceMappingURL=utils.js.map