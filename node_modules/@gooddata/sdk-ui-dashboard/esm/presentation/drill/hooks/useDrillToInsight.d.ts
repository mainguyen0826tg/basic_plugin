import { DashboardDrillToInsightResolved, DashboardCommandFailed, DrillToInsight } from "../../../model";
/**
 * @internal
 */
export interface UseDrillToInsightProps {
    onSuccess?: (event: DashboardDrillToInsightResolved) => void;
    onError?: (event: DashboardCommandFailed<DrillToInsight>) => void;
    onBeforeRun?: (cmd: DrillToInsight) => void;
}
/**
 * @internal
 */
export declare const useDrillToInsight: ({ onSuccess, onError, onBeforeRun }?: UseDrillToInsightProps) => {
    run: (drillDefinition: import("@gooddata/sdk-backend-spi").IDrillToInsight, drillEvent: import("../../..").IDashboardDrillEvent, correlationId?: string | undefined) => void;
    status?: "running" | "error" | "success" | undefined;
};
//# sourceMappingURL=useDrillToInsight.d.ts.map