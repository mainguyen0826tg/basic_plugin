import { useBackendStrict, useCancelablePromise, useWorkspaceStrict, } from "@gooddata/sdk-ui";
import { useDashboardSelector, selectCanListUsersInWorkspace } from "../../../model";
/**
 * Hook allowing to download workspace users
 * @param config - configuration of the hook
 * @internal
 */
export function useWorkspaceUsers(_a) {
    var search = _a.search, backend = _a.backend, workspace = _a.workspace, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess;
    var effectiveBackend = useBackendStrict(backend);
    var effectiveWorkspace = useWorkspaceStrict(workspace);
    var canListUsersInWorkspace = useDashboardSelector(selectCanListUsersInWorkspace);
    // if the user cannot list the users, do not even try and resolve to an empty array
    var promise = canListUsersInWorkspace
        ? function () {
            var loader = effectiveBackend.workspace(effectiveWorkspace).users();
            if (search) {
                loader = loader.withOptions({ search: "%" + search });
            }
            return loader.queryAll();
        }
        : function () { return Promise.resolve([]); };
    return useCancelablePromise({ promise: promise, onCancel: onCancel, onError: onError, onLoading: onLoading, onPending: onPending, onSuccess: onSuccess }, [
        effectiveBackend,
        effectiveWorkspace,
        search,
    ]);
}
//# sourceMappingURL=useWorkspaceUsers.js.map