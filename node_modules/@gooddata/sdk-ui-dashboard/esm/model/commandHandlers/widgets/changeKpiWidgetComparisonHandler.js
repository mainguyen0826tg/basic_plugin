import { __generator } from "tslib";
import { selectWidgetsMap } from "../../store/layout/layoutSelectors";
import { put, select } from "redux-saga/effects";
import { validateExistingKpiWidget } from "./validation/widgetValidations";
import { layoutActions } from "../../store/layout";
import { kpiWidgetComparisonChanged } from "../../events/kpi";
export function changeKpiWidgetComparisonHandler(ctx, cmd) {
    var _a, comparisonType, comparisonDirection, correlationId, widgets, kpiWidget, resolvedComparisonType, resolvedComparisonDirection, updatedWidgets, updatedKpiWidget;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                _a = cmd.payload.comparison, comparisonType = _a.comparisonType, comparisonDirection = _a.comparisonDirection, correlationId = cmd.correlationId;
                return [4 /*yield*/, select(selectWidgetsMap)];
            case 1:
                widgets = _b.sent();
                kpiWidget = validateExistingKpiWidget(widgets, cmd, ctx);
                resolvedComparisonType = comparisonType !== null && comparisonType !== void 0 ? comparisonType : "none";
                resolvedComparisonDirection = resolvedComparisonType !== "none" ? comparisonDirection !== null && comparisonDirection !== void 0 ? comparisonDirection : "growIsGood" : undefined;
                return [4 /*yield*/, put(layoutActions.replaceKpiWidgetComparison({
                        ref: kpiWidget.ref,
                        comparisonType: resolvedComparisonType,
                        comparisonDirection: resolvedComparisonDirection,
                        undo: {
                            cmd: cmd,
                        },
                    }))];
            case 2:
                _b.sent();
                return [4 /*yield*/, select(selectWidgetsMap)];
            case 3:
                updatedWidgets = _b.sent();
                updatedKpiWidget = updatedWidgets.get(kpiWidget.ref);
                return [2 /*return*/, kpiWidgetComparisonChanged(ctx, kpiWidget.ref, updatedKpiWidget.kpi, correlationId)];
        }
    });
}
//# sourceMappingURL=changeKpiWidgetComparisonHandler.js.map