// (C) 2021 GoodData Corporation
import { getDrillIntersection } from "@gooddata/sdk-ui";
import { isSeriesCol, isSliceCol } from "../structure/tableDescriptorTypes";
import invariant from "ts-invariant";
import { createDataColLeafHeaders, createSliceColHeaders } from "./colDrillHeadersFactory";
/**
 * Given an ag-grid cell event and table descriptor, create a drill intersection that exactly describes
 * coordinates of the clicked cell - by using attribute element headers, attribute descriptors and optionally measure
 * descriptor.
 *
 * @param cellEvent - cell event from ag-grid
 * @param tableDescriptor - table descriptor
 */
export function createDrillIntersection(cellEvent, tableDescriptor) {
    var mappingHeaders = [];
    var col = tableDescriptor.getCol(cellEvent.colDef);
    var row = cellEvent.data;
    invariant(isSliceCol(col) || isSeriesCol(col));
    if (isSeriesCol(col)) {
        mappingHeaders.push.apply(mappingHeaders, createDataColLeafHeaders(col));
    }
    var effectiveSliceCols = tableDescriptor.getSliceColsUpToIncludingCol(col);
    effectiveSliceCols.forEach(function (col) { return mappingHeaders.push.apply(mappingHeaders, createSliceColHeaders(col, row)); });
    return getDrillIntersection(mappingHeaders);
}
//# sourceMappingURL=drillIntersectionFactory.js.map