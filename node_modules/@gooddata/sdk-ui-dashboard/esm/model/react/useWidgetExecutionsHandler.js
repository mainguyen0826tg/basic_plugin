// (C) 2021 GoodData Corporation
import { useCallback } from "react";
import { useDispatchDashboardCommand } from "./useDispatchDashboardCommand";
import { setExecutionResultData, setExecutionResultError, setExecutionResultLoading } from "../commands";
/**
 * Provides callbacks to integrate with the executionResults slice.
 * @internal
 */
export function useWidgetExecutionsHandler(widgetRef) {
    var startLoading = useDispatchDashboardCommand(setExecutionResultLoading);
    var setData = useDispatchDashboardCommand(setExecutionResultData);
    var setError = useDispatchDashboardCommand(setExecutionResultError);
    var onError = useCallback(function (error) {
        setError(widgetRef, error);
    }, [widgetRef]);
    var onSuccess = useCallback(function (executionResult) {
        setData(widgetRef, executionResult);
    }, [widgetRef]);
    var onPushData = useCallback(function (data) {
        if (data.dataView) {
            onSuccess(data.dataView.result);
        }
    }, [widgetRef, onSuccess]);
    var onLoadingChanged = useCallback(function (_a) {
        var isLoading = _a.isLoading;
        if (isLoading) {
            startLoading(widgetRef);
        }
    }, [widgetRef]);
    return {
        onLoadingChanged: onLoadingChanged,
        onError: onError,
        onSuccess: onSuccess,
        onPushData: onPushData,
    };
}
//# sourceMappingURL=useWidgetExecutionsHandler.js.map