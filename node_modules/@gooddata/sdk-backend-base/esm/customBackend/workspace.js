// (C) 2019-2021 GoodData Corporation
import { NotSupported, } from "@gooddata/sdk-backend-spi";
import { CustomExecutionFactory } from "./execution";
/**
 * @internal
 */
var CustomWorkspace = /** @class */ (function () {
    function CustomWorkspace(workspace, config, state) {
        this.workspace = workspace;
        this.config = config;
        this.state = state;
    }
    CustomWorkspace.prototype.getDescriptor = function () {
        throw new NotSupported("getting workspace descriptor is not supported");
    };
    CustomWorkspace.prototype.getParentWorkspace = function () {
        throw new NotSupported("getting parent workspace is not supported");
    };
    CustomWorkspace.prototype.execution = function () {
        return new CustomExecutionFactory(this.workspace, this.config, this.state);
    };
    //
    // Should implement
    //
    // used by attribute filters
    CustomWorkspace.prototype.attributes = function () {
        throw new NotSupported("attributes service is not supported");
    };
    // used in InsightView - implement if custom backend should support persisted insights
    CustomWorkspace.prototype.settings = function () {
        throw new NotSupported("settings not supported");
    };
    // used in InsightView - implement if custom backend should support persisted insights
    CustomWorkspace.prototype.styling = function () {
        throw new NotSupported("styling is not supported");
    };
    //
    // Services for 'advanced' use cases - used in AD and KD.
    //
    CustomWorkspace.prototype.permissions = function () {
        throw new NotSupported("permissions are not supported");
    };
    CustomWorkspace.prototype.catalog = function () {
        throw new NotSupported("catalog is not supported");
    };
    CustomWorkspace.prototype.measures = function () {
        throw new NotSupported("measures service is not supported");
    };
    CustomWorkspace.prototype.facts = function () {
        throw new NotSupported("measures service is not supported");
    };
    CustomWorkspace.prototype.datasets = function () {
        throw new NotSupported("data sets service is not supported");
    };
    CustomWorkspace.prototype.insights = function () {
        throw new NotSupported("insights are not supported");
    };
    CustomWorkspace.prototype.dashboards = function () {
        throw new NotSupported("dashboards are not supported");
    };
    CustomWorkspace.prototype.users = function () {
        throw new NotSupported("users are not supported");
    };
    CustomWorkspace.prototype.dateFilterConfigs = function () {
        throw new NotSupported("dateFilterConfigs are not supported");
    };
    return CustomWorkspace;
}());
export { CustomWorkspace };
//# sourceMappingURL=workspace.js.map