import { walkLayout, } from "@gooddata/sdk-backend-spi";
import omit from "lodash/omit";
import updateWith from "lodash/updateWith";
import { cloneWithSanitizedIds } from "./IdSanitization";
function removeIdentifiers(widget) {
    return omit(widget, ["ref", "uri", "identifier"]);
}
function removeWidgetIdentifiersInLayout(layout) {
    if (!layout) {
        return;
    }
    var widgetsPaths = [];
    walkLayout(layout, {
        widgetCallback: function (_, widgetPath) { return widgetsPaths.push(widgetPath); },
    });
    return widgetsPaths.reduce(function (layout, widgetPath) {
        return updateWith(layout, widgetPath, removeIdentifiers);
    }, layout);
}
export function convertAnalyticalDashboard(dashboard, filterContextRef) {
    var _a;
    var layout = removeWidgetIdentifiersInLayout(dashboard.layout);
    return {
        dateFilterConfig: cloneWithSanitizedIds(dashboard.dateFilterConfig),
        filterContextRef: cloneWithSanitizedIds(filterContextRef),
        layout: cloneWithSanitizedIds(layout),
        plugins: (_a = dashboard.plugins) === null || _a === void 0 ? void 0 : _a.map(convertDashboardPluginLinkToBackend),
        version: "2",
    };
}
export function convertFilterContextToBackend(filterContext) {
    return {
        filters: cloneWithSanitizedIds(filterContext.filters),
        version: "2",
    };
}
export function convertDashboardPluginToBackend(plugin) {
    return {
        url: plugin.url,
        version: "2",
    };
}
export function convertDashboardPluginLinkToBackend(pluginLink) {
    return {
        plugin: cloneWithSanitizedIds(pluginLink.plugin),
        parameters: pluginLink.parameters,
        version: "2",
    };
}
//# sourceMappingURL=AnalyticalDashboardConverter.js.map