import { __assign } from "tslib";
// (C) 2021 GoodData Corporation
import React, { useMemo } from "react";
import { AttributeFilterButton } from "@gooddata/sdk-ui-filters";
import { attributeFilterToDashboardAttributeFilter, dashboardAttributeFilterToAttributeFilter, } from "../../../_staging/dashboard/dashboardFilterConverter";
import { AttributeFilterBody } from "./dashboardDropdownBody/AttributeFilterBody";
import { useParentFilters } from "./useParentFilters";
import { selectLocale, useDashboardSelector } from "../../../model";
/**
 * Default implementation of the attribute filter to use on the dashboard's filter bar.
 *
 * This will use the SDK's AttributeFilter with the button styled same as we have it today on KD.
 *
 * @alpha
 */
export var DefaultDashboardAttributeFilter = function (props) {
    var filter = props.filter, onFilterChanged = props.onFilterChanged;
    var _a = useParentFilters(filter), parentFilters = _a.parentFilters, parentFilterOverAttribute = _a.parentFilterOverAttribute;
    var locale = useDashboardSelector(selectLocale);
    var attributeFilter = useMemo(function () { return dashboardAttributeFilterToAttributeFilter(filter); }, [filter]);
    return (React.createElement(AttributeFilterButton, { filter: attributeFilter, onApply: function (newFilter) {
            onFilterChanged(attributeFilterToDashboardAttributeFilter(newFilter, filter.attributeFilter.localIdentifier));
        }, renderBody: function (filterBodyProps) {
            return React.createElement(AttributeFilterBody, __assign({}, filterBodyProps));
        }, parentFilters: parentFilters, parentFilterOverAttribute: parentFilterOverAttribute, locale: locale }));
};
//# sourceMappingURL=DefaultDashboardAttributeFilter.js.map