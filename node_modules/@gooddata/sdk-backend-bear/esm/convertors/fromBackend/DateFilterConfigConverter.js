import { __assign, __rest } from "tslib";
import { uriRef } from "@gooddata/sdk-model";
var convertAllTime = function (allTime) {
    return __assign({ type: "allTime" }, allTime);
};
var convertAbsoluteForm = function (absoluteForm) {
    return __assign({ type: "absoluteForm" }, absoluteForm);
};
var convertRelativeForm = function (relativeForm) {
    var availableGranularities = relativeForm.granularities, other = __rest(relativeForm, ["granularities"]);
    return __assign({ type: "relativeForm", availableGranularities: availableGranularities }, other);
};
var convertAbsolutePreset = function (absolutePreset) {
    return __assign({ type: "absolutePreset" }, absolutePreset);
};
var convertRelativePreset = function (relativePreset) {
    return __assign({ type: "relativePreset" }, relativePreset);
};
export var convertDateFilterConfig = function (dateFilterConfig) {
    var _a = dateFilterConfig.dateFilterConfig, _b = _a.content, selectedOption = _b.selectedOption, allTime = _b.allTime, absoluteForm = _b.absoluteForm, relativeForm = _b.relativeForm, absolutePresets = _b.absolutePresets, relativePresets = _b.relativePresets, meta = _a.meta;
    return {
        ref: uriRef(meta.uri),
        selectedOption: selectedOption,
        allTime: allTime && convertAllTime(allTime),
        absoluteForm: absoluteForm && convertAbsoluteForm(absoluteForm),
        relativeForm: relativeForm && convertRelativeForm(relativeForm),
        absolutePresets: absolutePresets && absolutePresets.map(convertAbsolutePreset),
        relativePresets: relativePresets && relativePresets.map(convertRelativePreset),
    };
};
//# sourceMappingURL=DateFilterConfigConverter.js.map