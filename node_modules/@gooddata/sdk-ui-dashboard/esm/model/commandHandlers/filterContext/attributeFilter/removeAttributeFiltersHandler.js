import { __generator, __read, __spread, __values } from "tslib";
// (C) 2021 GoodData Corporation
import { call, put, select } from "redux-saga/effects";
import { batchActions } from "redux-batched-actions";
import difference from "lodash/difference";
import partition from "lodash/partition";
import { invalidArgumentsProvided } from "../../../events/general";
import { attributeFilterRemoved } from "../../../events/filters";
import { filterContextActions } from "../../../store/filterContext";
import { selectFilterContextAttributeFilters } from "../../../store/filterContext/filterContextSelectors";
import { dispatchFilterContextChanged } from "../common";
import { dispatchDashboardEvent } from "../../../store/_infra/eventDispatcher";
import { layoutActions } from "../../../store/layout";
export function removeAttributeFiltersHandler(ctx, cmd) {
    var filterLocalIds, allFilters, _a, removedFilters, survivingFilters, invalidLocalIds, _loop_1, removedFilters_1, removedFilters_1_1, removedFilter, e_1_1;
    var e_1, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                filterLocalIds = cmd.payload.filterLocalIds;
                return [4 /*yield*/, select(selectFilterContextAttributeFilters)];
            case 1:
                allFilters = _c.sent();
                _a = __read(partition(allFilters, function (item) {
                    return filterLocalIds.includes(item.attributeFilter.localIdentifier);
                }), 2), removedFilters = _a[0], survivingFilters = _a[1];
                invalidLocalIds = difference(filterLocalIds, allFilters.map(function (filter) { return filter.attributeFilter.localIdentifier; }));
                if (invalidLocalIds.length) {
                    throw invalidArgumentsProvided(ctx, cmd, "Invalid filterLocalIds provided. These ids were not found: " + invalidLocalIds.join(", ") + ".");
                }
                _loop_1 = function (removedFilter) {
                    var affectedChildren, batch;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                affectedChildren = survivingFilters.filter(function (item) { var _a; return (_a = item.attributeFilter.filterElementsBy) === null || _a === void 0 ? void 0 : _a.some(function (parent) {
                                    return filterLocalIds.includes(parent.filterLocalIdentifier);
                                }); });
                                batch = batchActions(__spread(affectedChildren.map(function (_a) {
                                    var attributeFilter = _a.attributeFilter;
                                    return filterContextActions.setAttributeFilterParents({
                                        filterLocalId: attributeFilter.localIdentifier,
                                        parentFilters: attributeFilter.filterElementsBy.filter(function (parent) {
                                            return parent.filterLocalIdentifier !== (removedFilter === null || removedFilter === void 0 ? void 0 : removedFilter.attributeFilter.localIdentifier);
                                        }),
                                    });
                                }), [
                                    // remove filter itself
                                    filterContextActions.removeAttributeFilter({
                                        filterLocalId: removedFilter.attributeFilter.localIdentifier,
                                    }),
                                    // remove filter's display form metadata object
                                    filterContextActions.removeAttributeFilterDisplayForms(removedFilter.attributeFilter.displayForm),
                                    // house-keeping: ensure the removed attribute filter disappears from widget ignore lists
                                    layoutActions.removeIgnoredAttributeFilter({
                                        displayFormRefs: [removedFilter.attributeFilter.displayForm],
                                    }),
                                ]));
                                return [4 /*yield*/, put(batch)];
                            case 1:
                                _a.sent();
                                return [4 /*yield*/, dispatchDashboardEvent(attributeFilterRemoved(ctx, removedFilter, affectedChildren, cmd.correlationId))];
                            case 2:
                                _a.sent();
                                return [2 /*return*/];
                        }
                    });
                };
                _c.label = 2;
            case 2:
                _c.trys.push([2, 7, 8, 9]);
                removedFilters_1 = __values(removedFilters), removedFilters_1_1 = removedFilters_1.next();
                _c.label = 3;
            case 3:
                if (!!removedFilters_1_1.done) return [3 /*break*/, 6];
                removedFilter = removedFilters_1_1.value;
                return [5 /*yield**/, _loop_1(removedFilter)];
            case 4:
                _c.sent();
                _c.label = 5;
            case 5:
                removedFilters_1_1 = removedFilters_1.next();
                return [3 /*break*/, 3];
            case 6: return [3 /*break*/, 9];
            case 7:
                e_1_1 = _c.sent();
                e_1 = { error: e_1_1 };
                return [3 /*break*/, 9];
            case 8:
                try {
                    if (removedFilters_1_1 && !removedFilters_1_1.done && (_b = removedFilters_1.return)) _b.call(removedFilters_1);
                }
                finally { if (e_1) throw e_1.error; }
                return [7 /*endfinally*/];
            case 9: return [4 /*yield*/, call(dispatchFilterContextChanged, ctx, cmd)];
            case 10:
                _c.sent();
                return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=removeAttributeFiltersHandler.js.map