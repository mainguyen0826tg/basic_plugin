import { IInsight, IInsightDefinition } from "@gooddata/sdk-model";
import { IDrillDownContext, IExtendedReferencePoint, IReferencePoint, IUiConfig, IVisConstruct, IVisProps } from "../../../interfaces/Visualization";
import { PluggableBaseChart } from "../baseChart/PluggableBaseChart";
export declare class PluggableAreaChart extends PluggableBaseChart {
    constructor(props: IVisConstruct);
    getUiConfig(): IUiConfig;
    protected updateInstanceProperties(options: IVisProps, insight: IInsightDefinition, insightPropertiesMeta: any): void;
    getExtendedReferencePoint(referencePoint: IReferencePoint): Promise<IExtendedReferencePoint>;
    protected configureBuckets(extendedReferencePoint: IExtendedReferencePoint): void;
    protected getSupportedPropertiesList(): string[];
    private addFilters;
    getInsightWithDrillDownApplied(source: IInsight, drillDownContext: IDrillDownContext): IInsight;
    protected renderConfigurationPanel(insight: IInsightDefinition): void;
    private updateCustomSupportedProperties;
    private addSupportedProperties;
    private getAllAttributes;
    private getAllAttributesWithoutDate;
    private filterStackItems;
    private getBucketItems;
    private getViewByMaxItemCount;
    private getBucketItemsWithMultipleDates;
}
//# sourceMappingURL=PluggableAreaChart.d.ts.map