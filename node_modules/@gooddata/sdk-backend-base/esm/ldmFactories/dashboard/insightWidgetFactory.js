import { __extends } from "tslib";
// (C) 2019-2021 GoodData Corporation
import invariant from "ts-invariant";
import { isInsightWidgetDefinition, isInsightWidget, } from "@gooddata/sdk-backend-spi";
import { WidgetBaseBuilder } from "./widgetFactory";
/**
 * @alpha
 */
var InsightWidgetBuilder = /** @class */ (function (_super) {
    __extends(InsightWidgetBuilder, _super);
    function InsightWidgetBuilder(item, validator) {
        var _this = _super.call(this, item, validator) || this;
        _this.item = item;
        _this.validator = validator;
        _this.drills = function (valueOrUpdateCallback) {
            return _this.setWidgetProp("drills", valueOrUpdateCallback);
        };
        _this.insight = function (valueOrUpdateCallback) {
            return _this.setWidgetProp("insight", valueOrUpdateCallback);
        };
        _this.properties = function (valueOrUpdateCallback) { return _this.setWidgetProp("properties", valueOrUpdateCallback); };
        return _this;
    }
    InsightWidgetBuilder.for = function (insightWidget) {
        invariant(isInsightWidgetDefinition(insightWidget) || isInsightWidget(insightWidget), "Provided data must be IInsightWidget or IInsightWidgetDefinition!");
        return new InsightWidgetBuilder(insightWidget);
    };
    InsightWidgetBuilder.forNew = function (insight) {
        var emptyInsightWidget = {
            description: "",
            drills: [],
            ignoreDashboardFilters: [],
            title: "",
            type: "insight",
            insight: insight,
        };
        return InsightWidgetBuilder.for(emptyInsightWidget);
    };
    return InsightWidgetBuilder;
}(WidgetBaseBuilder));
export { InsightWidgetBuilder };
/**
 * @alpha
 */
export var newInsightWidget = function (insight, modifications) {
    return InsightWidgetBuilder.forNew(insight).modify(modifications).build();
};
//# sourceMappingURL=insightWidgetFactory.js.map