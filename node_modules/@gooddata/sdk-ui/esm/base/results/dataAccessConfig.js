import { numberFormat, colors2Object } from "@gooddata/numberjs";
import isEmpty from "lodash/isEmpty";
import escape from "lodash/escape";
import unescape from "lodash/unescape";
var customEscape = function (str) { return str && escape(unescape(str)); };
/**
 * Creates value formatter that uses `@gooddata/numberjs` to format raw measure values according
 * to the format string. By default, the format will strip away all the coloring information and
 * just return the value as string.
 *
 * @param separators - number separators to use. if not specified then `numberjs` defaults will be used
 * @public
 */
export function createNumberJsFormatter(separators) {
    return function (value, format) {
        var valueToFormat = value === null && !isEmpty(format) ? "" : parseFloat(value);
        var formattedValue = numberFormat(valueToFormat, format, undefined, separators);
        var formattedObject = colors2Object(formattedValue);
        return customEscape(formattedObject.label);
    };
}
/**
 * Default configuration for the data access methods. Uses default `@gooddata/numberjs` formatter and no result formatting.
 *
 * @public
 */
export var DefaultDataAccessConfig = {
    valueFormatter: createNumberJsFormatter(),
};
//# sourceMappingURL=dataAccessConfig.js.map