import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { Overlay } from "@gooddata/sdk-ui-kit";
export var DropdownVersionType;
(function (DropdownVersionType) {
    DropdownVersionType[DropdownVersionType["ColorPalette"] = 0] = "ColorPalette";
    DropdownVersionType[DropdownVersionType["ColorPicker"] = 1] = "ColorPicker";
})(DropdownVersionType || (DropdownVersionType = {}));
var ALIGN_POINTS_COLOR_PALETTE_PICKER = [
    {
        align: "bl tl",
        offset: {
            x: 0,
            y: 2,
        },
    },
    {
        align: "tl bl",
        offset: {
            x: 0,
            y: 2,
        },
    },
];
var ALIGN_POINTS_CUSTOM_COLOR_PICKER = [
    {
        align: "cr cl",
        offset: {
            x: 5,
            y: 0,
        },
    },
    {
        align: "br bl",
        offset: {
            x: 5,
            y: 100,
        },
    },
    {
        align: "br bl",
        offset: {
            x: 5,
            y: 0,
        },
    },
];
var ColorOverlay = /** @class */ (function (_super) {
    __extends(ColorOverlay, _super);
    function ColorOverlay() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stopScrollingPropagation = function () {
            document.body.addEventListener("wheel", _this.stopPropagation);
        };
        _this.startScrollingPropagation = function () {
            document.body.removeEventListener("wheel", _this.stopPropagation);
        };
        _this.stopPropagation = function (e) {
            e.stopPropagation();
        };
        _this.onClose = function () {
            _this.props.onClose();
        };
        return _this;
    }
    ColorOverlay.prototype.componentWillUnmount = function () {
        this.startScrollingPropagation();
    };
    ColorOverlay.prototype.render = function () {
        return (React.createElement(Overlay, { alignTo: this.props.alignTo, onClose: this.onClose, alignPoints: this.getAlignPoints(), closeOnOutsideClick: true, closeOnParentScroll: true, closeOnMouseDrag: true },
            React.createElement("div", { onMouseOver: this.stopScrollingPropagation, onMouseOut: this.startScrollingPropagation }, this.props.children)));
    };
    ColorOverlay.prototype.getAlignPoints = function () {
        if (this.props.dropdownVersion === DropdownVersionType.ColorPalette) {
            return ALIGN_POINTS_COLOR_PALETTE_PICKER;
        }
        return ALIGN_POINTS_CUSTOM_COLOR_PICKER;
    };
    return ColorOverlay;
}(React.PureComponent));
export default ColorOverlay;
//# sourceMappingURL=ColorOverlay.js.map