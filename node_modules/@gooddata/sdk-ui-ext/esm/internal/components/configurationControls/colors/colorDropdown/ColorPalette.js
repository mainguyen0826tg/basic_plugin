import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import cx from "classnames";
import ColorPaletteItem from "./ColorPaletteItem";
var MAX_SMALL_PALETTE_SIZE = 20;
var ColorPalette = /** @class */ (function (_super) {
    __extends(ColorPalette, _super);
    function ColorPalette() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onColorSelected = function (color) {
            _this.props.onColorSelected(color);
        };
        return _this;
    }
    ColorPalette.prototype.render = function () {
        return React.createElement("div", { className: this.getClassNames() }, this.renderItems());
    };
    ColorPalette.prototype.getClassNames = function () {
        var isColorPaletteLarge = this.isColorPaletteLarge();
        return cx({
            "gd-color-drop-down-list-large": isColorPaletteLarge,
            "gd-color-drop-down-list": !isColorPaletteLarge,
        }, "s-color-drop-down-list");
    };
    ColorPalette.prototype.renderItems = function () {
        var _this = this;
        return this.props.colorPalette.map(function (item) {
            return (React.createElement(ColorPaletteItem, { selected: _this.isItemSelected(item.guid), key: item.guid, paletteItem: item, onColorSelected: _this.onColorSelected }));
        });
    };
    ColorPalette.prototype.isColorPaletteLarge = function () {
        return this.props.colorPalette.length > MAX_SMALL_PALETTE_SIZE;
    };
    ColorPalette.prototype.isItemSelected = function (guid) {
        return this.props.selectedColorGuid === guid;
    };
    return ColorPalette;
}(React.PureComponent));
export default ColorPalette;
//# sourceMappingURL=ColorPalette.js.map