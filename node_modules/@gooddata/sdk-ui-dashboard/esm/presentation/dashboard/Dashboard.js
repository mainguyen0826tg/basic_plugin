import { __assign } from "tslib";
// (C) 2021 GoodData Corporation
import React, { useCallback, useMemo } from "react";
import { ToastMessageContextProvider } from "@gooddata/sdk-ui-kit";
import { ErrorComponent as DefaultError, LoadingComponent as DefaultLoading } from "@gooddata/sdk-ui";
import { ThemeProvider, useThemeIsLoading } from "@gooddata/sdk-ui-theme-provider";
import { DashboardComponentsProvider, DashboardConfigProvider, DashboardCustomizationsProvider, ExportDialogContextProvider, useDashboardComponentsContext, } from "../dashboardContexts";
import { DefaultDashboardAttributeFilter, DefaultDashboardDateFilter, DefaultFilterBar, } from "../filterBar";
import { DefaultDashboardInsight, DefaultDashboardInsightMenu, DefaultDashboardInsightMenuButton, DefaultDashboardKpi, DefaultDashboardWidget, LegacyDashboardInsightMenu, LegacyDashboardInsightMenuButton, } from "../widget";
import { DashboardLayout, DefaultDashboardLayout } from "../layout";
import { IntlWrapper } from "../localization";
import { changeFilterContextSelection, DashboardStoreProvider, selectDashboardLoading, selectFilterBarExpanded, selectFilterBarHeight, selectIsEmbedded, selectLocale, useDashboardSelector, useDispatchDashboardCommand, } from "../../model";
import { DefaultScheduledEmailDialog } from "../scheduledEmail";
import { DefaultButtonBar, DefaultMenuButton, DefaultTitle, DefaultTopBar } from "../topBar";
import { defaultDashboardThemeModifier } from "./defaultDashboardThemeModifier";
import { DefaultSaveAsDialog } from "../saveAs";
import { DEFAULT_FILTER_BAR_HEIGHT } from "../constants";
import { DefaultShareDialog } from "../shareDialog";
import { DashboardHeader } from "./DashboardHeader/DashboardHeader";
var DashboardMainContent = function () {
    var isFilterBarExpanded = useDashboardSelector(selectFilterBarExpanded);
    var isEmbedded = useDashboardSelector(selectIsEmbedded);
    var filterBarHeight = useDashboardSelector(selectFilterBarHeight);
    var onFiltersChange = useDispatchDashboardCommand(changeFilterContextSelection);
    var dashSectionStyles = useMemo(function () { return ({
        marginTop: isFilterBarExpanded && !isEmbedded
            ? filterBarHeight - DEFAULT_FILTER_BAR_HEIGHT + "px"
            : undefined,
        transition: "margin-top 0.2s",
    }); }, [isFilterBarExpanded, filterBarHeight]);
    return (React.createElement("div", { className: "gd-flex-item-stretch dash-section dash-section-kpis", style: dashSectionStyles },
        React.createElement("div", { className: "gd-flex-container root-flex-maincontent" },
            React.createElement(DashboardLayout, { onFiltersChange: onFiltersChange }))));
};
var DashboardInner = function () {
    var locale = useDashboardSelector(selectLocale);
    return (React.createElement(IntlWrapper, { locale: locale },
        React.createElement("div", { className: "gd-dashboards-root" },
            React.createElement("div", { className: "gd-dash-header-wrapper" },
                React.createElement(DashboardHeader, null)),
            React.createElement(DashboardMainContent, null))));
};
var DashboardLoading = function (props) {
    var _a = useDashboardSelector(selectDashboardLoading), loading = _a.loading, error = _a.error, result = _a.result;
    var _b = useDashboardComponentsContext(), ErrorComponent = _b.ErrorComponent, LoadingComponent = _b.LoadingComponent;
    if (error) {
        return React.createElement(ErrorComponent, { message: error.message });
    }
    if (loading || !result) {
        return React.createElement(LoadingComponent, null);
    }
    return React.createElement(DashboardInner, __assign({}, props));
};
/**
 * @internal
 */
export var Dashboard = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
    var attributeFilterProvider = useCallback(function (filter) {
        var _a;
        var userSpecified = (_a = props.DashboardAttributeFilterComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, filter);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardAttributeFilter;
    }, [props.DashboardAttributeFilterComponentProvider]);
    var widgetProvider = useCallback(function (widget) {
        var _a;
        var userSpecified = (_a = props.WidgetComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardWidget;
    }, [props.WidgetComponentProvider]);
    var insightProvider = useCallback(function (insight, widget) {
        var _a;
        var userSpecified = (_a = props.InsightComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, insight, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardInsight;
    }, [props.InsightComponentProvider]);
    var insightMenuButtonProvider = useCallback(function (insight, widget) {
        var _a;
        var userSpecified = (_a = props.InsightMenuButtonComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, insight, widget);
        // if user customizes the items, always use the "new" default menu button
        var FallbackDashboardInsightMenuButtonInner = props.insightMenuItemsProvider
            ? DefaultDashboardInsightMenuButton
            : LegacyDashboardInsightMenuButton;
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuButtonInner;
    }, [props.InsightMenuButtonComponentProvider]);
    var insightMenuProvider = useCallback(function (insight, widget) {
        var _a;
        var userSpecified = (_a = props.InsightMenuComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, insight, widget);
        // if user customizes the items, always use the "new" default menu
        var FallbackDashboardInsightMenuInner = props.insightMenuItemsProvider
            ? DefaultDashboardInsightMenu
            : LegacyDashboardInsightMenu;
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuInner;
    }, [props.InsightMenuComponentProvider]);
    var kpiProvider = useCallback(function (kpi, widget) {
        var _a;
        var userSpecified = (_a = props.KpiComponentProvider) === null || _a === void 0 ? void 0 : _a.call(props, kpi, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardKpi;
    }, [props.KpiComponentProvider]);
    var isThemeLoading = useThemeIsLoading();
    var hasThemeProvider = isThemeLoading !== undefined;
    var dashboardRender = (React.createElement(DashboardStoreProvider, { backend: props.backend, workspace: props.workspace, dashboard: props.dashboard, filterContextRef: props.filterContextRef, eventHandlers: props.eventHandlers, config: props.config, permissions: props.permissions, onStateChange: props.onStateChange, onEventingInitialized: props.onEventingInitialized, additionalReduxContext: props.additionalReduxContext, customizationFns: props.customizationFns },
        React.createElement(ToastMessageContextProvider, null,
            React.createElement(ExportDialogContextProvider, null,
                React.createElement(DashboardCustomizationsProvider, { insightMenuItemsProvider: props.insightMenuItemsProvider },
                    React.createElement(DashboardComponentsProvider, { ErrorComponent: (_a = props.ErrorComponent) !== null && _a !== void 0 ? _a : DefaultError, LoadingComponent: (_b = props.LoadingComponent) !== null && _b !== void 0 ? _b : DefaultLoading, LayoutComponent: (_c = props.LayoutComponent) !== null && _c !== void 0 ? _c : DefaultDashboardLayout, InsightComponentProvider: insightProvider, InsightMenuButtonComponentProvider: insightMenuButtonProvider, InsightMenuComponentProvider: insightMenuProvider, KpiComponentProvider: kpiProvider, WidgetComponentProvider: widgetProvider, ButtonBarComponent: (_d = props.ButtonBarComponent) !== null && _d !== void 0 ? _d : DefaultButtonBar, MenuButtonComponent: (_e = props.MenuButtonComponent) !== null && _e !== void 0 ? _e : DefaultMenuButton, TopBarComponent: (_f = props.TopBarComponent) !== null && _f !== void 0 ? _f : DefaultTopBar, TitleComponent: (_g = props.TitleComponent) !== null && _g !== void 0 ? _g : DefaultTitle, ScheduledEmailDialogComponent: (_h = props.ScheduledEmailDialogComponent) !== null && _h !== void 0 ? _h : DefaultScheduledEmailDialog, ShareDialogComponent: (_j = props.ShareDialogComponent) !== null && _j !== void 0 ? _j : DefaultShareDialog, SaveAsDialogComponent: (_k = props.SaveAsDialogComponent) !== null && _k !== void 0 ? _k : DefaultSaveAsDialog, DashboardAttributeFilterComponentProvider: attributeFilterProvider, DashboardDateFilterComponent: (_l = props.DashboardDateFilterComponent) !== null && _l !== void 0 ? _l : DefaultDashboardDateFilter, FilterBarComponent: (_m = props.FilterBarComponent) !== null && _m !== void 0 ? _m : DefaultFilterBar },
                        React.createElement(DashboardConfigProvider, { menuButtonConfig: props.menuButtonConfig },
                            React.createElement(DashboardLoading, __assign({}, props)))))))));
    if (props.theme || (!hasThemeProvider && !props.disableThemeLoading)) {
        dashboardRender = (React.createElement(ThemeProvider, { theme: props.theme, modifier: (_o = props.themeModifier) !== null && _o !== void 0 ? _o : defaultDashboardThemeModifier, backend: props.backend, workspace: props.workspace }, dashboardRender));
    }
    return dashboardRender;
};
//# sourceMappingURL=Dashboard.js.map