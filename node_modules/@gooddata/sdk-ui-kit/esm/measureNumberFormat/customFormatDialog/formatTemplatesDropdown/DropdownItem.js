import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React from "react";
import { FormattedMessage } from "react-intl";
import { stringUtils } from "@gooddata/util";
import PreviewRows from "../shared/PreviewRows";
import { Bubble } from "../../../Bubble";
function templateDropdownItemId(template) {
    return "gd-format-preset-template-" + template.localIdentifier;
}
var DropdownItem = /** @class */ (function (_super) {
    __extends(DropdownItem, _super);
    function DropdownItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            displayHelp: false,
        };
        _this.onClick = function () {
            _this.props.onClick(_this.props.template);
        };
        _this.toggleHelp = function () {
            _this.setState(function (state) { return ({ displayHelp: !state.displayHelp }); });
        };
        return _this;
    }
    DropdownItem.prototype.render = function () {
        var _a = this.props, template = _a.template, separators = _a.separators;
        var displayHelp = this.state.displayHelp;
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { id: templateDropdownItemId(template), className: "gd-list-item gd-format-preset gd-format-template s-measure-format-template-" + stringUtils.simplifyText(template.name), onClick: this.onClick },
                React.createElement("span", { title: template.name, className: "gd-format-preset-name gd-list-item-shortened" }, template.name),
                React.createElement("div", { className: "gd-format-template-help gd-icon-circle-question s-measure-format-template-help-toggle-icon", onMouseEnter: this.toggleHelp, onMouseLeave: this.toggleHelp })),
            displayHelp && (React.createElement(Bubble, { alignTo: "#" + templateDropdownItemId(template), className: "gd-measure-format-template-preview-bubble bubble-light s-measure-format-template-help-bubble-" + stringUtils.simplifyText(template.name), alignPoints: [{ align: "cr cl" }, { align: "cr bl" }, { align: "cr tl" }] },
                React.createElement("h3", { className: "gd-measure-format-template-preview-bubble-title" }, template.name),
                React.createElement("div", { className: "gd-measure-format-template-preview-bubble-subtitle s-measure-format-template-help-preview-" + stringUtils.simplifyText(template.name) },
                    React.createElement(FormattedMessage, { id: "measureNumberCustomFormatDialog.template.preview.title" })),
                React.createElement(PreviewRows, { previewNumbers: [
                        -1234567.891, -1234.567, -1.234, 0, 1.234, 1234.567, 1234567.891,
                    ], format: template.format, separators: separators })))));
    };
    return DropdownItem;
}(React.Component));
export default DropdownItem;
//# sourceMappingURL=DropdownItem.js.map