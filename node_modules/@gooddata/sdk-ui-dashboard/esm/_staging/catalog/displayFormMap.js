// (C) 2021 GoodData Corporation
import { __read, __spread } from "tslib";
import { newDisplayFormMap } from "../metadata/objRefMap";
import flatMap from "lodash/flatMap";
/**
 * Factory function that extracts all display forms from catalog entities and returns a map indexing display
 * form `ref` to display form metadata object.
 *
 * The lookups into the map can be done by any type of ObjRef.
 *
 * @param attributes - catalog attributes
 * @param dateDatasets - catalog date datasets
 * @param strictTypeChecking - optionally indicate whether strict type checking should be done using 'type' property of input `idRef`; default is false - the type information will be ignored
 * @alpha
 */
export function createDisplayFormMap(attributes, dateDatasets, strictTypeChecking) {
    if (strictTypeChecking === void 0) { strictTypeChecking = false; }
    var nonDateDisplayForms = flatMap(attributes, function (a) { return __spread(a.displayForms, a.geoPinDisplayForms); });
    var dateDisplayForms = flatMap(dateDatasets, function (d) {
        return flatMap(d.dateAttributes, function (a) { return a.attribute.displayForms; });
    });
    return newDisplayFormMap(__spread(nonDateDisplayForms, dateDisplayForms), strictTypeChecking);
}
/**
 * Factory function that extracts all display forms from workspace catalog and returns a map indexing
 * display form's `ref` to display form metadata object.
 *
 * The lookups into the map can be done by any type of ObjRef.
 *
 * @param catalog - workspace catalog
 * @param strictTypeChecking - optionally indicate whether strict type checking should be done using 'type' property of input `idRef`; default is false - the type information will be ignored
 * @alpha
 */
export function createDisplayFormMapFromCatalog(catalog, strictTypeChecking) {
    if (strictTypeChecking === void 0) { strictTypeChecking = false; }
    return createDisplayFormMap(catalog.attributes(), catalog.dateDatasets(), strictTypeChecking);
}
//# sourceMappingURL=displayFormMap.js.map