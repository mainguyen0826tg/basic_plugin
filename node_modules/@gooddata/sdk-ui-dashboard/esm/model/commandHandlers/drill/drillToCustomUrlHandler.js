import { __generator, __read } from "tslib";
import { all, call, put } from "redux-saga/effects";
import { drillToCustomUrlRequested, drillToCustomUrlResolved, } from "../../events/drill";
import { resolveDrillToCustomUrl } from "./resolveDrillToCustomUrl";
import { getDrillToUrlFiltersWithResolvedValues } from "./getDrillToUrlFilters";
export function drillToCustomUrlHandler(ctx, cmd) {
    var _a, resolvedUrl, filtersInfo;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, put(drillToCustomUrlRequested(ctx, cmd.payload.drillDefinition, cmd.payload.drillEvent, cmd.correlationId))];
            case 1:
                _b.sent();
                return [4 /*yield*/, all([
                        call(resolveDrillToCustomUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent.widgetRef, cmd.payload.drillEvent, ctx, cmd),
                        call(getDrillToUrlFiltersWithResolvedValues, ctx, cmd.payload.drillEvent.widgetRef),
                    ])];
            case 2:
                _a = __read.apply(void 0, [_b.sent(), 2]), resolvedUrl = _a[0], filtersInfo = _a[1];
                return [2 /*return*/, drillToCustomUrlResolved(ctx, resolvedUrl, cmd.payload.drillDefinition, cmd.payload.drillEvent, filtersInfo, cmd.correlationId)];
        }
    });
}
//# sourceMappingURL=drillToCustomUrlHandler.js.map