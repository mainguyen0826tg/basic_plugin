import { __awaiter, __generator } from "tslib";
import { TigerUserSettingsService } from "./settings";
import { convertUser } from "../../convertors/fromBackend/UsersConverter";
var TigerUserService = /** @class */ (function () {
    function TigerUserService(authCall) {
        this.authCall = authCall;
    }
    TigerUserService.prototype.settings = function () {
        return new TigerUserSettingsService(this.authCall);
    };
    TigerUserService.prototype.getUser = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                // TODO: replace with direct call of TigerClient (once methods are generated from OpenAPI)
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var profile;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, client.axios.get("/api/profile")];
                                case 1:
                                    profile = _a.sent();
                                    return [2 /*return*/, convertUser(profile.data)];
                            }
                        });
                    }); })];
            });
        });
    };
    return TigerUserService;
}());
export { TigerUserService };
//# sourceMappingURL=index.js.map