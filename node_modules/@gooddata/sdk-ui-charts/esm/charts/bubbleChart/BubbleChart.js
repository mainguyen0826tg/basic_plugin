import { __assign } from "tslib";
// (C) 2007-2018 GoodData Corporation
import React from "react";
import { newBucket } from "@gooddata/sdk-model";
import { BucketNames, useResolveValuesWithPlaceholders, } from "@gooddata/sdk-ui";
import { pointyChartDimensions } from "../_commons/dimensions";
import { CoreBubbleChart } from "./CoreBubbleChart";
import { withChart } from "../_base/withChart";
//
// Internals
//
var bubbleChartDefinition = {
    chartName: "BubbleChart",
    bucketPropsKeys: ["xAxisMeasure", "yAxisMeasure", "size", "viewBy", "filters", "sortBy"],
    bucketsFactory: function (props) {
        return [
            newBucket(BucketNames.MEASURES, props.xAxisMeasure),
            newBucket(BucketNames.SECONDARY_MEASURES, props.yAxisMeasure),
            newBucket(BucketNames.TERTIARY_MEASURES, props.size),
            newBucket(BucketNames.VIEW, props.viewBy),
        ];
    },
    executionFactory: function (props, buckets) {
        var _a;
        var backend = props.backend, workspace = props.workspace, execConfig = props.execConfig;
        return (_a = backend
            .withTelemetry("BubbleChart", props)
            .workspace(workspace)
            .execution()
            .forBuckets(buckets, props.filters))
            .withSorting.apply(_a, props.sortBy).withDimensions(pointyChartDimensions)
            .withExecConfig(execConfig);
    },
};
var WrappedBubbleChart = withChart(bubbleChartDefinition)(CoreBubbleChart);
/**
 * [BubbleChart](https://sdk.gooddata.com/gooddata-ui/docs/bubble_chart_component.html)
 *
 * Bubble chart shows data as bubbles using Cartesian coordinates. Bubble charts typically have three measures, one
 * for the X-axis, one for the Y-axis, and one that determines the size of each bubble. The data is sliced by an
 * attribute, with each bubble (an attribute item) noted with a different color.
 *
 * @public
 */
export var BubbleChart = function (props) {
    var _a = useResolveValuesWithPlaceholders([props.xAxisMeasure, props.yAxisMeasure, props.size, props.viewBy, props.filters, props.sortBy], props.placeholdersResolutionContext), xAxisMeasure = _a[0], yAxisMeasure = _a[1], size = _a[2], viewBy = _a[3], filters = _a[4], sortBy = _a[5];
    return (React.createElement(WrappedBubbleChart, __assign({}, props, {
        xAxisMeasure: xAxisMeasure,
        yAxisMeasure: yAxisMeasure,
        size: size,
        viewBy: viewBy,
        filters: filters,
        sortBy: sortBy,
    })));
};
//# sourceMappingURL=BubbleChart.js.map