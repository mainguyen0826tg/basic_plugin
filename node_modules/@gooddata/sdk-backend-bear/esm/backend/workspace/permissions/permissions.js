import { __awaiter, __generator } from "tslib";
import { convertPermissions } from "../../../convertors/toBackend/WorkspaceConverter";
var emptyPermissions = { permissions: {} };
var BearWorkspacePermissionsFactory = /** @class */ (function () {
    function BearWorkspacePermissionsFactory(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    BearWorkspacePermissionsFactory.prototype.getPermissionsForCurrentUser = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var bootstrapResource;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (sdk) {
                            return sdk.user.getBootstrapResource({ projectId: _this.workspace });
                        })];
                    case 1:
                        bootstrapResource = _b.sent();
                        return [2 /*return*/, convertPermissions(((_a = bootstrapResource.bootstrapResource.current) === null || _a === void 0 ? void 0 : _a.projectPermissions) || emptyPermissions)];
                }
            });
        });
    };
    return BearWorkspacePermissionsFactory;
}());
export { BearWorkspacePermissionsFactory };
//# sourceMappingURL=permissions.js.map