import cx from "classnames";
import { agColId, ColumnGroupingDescriptorId, isSeriesCol, isSliceCol } from "./tableDescriptorTypes";
export function headerClassFactory(table, _props, classList) {
    return function (headerClassParams) {
        var tableDescriptor = table.tableDescriptor;
        var colDef = headerClassParams.colDef;
        var colId = agColId(colDef);
        if (!colId) {
            return cx(classList);
        }
        if (colId === ColumnGroupingDescriptorId) {
            // This is the special, presentation-only ColGroupDef which communicates to the user
            // what attributes are used for grouping the column header.
            return cx(classList, "gd-column-group-header", "s-table-column-group-header-descriptor", !tableDescriptor.sliceColCount() ? "gd-column-group-header--first" : null);
        }
        else {
            var colDesc = tableDescriptor.getCol(colId);
            var treeIndexes = colDesc.fullIndexPathToHere;
            var indexWithinGroup = treeIndexes ? treeIndexes[treeIndexes.length - 1] : undefined;
            var noLeftBorder = tableDescriptor.isFirstCol(colId) || !tableDescriptor.hasScopingCols();
            var absoluteColIndex = isSeriesCol(colDesc)
                ? tableDescriptor.getAbsoluteLeafColIndex(colDesc)
                : undefined;
            return cx(classList, "gd-column-group-header", 
            // Funny stuff begin
            // NOTE: this funny stuff is here to mimic how selectors were originally created.it does not seem
            //  to make much sense :)
            indexWithinGroup !== undefined ? "gd-column-group-header-" + indexWithinGroup : null, indexWithinGroup !== undefined
                ? "s-table-measure-column-header-group-cell-" + indexWithinGroup
                : null, 
            // Funny stuff end
            indexWithinGroup !== undefined && !isSliceCol(colDesc)
                ? "s-table-measure-column-header-cell-" + indexWithinGroup
                : null, absoluteColIndex !== undefined
                ? "s-table-measure-column-header-index-" + absoluteColIndex
                : null, noLeftBorder ? "gd-column-group-header--first" : null, !colDef.headerName ? "gd-column-group-header--empty" : null);
        }
    };
}
//# sourceMappingURL=colDefHeaderClass.js.map