import { __spreadArrays } from "tslib";
// (C) 2007-2021 GoodData Corporation
import React, { useState } from "react";
import { useIntl } from "react-intl";
import { StaticLegend } from "../StaticLegend";
import { LegendDialog } from "./LegendDialog";
import { RowLegend } from "./RowLegend";
var PAGINATION_HEIGHT = 34;
/**
 * @internal
 */
export var PopUpLegend = function (props) {
    var name = props.name, maxRows = props.maxRows, enableBorderRadius = props.enableBorderRadius, series = props.series, onLegendItemClick = props.onLegendItemClick, containerId = props.containerId, customComponent = props.customComponent, customComponentName = props.customComponentName;
    var intl = useIntl();
    var _a = useState(false), isDialogOpen = _a[0], setDialogOpen = _a[1];
    var _b = useState(1), page = _b[0], setPage = _b[1];
    var dialogTitle = (page === 1 && customComponentName) || name || intl.formatMessage({ id: "properties.legend.title" });
    var onCloseDialog = function () {
        setDialogOpen(false);
        setPage(1);
    };
    return (React.createElement("div", null,
        React.createElement(RowLegend, { legendLabel: name, maxRowsCount: maxRows, series: __spreadArrays(series), onDialogIconClick: function () {
                setDialogOpen(function (prevState) { return !prevState; });
            }, onLegendItemClick: onLegendItemClick, enableBorderRadius: enableBorderRadius, isActive: isDialogOpen }),
        React.createElement(LegendDialog, { name: dialogTitle, alignTo: "." + containerId, isOpen: isDialogOpen, onCloseDialog: onCloseDialog },
            React.createElement(StaticLegend, { containerHeight: 260, series: __spreadArrays(series), position: "dialog", buttonOrientation: "leftRight", onItemClick: onLegendItemClick, shouldFillAvailableSpace: false, enableBorderRadius: enableBorderRadius, paginationHeight: PAGINATION_HEIGHT, customComponent: customComponent, onPageChanged: setPage }))));
};
//# sourceMappingURL=PopUpLegend.js.map