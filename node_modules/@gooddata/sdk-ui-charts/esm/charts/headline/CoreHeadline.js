import { __assign, __extends } from "tslib";
// (C) 2007-2018 GoodData Corporation
import React from "react";
import { fixEmptyHeaderItems } from "@gooddata/sdk-ui-vis-commons";
import { newErrorMapping, IntlTranslationsProvider, IntlWrapper, ErrorCodes, withEntireDataView, } from "@gooddata/sdk-ui";
import HeadlineTransformation from "./internal/HeadlineTransformation";
import { defaultCoreChartProps } from "../_commons/defaultProps";
var HeadlineStateless = /** @class */ (function (_super) {
    __extends(HeadlineStateless, _super);
    function HeadlineStateless(props) {
        var _this = _super.call(this, props) || this;
        _this.errorMap = newErrorMapping(props.intl);
        return _this;
    }
    HeadlineStateless.prototype.render = function () {
        var _a = this.props, dataView = _a.dataView, error = _a.error, isLoading = _a.isLoading;
        var ErrorComponent = this.props.ErrorComponent;
        var LoadingComponent = this.props.LoadingComponent;
        if (error) {
            var errorProps = this.errorMap[Object.prototype.hasOwnProperty.call(this.errorMap, error)
                ? error
                : ErrorCodes.UNKNOWN_ERROR];
            return ErrorComponent ? React.createElement(ErrorComponent, __assign({ code: error }, errorProps)) : null;
        }
        // when in pageble mode (getPage present) never show loading (its handled by the component)
        if (isLoading || !dataView) {
            return LoadingComponent ? React.createElement(LoadingComponent, null) : null;
        }
        return this.renderVisualization();
    };
    HeadlineStateless.prototype.renderVisualization = function () {
        var _a = this.props, afterRender = _a.afterRender, drillableItems = _a.drillableItems, locale = _a.locale, dataView = _a.dataView, onDrill = _a.onDrill, config = _a.config;
        return (React.createElement(IntlWrapper, { locale: locale },
            React.createElement(IntlTranslationsProvider, null, function (props) {
                // TODO: evil; fix this conceptually
                fixEmptyHeaderItems(dataView, "(" + props.emptyHeaderString + ")");
                return (React.createElement(HeadlineTransformation, { dataView: dataView, onAfterRender: afterRender, onDrill: onDrill, drillableItems: drillableItems, config: config }));
            })));
    };
    HeadlineStateless.defaultProps = defaultCoreChartProps;
    return HeadlineStateless;
}(React.Component));
export { HeadlineStateless };
/**
 * NOTE: exported to satisfy sdk-ui-ext; is internal, must not be used outside of SDK; will disapppear.
 *
 * @internal
 */
export var CoreHeadline = withEntireDataView(HeadlineStateless);
//# sourceMappingURL=CoreHeadline.js.map