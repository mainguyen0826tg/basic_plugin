// (C) 2021 GoodData Corporation
import React from "react";
import { AttributeDropdownButtons } from "./AttributeDropdownButtons";
import { BubbleHoverTrigger, Bubble } from "@gooddata/sdk-ui-kit";
import { FormattedMessage, FormattedHTMLMessage } from "react-intl";
/**
 * @internal
 */
export var AttributeDropdownAllFilteredOutBody = function (_a) {
    var isMobile = _a.isMobile, parentFilterTitles = _a.parentFilterTitles, onApplyButtonClick = _a.onApplyButtonClick, onCancelButtonClick = _a.onCancelButtonClick;
    return (React.createElement("div", { className: "gd-attribute-filter-overlay", style: { width: isMobile ? "auto" : "245px" } },
        React.createElement("div", { className: "gd-attribute-filter-dropdown-all-items-filtered s-attribute-filter-dropdown-all-items-filtered" },
            React.createElement(BubbleHoverTrigger, { showDelay: 0, hideDelay: 0 },
                React.createElement("div", { className: "gd-filtered-message" },
                    React.createElement(FormattedMessage, { id: "attributesDropdown.allItemsFiltered" }),
                    React.createElement("span", { className: "gd-icon-circle-question" })),
                React.createElement(Bubble, { className: "bubble-primary gd-attribute-filter-dropdown-bubble s-attribute-filter-dropdown-bubble", alignPoints: [{ align: "bc tc" }], arrowOffsets: { "bc tc": [0, 15] } },
                    React.createElement(FormattedHTMLMessage, { id: "attributesDropdown.itemsFiltered.tooltip", values: { filters: parentFilterTitles.join(", ") } })))),
        React.createElement(AttributeDropdownButtons, { applyDisabled: true, onApplyButtonClicked: onApplyButtonClick, onCloseButtonClicked: onCancelButtonClick })));
};
//# sourceMappingURL=AttributeDropdownAllFilteredOutBody.js.map