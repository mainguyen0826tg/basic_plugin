import { DependencyList } from "react";
import { IPreparedExecution } from "@gooddata/sdk-backend-spi";
import { DataViewWindow } from "./withExecutionLoading";
import { DataViewFacade, GoodDataSdkError, UseCancelablePromiseCallbacks, UseCancelablePromiseState } from "../base";
/**
 * Indicates current state of useDataView hook
 * @beta
 */
export declare type UseDataViewState = UseCancelablePromiseState<DataViewFacade, GoodDataSdkError>;
/**
 * Callbacks for useDataView hook
 * @beta
 */
export declare type UseDataViewCallbacks = UseCancelablePromiseCallbacks<DataViewFacade, GoodDataSdkError>;
/**
 * This hook provides easy way to get data for the provided {@link @gooddata/sdk-backend-spi#IPreparedExecution}.
 * You can use it to create custom visualizations on top of GoodData platform.
 * Be aware that execution is re-executed only on dependency list change, not on execution/window/callbacks change.
 *
 * @beta
 */
export declare function useDataView({ execution, window, onCancel, onError, onLoading, onPending, onSuccess, }: {
    execution: IPreparedExecution | undefined | null;
    window?: DataViewWindow;
} & UseDataViewCallbacks, deps?: DependencyList): UseDataViewState;
//# sourceMappingURL=useDataView.d.ts.map