import React from "react";
import { WrappedComponentProps } from "react-intl";
import { IInsightWidget, ScreenSize } from "@gooddata/sdk-backend-spi";
import { OnError, OnExportReady, OnLoadingChanged } from "@gooddata/sdk-ui";
interface IDefaultDashboardInsightWidgetProps {
    widget: IInsightWidget;
    screen: ScreenSize;
    onLoadingChanged?: OnLoadingChanged;
    onExportReady?: OnExportReady;
    onError?: OnError;
}
export declare const DefaultDashboardInsightWidget: React.ForwardRefExoticComponent<Pick<IDefaultDashboardInsightWidgetProps & WrappedComponentProps<"intl">, "screen" | "onError" | "onExportReady" | "onLoadingChanged" | "widget"> & {
    forwardedRef?: React.RefObject<any> | ((instance: any) => void) | null | undefined;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IDefaultDashboardInsightWidgetProps & WrappedComponentProps<"intl">>;
};
export {};
//# sourceMappingURL=DefaultDashboardInsightWidget.d.ts.map