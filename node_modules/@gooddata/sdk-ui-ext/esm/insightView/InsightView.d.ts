import React from "react";
import { WrappedComponentProps } from "react-intl";
import { IInsightViewProps } from "./types";
export declare const IntlInsightView: React.ComponentType<Pick<IInsightViewProps & WrappedComponentProps<"intl">, "insight" | "locale" | "onError" | "filters" | "config" | "execConfig" | "drillableItems" | "ErrorComponent" | "LoadingComponent" | "onExportReady" | "onLoadingChanged" | "onDrill" | "afterRender" | "pushData" | "colorPalette" | "workspace" | "backend" | "TitleComponent" | "onInsightLoaded" | "showTitle" | "executeByReference"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>>;
/**
 * Renders insight which was previously created and saved in the Analytical Designer.
 *
 * @public
 */
export declare class InsightView extends React.Component<IInsightViewProps> {
    render(): React.ReactNode;
}
//# sourceMappingURL=InsightView.d.ts.map