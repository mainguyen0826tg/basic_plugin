import { __spreadArrays } from "tslib";
import ApiWrapper from "../base/agApiWrapper";
import isEqual from "lodash/isEqual";
import { ROW_SUBTOTAL, ROW_TOTAL } from "../base/constants";
export function areTotalsChanged(gridApi, newTotals) {
    var _a, _b;
    var currentTotalsCount = (_a = gridApi === null || gridApi === void 0 ? void 0 : gridApi.getPinnedBottomRowCount()) !== null && _a !== void 0 ? _a : 0;
    var newTotalsCount = (_b = newTotals === null || newTotals === void 0 ? void 0 : newTotals.length) !== null && _b !== void 0 ? _b : 0;
    if (currentTotalsCount !== newTotalsCount) {
        return true;
    }
    for (var i = 0; i < currentTotalsCount; i++) {
        if (!isEqual(gridApi === null || gridApi === void 0 ? void 0 : gridApi.getPinnedBottomRow(i).data, newTotals[i])) {
            return true;
        }
    }
    return false;
}
export function isInvalidGetRowsRequest(startRow, gridApi) {
    var bottomRowIndex = gridApi ? ApiWrapper.getPaginationBottomRowIndex(gridApi) : null;
    if (bottomRowIndex !== null) {
        return startRow > bottomRowIndex;
    }
    return false;
}
export function isSomeTotal(rowType) {
    var isRowTotal = rowType === ROW_TOTAL;
    var isRowSubtotal = rowType === ROW_SUBTOTAL;
    return isRowTotal || isRowSubtotal;
}
export function getSubtotalStyles(dimension) {
    if (!dimension || !dimension.totals) {
        return [];
    }
    var even = false;
    var subtotalStyles = dimension.itemIdentifiers.slice(1).map(function (attributeIdentifier) {
        var _a, _b;
        var hasSubtotal = (_b = (_a = dimension.totals) === null || _a === void 0 ? void 0 : _a.some(function (total) { return total.attributeIdentifier === attributeIdentifier; })) !== null && _b !== void 0 ? _b : false;
        if (hasSubtotal) {
            even = !even;
            return even ? "even" : "odd";
        }
        return null;
    });
    // Grand total (first) has no styles
    return __spreadArrays([null], subtotalStyles);
}
//# sourceMappingURL=dataSourceUtils.js.map