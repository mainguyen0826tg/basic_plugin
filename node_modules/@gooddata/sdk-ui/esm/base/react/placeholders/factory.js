// (C) 2019-2021 GoodData Corporation
import { v4 as uuidv4 } from "uuid";
import identity from "lodash/identity";
import { useComposedPlaceholder, usePlaceholder } from "./hooks";
/**
 * Create a new placeholder.
 * See {@link IPlaceholder}.
 *
 * @public
 */
export function newPlaceholder(defaultValue, options) {
    if (options === void 0) { options = {}; }
    var id = options.id, validate = options.validate;
    var placeholder = {
        type: "IPlaceholder",
        id: id !== null && id !== void 0 ? id : uuidv4(),
        defaultValue: defaultValue,
        validate: validate,
        use: function () { return usePlaceholder(placeholder); },
    };
    return placeholder;
}
/**
 * Create a new composed placeholder.
 * See {@link IComposedPlaceholder}.
 *
 * @public
 */
export function newComposedPlaceholder(placeholders, computeValue) {
    if (computeValue === void 0) { computeValue = identity; }
    var placeholder = {
        type: "IComposedPlaceholder",
        placeholders: placeholders,
        computeValue: computeValue,
        use: function (resolutionContext) { return useComposedPlaceholder(placeholder, resolutionContext); },
    };
    return placeholder;
}
//# sourceMappingURL=factory.js.map