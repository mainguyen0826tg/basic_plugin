import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import DropdownControl from "../DropdownControl";
import { getTranslatedDropdownItems } from "../../../utils/translations";
import { xAxisPositionDropdownItems, yAxisPositionDropdownItems } from "../../../constants/dropdowns";
var NamePositionControl = /** @class */ (function (_super) {
    __extends(NamePositionControl, _super);
    function NamePositionControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NamePositionControl.prototype.render = function () {
        var _a = this.getControlProperties(), axisVisible = _a.axisVisible, axisNameVisible = _a.axisNameVisible, namePosition = _a.namePosition;
        var _b = this.props, axis = _b.axis, properties = _b.properties, pushData = _b.pushData, disabled = _b.disabled, configPanelDisabled = _b.configPanelDisabled, intl = _b.intl;
        var isDisabled = disabled || !axisVisible || !axisNameVisible;
        var items = getTranslatedDropdownItems(this.isXAxis() ? xAxisPositionDropdownItems : yAxisPositionDropdownItems, intl);
        return (React.createElement(DropdownControl, { value: namePosition, valuePath: axis + ".name.position", labelText: "properties.axis.name.position", disabled: isDisabled, showDisabledMessage: !configPanelDisabled && isDisabled, properties: properties, pushData: pushData, items: items }));
    };
    NamePositionControl.prototype.isXAxis = function () {
        var axis = this.props.axis;
        return axis === "xaxis" || axis === "secondary_xaxis";
    };
    NamePositionControl.prototype.getControlProperties = function () {
        var _a, _b, _c, _d, _e, _f, _g;
        var axisProperties = (_b = (_a = this.props.properties) === null || _a === void 0 ? void 0 : _a.controls) === null || _b === void 0 ? void 0 : _b[this.props.axis];
        var axisVisible = (_c = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.visible) !== null && _c !== void 0 ? _c : true;
        var axisNameVisible = (_e = (_d = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.name) === null || _d === void 0 ? void 0 : _d.visible) !== null && _e !== void 0 ? _e : true;
        var namePosition = (_g = (_f = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.name) === null || _f === void 0 ? void 0 : _f.position) !== null && _g !== void 0 ? _g : "auto";
        return {
            axisVisible: axisVisible,
            axisNameVisible: axisNameVisible,
            namePosition: namePosition,
        };
    };
    return NamePositionControl;
}(React.PureComponent));
export default injectIntl(NamePositionControl);
//# sourceMappingURL=NamePositionControl.js.map