// (C) 2019-2020 GoodData Corporation
import moment from "moment";
import isString from "lodash/isString";
import isDate from "lodash/isDate";
import { platformDateFormat } from "../constants/Platform";
var NUM_OF_MILISECONDS_IN_MINUTE = 60000;
export var convertDateToPlatformDateString = function (date) {
    return isDate(date) ? moment(date).format(platformDateFormat) : date;
};
export var convertPlatformDateStringToDate = function (platformDate) {
    if (!isString(platformDate)) {
        return platformDate;
    }
    /**
     * Create date object with correct day from string
     * Example: "2019-11-28" with local time zone is GTM-0600
     *   local time is "2019-11-27T18:00:00 GTM-0600"
     *   after converting the local time will be "2019-11-28T00:00:00 GTM-0600"
     *
     * Example: "2019-11-28" with local time zone is GTM+0600
     *   local time is "2019-11-28T06:00:00 GTM+0600"
     *   after converting the local time will be "2019-11-28T00:00:00 GTM+0600"
     */
    var convertedDate = new Date(platformDate);
    var localTimeOffsetValue = getTimeOffsetInMilliseconds(convertedDate);
    var localTimeValue = convertedDate.getTime() + localTimeOffsetValue;
    return new Date(localTimeValue);
};
/**
 * Returns the timezone offset in milliseconds for the given date.
 * @param when when to return the offset for. This is important because of DST - the offset changes during the year.
 */
var getTimeOffsetInMilliseconds = function (when) {
    return when.getTimezoneOffset() * NUM_OF_MILISECONDS_IN_MINUTE;
};
//# sourceMappingURL=DateConversions.js.map