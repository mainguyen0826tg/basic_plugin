import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { Separator, Overlay } from "@gooddata/sdk-ui-kit";
import OperatorDropdownItem from "./OperatorDropdownItem";
import { injectIntl } from "react-intl";
var OperatorDropdownBody = /** @class */ (function (_super) {
    __extends(OperatorDropdownBody, _super);
    function OperatorDropdownBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OperatorDropdownBody.prototype.render = function () {
        var _a = this.props, onSelect = _a.onSelect, onClose = _a.onClose, selectedOperator = _a.selectedOperator, alignTo = _a.alignTo, intl = _a.intl;
        return (React.createElement(Overlay, { closeOnOutsideClick: true, alignTo: alignTo, alignPoints: [{ align: "bl tl" }], onClose: onClose },
            React.createElement("div", { className: "gd-dropdown overlay" },
                React.createElement("div", { className: "gd-mvf-operator-dropdown-body s-mvf-operator-dropdown-body" },
                    React.createElement(OperatorDropdownItem, { operator: "ALL", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(Separator, null),
                    React.createElement(OperatorDropdownItem, { operator: "GREATER_THAN", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(OperatorDropdownItem, { operator: "GREATER_THAN_OR_EQUAL_TO", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(Separator, null),
                    React.createElement(OperatorDropdownItem, { operator: "LESS_THAN", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(OperatorDropdownItem, { operator: "LESS_THAN_OR_EQUAL_TO", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(Separator, null),
                    React.createElement(OperatorDropdownItem, { operator: "BETWEEN", selectedOperator: selectedOperator, onClick: onSelect, bubbleText: intl.formatMessage({ id: "mvf.operator.between.tooltip.bubble" }) }),
                    React.createElement(OperatorDropdownItem, { operator: "NOT_BETWEEN", selectedOperator: selectedOperator, onClick: onSelect, bubbleText: intl.formatMessage({ id: "mvf.operator.notBetween.tooltip.bubble" }) }),
                    React.createElement(Separator, null),
                    React.createElement(OperatorDropdownItem, { operator: "EQUAL_TO", selectedOperator: selectedOperator, onClick: onSelect }),
                    React.createElement(OperatorDropdownItem, { operator: "NOT_EQUAL_TO", selectedOperator: selectedOperator, onClick: onSelect })))));
    };
    return OperatorDropdownBody;
}(React.PureComponent));
export default injectIntl(OperatorDropdownBody);
//# sourceMappingURL=OperatorDropdownBody.js.map