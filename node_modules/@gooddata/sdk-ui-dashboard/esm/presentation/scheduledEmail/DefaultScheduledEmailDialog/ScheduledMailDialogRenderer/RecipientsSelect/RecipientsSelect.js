import { __read } from "tslib";
// (C) 2019-2020 GoodData Corporation
/* eslint-disable import/named,import/namespace */
import React, { useMemo, useState } from "react";
import sortBy from "lodash/sortBy";
import { useWorkspaceUsers } from "../../useWorkspaceUsers";
import { RecipientsSelectRenderer } from "./RecipientsSelectRenderer";
export var RecipientsSelect = function (props) {
    var backend = props.backend, workspace = props.workspace, currentUser = props.currentUser, value = props.value, onChange = props.onChange, onError = props.onError, canListUsersInProject = props.canListUsersInProject, enableKPIDashboardScheduleRecipients = props.enableKPIDashboardScheduleRecipients;
    var _a = __read(useState(), 2), search = _a[0], setSearch = _a[1];
    var _b = useWorkspaceUsers({ backend: backend, workspace: workspace, search: search, onError: onError }), result = _b.result, status = _b.status;
    var options = useMemo(function () { var _a; return sortBy((_a = result === null || result === void 0 ? void 0 : result.map(function (user) { return ({ user: user }); })) !== null && _a !== void 0 ? _a : [], "user.email"); }, [result]);
    return (React.createElement(RecipientsSelectRenderer, { canListUsersInProject: canListUsersInProject, isMulti: enableKPIDashboardScheduleRecipients, options: options, value: value, onChange: onChange, currentUser: currentUser, onLoad: function (queryOptions) {
            setSearch(queryOptions === null || queryOptions === void 0 ? void 0 : queryOptions.search);
        }, isLoading: status === "loading" || status === "pending" }));
};
//# sourceMappingURL=RecipientsSelect.js.map