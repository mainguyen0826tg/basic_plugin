import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import ColoredItemContent from "./ColoredItemContent";
import ColorDropdown from "../colorDropdown/ColorDropdown";
import { getMappingHeaderName } from "@gooddata/sdk-ui";
var ColoredItem = /** @class */ (function (_super) {
    __extends(ColoredItem, _super);
    function ColoredItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onColorSelected = function (color) {
            var _a = _this.props, item = _a.item, onSelect = _a.onSelect;
            if (onSelect) {
                onSelect(item, color);
            }
        };
        return _this;
    }
    ColoredItem.prototype.render = function () {
        var coloredItem = this.props.item ? this.props.item : null;
        if (!coloredItem) {
            return this.renderLoadingItem();
        }
        var headerItem = coloredItem.mappingHeader;
        var text = this.getText(headerItem);
        return (React.createElement(ColorDropdown, { selectedColorItem: coloredItem.colorItem, colorPalette: this.props.colorPalette, onColorSelected: this.onColorSelected, showCustomPicker: this.props.showCustomPicker },
            React.createElement(ColoredItemContent, { text: text, color: coloredItem.color })));
    };
    ColoredItem.prototype.renderLoadingItem = function () {
        return React.createElement("div", { className: "gd-list-item gd-list-item-not-loaded" });
    };
    ColoredItem.prototype.getText = function (mappingHeader) {
        return getMappingHeaderName(mappingHeader) || "";
    };
    ColoredItem.defaultProps = {
        showCustomPicker: false,
        disabled: false,
    };
    return ColoredItem;
}(React.PureComponent));
export default injectIntl(ColoredItem);
//# sourceMappingURL=ColoredItem.js.map