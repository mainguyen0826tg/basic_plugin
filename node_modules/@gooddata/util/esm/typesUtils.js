// (C) 2021 GoodData Corporation
/**
 * Returns combine guard from input guards as a result type is union type of guarded types
 * Its good for array filtering base on multiple guards and its return correct result union type
 *
 * @internal
 */
export function combineGuards() {
    var guards = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        guards[_i] = arguments[_i];
    }
    return (function (x) { return (x ? guards.some(function (f) { return f(x); }) : false); });
}
//# sourceMappingURL=typesUtils.js.map