import React from "react";
import { IRankingFilter, ObjRefInScope } from "@gooddata/sdk-model";
import { WrappedComponentProps } from "react-intl";
import { IMeasureDropdownItem, IAttributeDropdownItem, ICustomGranularitySelection } from "./types";
interface IRankingFilterDropdownBodyComponentOwnProps {
    measureItems: IMeasureDropdownItem[];
    attributeItems: IAttributeDropdownItem[];
    filter: IRankingFilter;
    onApply: (filter: IRankingFilter) => void;
    onCancel?: () => void;
    onDropDownItemMouseOver?: (ref: ObjRefInScope) => void;
    onDropDownItemMouseOut?: () => void;
    customGranularitySelection?: ICustomGranularitySelection;
}
declare type RankingFilterDropdownBodyComponentProps = IRankingFilterDropdownBodyComponentOwnProps & WrappedComponentProps;
export declare const RankingFilterDropdownBody: React.ForwardRefExoticComponent<Pick<RankingFilterDropdownBodyComponentProps, "filter" | "onCancel" | "onApply" | "onDropDownItemMouseOver" | "onDropDownItemMouseOut" | "customGranularitySelection" | "measureItems" | "attributeItems"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<RankingFilterDropdownBodyComponentProps>;
};
export {};
//# sourceMappingURL=RankingFilterDropdownBody.d.ts.map