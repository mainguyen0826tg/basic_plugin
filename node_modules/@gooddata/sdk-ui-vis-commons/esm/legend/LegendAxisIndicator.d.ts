import React from "react";
import { WrappedComponentProps } from "react-intl";
export interface ILegendAxisIndicatorProps {
    labelKey: string;
    data: string[];
    width?: number;
}
export declare class LegendAxisIndicatorClass extends React.PureComponent<ILegendAxisIndicatorProps & WrappedComponentProps> {
    render(): React.ReactNode;
}
export declare const LegendAxisIndicator: React.ForwardRefExoticComponent<Pick<ILegendAxisIndicatorProps & WrappedComponentProps<"intl">, "width" | "data" | "labelKey"> & {
    forwardedRef?: React.RefObject<any> | ((instance: any) => void) | null | undefined;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<ILegendAxisIndicatorProps & WrappedComponentProps<"intl">>;
};
//# sourceMappingURL=LegendAxisIndicator.d.ts.map