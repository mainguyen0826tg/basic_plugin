import { __read } from "tslib";
// (C) 2021 GoodData Corporation
import React, { createContext, useCallback, useContext, useMemo, useState } from "react";
import noop from "lodash/noop";
var ExportDialogContext = createContext({
    isOpen: false,
    dialogConfig: {},
    closeDialog: noop,
    openDialog: noop,
});
/**
 * @internal
 */
export var useExportDialogContext = function () {
    return useContext(ExportDialogContext);
};
/**
 * @internal
 */
export var ExportDialogContextProvider = function (_a) {
    var children = _a.children;
    var _b = __read(useState(false), 2), isOpen = _b[0], setIsOpen = _b[1];
    var _c = __read(useState({}), 2), dialogConfig = _c[0], setDialogConfig = _c[1];
    var openDialog = useCallback(function (config) {
        if (config === void 0) { config = {}; }
        setIsOpen(true);
        setDialogConfig(config);
    }, []);
    var closeDialog = useCallback(function () {
        setIsOpen(false);
    }, []);
    var contextValue = useMemo(function () { return ({ isOpen: isOpen, dialogConfig: dialogConfig, openDialog: openDialog, closeDialog: closeDialog }); }, [isOpen, dialogConfig, openDialog, closeDialog]);
    return React.createElement(ExportDialogContext.Provider, { value: contextValue }, children);
};
//# sourceMappingURL=ExportDialogContext.js.map