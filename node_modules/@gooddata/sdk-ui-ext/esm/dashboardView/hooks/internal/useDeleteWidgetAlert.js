import { useBackend, useCancelablePromise, useWorkspace, } from "@gooddata/sdk-ui";
import { backendInvariant, workspaceInvariant } from "../utils";
/**
 * Hook allowing to delete a widget alert
 * @param config - configuration of the hook
 * @internal
 */
export function useDeleteWidgetAlert(_a) {
    var widgetAlert = _a.widgetAlert, backend = _a.backend, workspace = _a.workspace, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess;
    var effectiveBackend = useBackend(backend);
    var effectiveWorkspace = useWorkspace(workspace);
    backendInvariant(effectiveBackend, "useDeleteWidgetAlert");
    workspaceInvariant(effectiveWorkspace, "useDeleteWidgetAlert");
    var promise = widgetAlert
        ? function () { return effectiveBackend.workspace(effectiveWorkspace).dashboards().deleteWidgetAlert(widgetAlert.ref); }
        : null;
    return useCancelablePromise({ promise: promise, onCancel: onCancel, onError: onError, onLoading: onLoading, onPending: onPending, onSuccess: onSuccess }, [
        effectiveBackend,
        effectiveWorkspace,
        widgetAlert,
    ]);
}
//# sourceMappingURL=useDeleteWidgetAlert.js.map