import React from "react";
import { WrappedComponentProps } from "react-intl";
import { MeasureValueFilterOperator } from "./types";
interface IOperatorDropdownItemOwnProps {
    selectedOperator: MeasureValueFilterOperator;
    operator: MeasureValueFilterOperator;
    bubbleText?: string;
    onClick: (identifier: MeasureValueFilterOperator) => void;
}
declare type IOperatorDropdownItemProps = IOperatorDropdownItemOwnProps & WrappedComponentProps;
export declare class OperatorDropdownItem extends React.PureComponent<IOperatorDropdownItemProps> {
    static defaultProps: any;
    render(): React.ReactNode;
    handleOnClick: (e: React.MouseEvent<HTMLDivElement>) => void;
    private renderBubble;
}
declare const _default: React.ForwardRefExoticComponent<Pick<IOperatorDropdownItemProps, "onClick" | "selectedOperator" | "operator" | "bubbleText"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IOperatorDropdownItemProps>;
};
export default _default;
//# sourceMappingURL=OperatorDropdownItem.d.ts.map