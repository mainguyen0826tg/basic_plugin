import { __assign, __read } from "tslib";
// (C) 2021 GoodData Corporation
import React from "react";
import partition from "lodash/partition";
import { isDashboardDateFilter } from "@gooddata/sdk-backend-spi";
import { objRefToString } from "@gooddata/sdk-model";
import { selectEffectiveDateFilterAvailableGranularities, selectEffectiveDateFilterMode, selectEffectiveDateFilterOptions, selectEffectiveDateFilterTitle, selectIsExport, useDashboardSelector, } from "../../../model";
import { useDashboardComponentsContext } from "../../dashboardContexts";
import { DashboardDateFilter } from "../dateFilter";
import { DefaultFilterBarContainer } from "./DefaultFilterBarContainer";
import { HiddenFilterBar } from "./HiddenFilterBar";
/**
 * @alpha
 */
export var DefaultFilterBar = function (props) {
    var filters = props.filters, onAttributeFilterChanged = props.onAttributeFilterChanged, onDateFilterChanged = props.onDateFilterChanged;
    var customFilterName = useDashboardSelector(selectEffectiveDateFilterTitle);
    var availableGranularities = useDashboardSelector(selectEffectiveDateFilterAvailableGranularities);
    var dateFilterOptions = useDashboardSelector(selectEffectiveDateFilterOptions);
    var dateFilterMode = useDashboardSelector(selectEffectiveDateFilterMode);
    var isExport = useDashboardSelector(selectIsExport);
    var DashboardAttributeFilterComponentProvider = useDashboardComponentsContext().DashboardAttributeFilterComponentProvider;
    if (isExport) {
        return React.createElement(HiddenFilterBar, __assign({}, props));
    }
    var _a = __read(partition(filters, isDashboardDateFilter), 2), _b = __read(_a[0], 1), dateFilter = _b[0], attributeFilters = _a[1];
    var dateFilterComponentConfig = {
        availableGranularities: availableGranularities,
        dateFilterOptions: dateFilterOptions,
        customFilterName: customFilterName,
    };
    return (React.createElement(DefaultFilterBarContainer, null,
        React.createElement("div", { className: "dash-filters-date dash-filters-attribute" },
            React.createElement(DashboardDateFilter, { filter: dateFilter, onFilterChanged: onDateFilterChanged, config: dateFilterComponentConfig, readonly: dateFilterMode === "readonly" })),
        attributeFilters.map(function (filter) {
            var AttributeFilter = DashboardAttributeFilterComponentProvider(filter);
            return (React.createElement("div", { className: "dash-filters-notdate dash-filters-attribute", key: objRefToString(filter.attributeFilter.displayForm) },
                React.createElement(AttributeFilter, { filter: filter, onFilterChanged: onAttributeFilterChanged })));
        })));
};
//# sourceMappingURL=DefaultFilterBar.js.map