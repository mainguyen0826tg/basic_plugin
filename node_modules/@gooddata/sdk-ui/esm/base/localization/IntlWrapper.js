// (C) 2007-2021 GoodData Corporation
import React, { useMemo } from "react";
import { IntlProvider } from "react-intl";
import { translationUtils } from "@gooddata/util";
import { DefaultLocale } from "./Locale";
import { pickCorrectInsightWording } from "./TranslationsCustomizationProvider/utils";
import enUS from "./bundles/en-US.json";
import deDE from "./bundles/de-DE.json";
import esES from "./bundles/es-ES.json";
import frFR from "./bundles/fr-FR.json";
import jaJP from "./bundles/ja-JP.json";
import nlNL from "./bundles/nl-NL.json";
import ptBR from "./bundles/pt-BR.json";
import ptPT from "./bundles/pt-PT.json";
import zhHans from "./bundles/zh-Hans.json";
/**
 * @internal
 */
export var messagesMap = {
    "en-US": translationUtils.removeMetadata(enUS),
    "de-DE": deDE,
    "es-ES": esES,
    "fr-FR": frFR,
    "ja-JP": jaJP,
    "nl-NL": nlNL,
    "pt-BR": ptBR,
    "pt-PT": ptPT,
    "zh-Hans": zhHans,
};
/**
 * @internal
 */
export var IntlWrapper = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? DefaultLocale : _b, children = _a.children;
    /**
     * Because of issues described in the ticket FET-855, we decided to use this workaround.
     * After the issues that are described in the ticket are solved or at least reduced,
     * this workaround can be removed.
     */
    var settings = window.gdSettings;
    var messages = useMemo(function () { return pickCorrectInsightWording(messagesMap[locale], settings); }, [locale, settings, messagesMap]);
    return (React.createElement(IntlProvider, { locale: locale, messages: messages }, children));
};
//# sourceMappingURL=IntlWrapper.js.map