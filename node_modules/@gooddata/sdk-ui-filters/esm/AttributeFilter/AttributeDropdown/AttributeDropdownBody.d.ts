import React from "react";
import { AttributeListItem } from "./types";
import { IAttributeElement } from "@gooddata/sdk-backend-spi";
import { ObjRef } from "@gooddata/sdk-model";
import { WrappedComponentProps } from "react-intl";
/**
 * @public
 */
export interface IAttributeDropdownListItemProps extends WrappedComponentProps {
    isLoading?: boolean;
    onMouseOut?: (source: any) => void;
    onMouseOver?: (source: any) => void;
    onOnly?: (source: any) => void;
    onSelect?: (source: any) => void;
    selected?: boolean;
    source?: any;
}
/**
 * @public
 */
export interface IAttributeDropdownBodyProps {
    items: AttributeListItem[];
    totalCount: number;
    selectedItems: Array<IAttributeElement>;
    isInverted: boolean;
    isLoading: boolean;
    isFullWidth?: boolean;
    error?: any;
    applyDisabled?: boolean;
    searchString: string;
    onSearch: (searchString: string) => void;
    onSelect: (selectedItems: IAttributeElement[], isInverted: boolean) => void;
    onRangeChange: (searchString: string, from: number, to: number) => void;
    onApplyButtonClicked: () => void;
    onCloseButtonClicked: () => void;
    parentFilterTitles?: string[];
    showItemsFilteredMessage?: boolean;
}
/**
 * @public
 */
export interface IAttributeDropdownBodyExtendedProps extends IAttributeDropdownBodyProps {
    deleteFilter?: () => void;
    isLoaded?: boolean;
    isElementsLoading?: boolean;
    width?: number;
    listItemClass?: React.ComponentType<IAttributeDropdownListItemProps>;
    maxSelectionSize?: number;
    showConfigurationButton?: boolean;
    onConfigurationChange?: () => void;
    showDeleteButton?: boolean;
    isMobile?: boolean;
    attributeFilterRef?: ObjRef;
}
export declare const AttributeDropdownBody: React.FC<IAttributeDropdownBodyExtendedProps>;
//# sourceMappingURL=AttributeDropdownBody.d.ts.map