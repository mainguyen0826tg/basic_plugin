import invariant from "ts-invariant";
import isArray from "lodash/isArray";
var ResultDataMethods = /** @class */ (function () {
    function ResultDataMethods(dataView) {
        this.dataView = dataView;
    }
    ResultDataMethods.prototype.isEmpty = function () {
        return this.dataView.data.length === 0;
    };
    ResultDataMethods.prototype.firstDimSize = function () {
        return this.dataView.totalCount[0];
    };
    ResultDataMethods.prototype.dataAt = function (index) {
        return this.dataView.data[index];
    };
    ResultDataMethods.prototype.data = function () {
        return this.dataView.data;
    };
    ResultDataMethods.prototype.singleDimData = function () {
        var d = this.dataView.data;
        if (d === null) {
            return [];
        }
        var e = d[0];
        invariant(!isArray(e), "trying to work with single-dim data while the underlying data view has two dims");
        return d;
    };
    ResultDataMethods.prototype.twoDimData = function () {
        var d = this.dataView.data;
        if (d === null) {
            return [];
        }
        var e = d[0];
        if (e === null || !e) {
            return [];
        }
        return isArray(e) ? d : [d];
    };
    ResultDataMethods.prototype.totals = function () {
        return this.dataView.totals;
    };
    ResultDataMethods.prototype.hasTotals = function () {
        return this.dataView.totals !== undefined;
    };
    return ResultDataMethods;
}());
export function newResultDataMethods(dataView) {
    return new ResultDataMethods(dataView);
}
//# sourceMappingURL=resultDataMethods.js.map