import React from "react";
import { DayPickerProps } from "react-day-picker";
import { WrappedComponentProps } from "react-intl";
import { IExtendedDateFilterErrors } from "../interfaces";
export interface IDateRange {
    from: Date;
    to: Date;
}
interface IDateRangePickerProps {
    range: IDateRange;
    onRangeChange: (newRange: IDateRange) => void;
    errors?: IExtendedDateFilterErrors["absoluteForm"];
    dateFormat?: string;
    dayPickerProps?: DayPickerProps;
    isMobile: boolean;
}
export declare const DateRangePicker: React.ForwardRefExoticComponent<Pick<IDateRangePickerProps & WrappedComponentProps<"intl">, "range" | "dateFormat" | "isMobile" | "onRangeChange" | "dayPickerProps" | "errors"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IDateRangePickerProps & WrappedComponentProps<"intl">>;
};
export {};
//# sourceMappingURL=DateRangePicker.d.ts.map