import { __generator } from "tslib";
import { call, put } from "redux-saga/effects";
import { alertCreated } from "../../events/alerts";
import { alertsActions } from "../../store/alerts";
function createAlert(ctx, alert) {
    var backend = ctx.backend, workspace = ctx.workspace;
    return backend.workspace(workspace).dashboards().createWidgetAlert(alert);
}
export function createAlertHandler(ctx, cmd) {
    var alert;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, call(createAlert, ctx, cmd.payload.alert)];
            case 1:
                alert = _a.sent();
                return [4 /*yield*/, put(alertsActions.addAlert(alert))];
            case 2:
                _a.sent();
                return [2 /*return*/, alertCreated(ctx, alert, cmd.correlationId)];
        }
    });
}
//# sourceMappingURL=createAlertHandler.js.map