import { __awaiter, __generator } from "tslib";
// (C) 2019-2021 GoodData Corporation
import { UnexpectedError, } from "@gooddata/sdk-backend-spi";
import { GdcMetadata } from "@gooddata/api-model-bear";
import { uriRef } from "@gooddata/sdk-model";
import { newAttributeDisplayFormMetadataObject, newAttributeMetadataObject, } from "@gooddata/sdk-backend-base";
import invariant from "ts-invariant";
import { objRefToUri, objRefsToUris, getObjectIdFromUri } from "../../../utils/api";
import { convertMetadataObjectXrefEntry } from "../../../convertors/fromBackend/MetaConverter";
import { BearWorkspaceElements } from "./elements";
var BearWorkspaceAttributes = /** @class */ (function () {
    function BearWorkspaceAttributes(authCall, workspace) {
        var _this = this;
        this.authCall = authCall;
        this.workspace = workspace;
        this.elements = function () {
            return new BearWorkspaceElements(_this.authCall, _this.workspace);
        };
        this.getAttributeDisplayForm = function (ref) { return __awaiter(_this, void 0, void 0, function () {
            var displayFormUri, wrappedDisplayForm, displayFormDetails;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefToUri(ref, this.workspace, this.authCall)];
                    case 1:
                        displayFormUri = _a.sent();
                        return [4 /*yield*/, this.authCall(function (sdk) {
                                return sdk.md.getObjectDetails(displayFormUri);
                            })];
                    case 2:
                        wrappedDisplayForm = _a.sent();
                        displayFormDetails = wrappedDisplayForm.attributeDisplayForm;
                        return [2 /*return*/, this.buildAttributeDisplayForm(displayFormDetails)];
                }
            });
        }); };
        this.getAttribute = function (ref) { return __awaiter(_this, void 0, void 0, function () {
            var attributeUri, wrappedAttribute, _a, title, uri, isProduction, identifier, summary, displayForms, attributeDisplayForms;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, objRefToUri(ref, this.workspace, this.authCall)];
                    case 1:
                        attributeUri = _b.sent();
                        return [4 /*yield*/, this.authCall(function (sdk) {
                                return sdk.md.getObjectDetails(attributeUri);
                            })];
                    case 2:
                        wrappedAttribute = _b.sent();
                        _a = wrappedAttribute.attribute.meta, title = _a.title, uri = _a.uri, isProduction = _a.isProduction, identifier = _a.identifier, summary = _a.summary;
                        displayForms = wrappedAttribute.attribute.content.displayForms;
                        attributeDisplayForms = displayForms.map(function (displayForm) {
                            return _this.buildAttributeDisplayForm(displayForm);
                        });
                        return [2 /*return*/, newAttributeMetadataObject(ref, function (a) {
                                return a
                                    .title(title)
                                    .uri(uri)
                                    .production(Boolean(isProduction))
                                    .id(identifier)
                                    .description(summary)
                                    .displayForms(attributeDisplayForms);
                            })];
                }
            });
        }); };
        this.getAttributeDisplayForms = function (refs) { return __awaiter(_this, void 0, void 0, function () {
            var displayFormUris, wrappedAttributeDisplayForms;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefsToUris(refs, this.workspace, this.authCall, false)];
                    case 1:
                        displayFormUris = _a.sent();
                        return [4 /*yield*/, this.authCall(function (sdk) {
                                return sdk.md.getObjects(_this.workspace, displayFormUris);
                            })];
                    case 2:
                        wrappedAttributeDisplayForms = _a.sent();
                        return [2 /*return*/, wrappedAttributeDisplayForms.map(function (wrappedDisplayForm) {
                                if (!GdcMetadata.isWrappedAttributeDisplayForm(wrappedDisplayForm)) {
                                    throw new UnexpectedError("INVALID_REFERENCED_OBJECT", new Error("Referenced object is not attributeDisplayForm"));
                                }
                                var displayFormDetails = wrappedDisplayForm.attributeDisplayForm;
                                return _this.buildAttributeDisplayForm(displayFormDetails);
                            })];
                }
            });
        }); };
        this.getAttributes = function (refs) { return __awaiter(_this, void 0, void 0, function () {
            var attributeUris, wrappedAttributes;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefsToUris(refs, this.workspace, this.authCall, false)];
                    case 1:
                        attributeUris = _a.sent();
                        return [4 /*yield*/, this.authCall(function (sdk) {
                                return sdk.md.getObjects(_this.workspace, attributeUris);
                            })];
                    case 2:
                        wrappedAttributes = _a.sent();
                        return [2 /*return*/, wrappedAttributes.map(function (wrappedAttribute) {
                                var _a = wrappedAttribute.attribute, _b = _a.meta, title = _b.title, uri = _b.uri, isProduction = _b.isProduction, identifier = _b.identifier, summary = _b.summary, displayForms = _a.content.displayForms;
                                var ref = uriRef(uri);
                                var attributeDisplayForms = displayForms.map(function (displayForm) {
                                    return _this.buildAttributeDisplayForm(displayForm);
                                });
                                return newAttributeMetadataObject(ref, function (attribute) {
                                    return attribute
                                        .title(title)
                                        .uri(uri)
                                        .production(Boolean(isProduction))
                                        .id(identifier)
                                        .description(summary)
                                        .displayForms(attributeDisplayForms);
                                });
                            })];
                }
            });
        }); };
        this.buildAttributeDisplayForm = function (displayFormDetails) {
            var _a = displayFormDetails.meta, title = _a.title, summary = _a.summary, identifier = _a.identifier, uri = _a.uri, _b = displayFormDetails.content, formOf = _b.formOf, defaultDisplayForm = _b.default, type = _b.type;
            var ref = uriRef(uri);
            var isDefaultDf = defaultDisplayForm === 1;
            return newAttributeDisplayFormMetadataObject(ref, function (df) {
                return df
                    .attribute(uriRef(formOf))
                    .title(title)
                    .description(summary)
                    .isDefault(isDefaultDf)
                    .id(identifier)
                    .uri(uri)
                    .displayFormType(type);
            });
        };
    }
    BearWorkspaceAttributes.prototype.getCommonAttributes = function (attributesRefs) {
        return __awaiter(this, void 0, void 0, function () {
            var inputAttributeUris, returnAttributeUris;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefsToUris(attributesRefs, this.workspace, this.authCall)];
                    case 1:
                        inputAttributeUris = _a.sent();
                        return [4 /*yield*/, this.authCall(function (sdk) {
                                return sdk.ldm.getCommonAttributes(_this.workspace, inputAttributeUris);
                            })];
                    case 2:
                        returnAttributeUris = _a.sent();
                        return [2 /*return*/, returnAttributeUris.map(uriRef)];
                }
            });
        });
    };
    BearWorkspaceAttributes.prototype.getCommonAttributesBatch = function (attributesRefsBatch) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(attributesRefsBatch.map(function (attributeRefs) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                return [2 /*return*/, this.getCommonAttributes(attributeRefs)];
                            });
                        }); }))];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    BearWorkspaceAttributes.prototype.getAttributeDatasetMeta = function (ref) {
        return __awaiter(this, void 0, void 0, function () {
            var uri, objectId;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefToUri(ref, this.workspace, this.authCall)];
                    case 1:
                        uri = _a.sent();
                        objectId = getObjectIdFromUri(uri);
                        return [2 /*return*/, this.authCall(function (sdk) { return __awaiter(_this, void 0, void 0, function () {
                                var usedBy;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, sdk.xhr.getParsed("/gdc/md/" + this.workspace + "/usedby2/" + objectId + "?types=dataSet")];
                                        case 1:
                                            usedBy = _a.sent();
                                            invariant(usedBy.entries.length > 0, "Attribute must have a dataset associated to it.");
                                            return [2 /*return*/, convertMetadataObjectXrefEntry("dataSet", usedBy.entries[0])];
                                    }
                                });
                            }); })];
                }
            });
        });
    };
    return BearWorkspaceAttributes;
}());
export { BearWorkspaceAttributes };
//# sourceMappingURL=index.js.map