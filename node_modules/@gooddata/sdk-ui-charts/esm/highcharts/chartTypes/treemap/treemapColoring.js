import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import { MeasureColorStrategy } from "../_chartColoring/measure";
import { getAtributeColorAssignment } from "@gooddata/sdk-ui-vis-commons";
var TreemapColorStrategy = /** @class */ (function (_super) {
    __extends(TreemapColorStrategy, _super);
    function TreemapColorStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreemapColorStrategy.prototype.createColorAssignment = function (colorPalette, colorMapping, 
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    viewByAttribute, 
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    stackByAttribute, dv) {
        var colorAssignment;
        if (viewByAttribute) {
            colorAssignment = getAtributeColorAssignment(viewByAttribute, colorPalette, colorMapping, dv);
        }
        else {
            var result = _super.prototype.createColorAssignment.call(this, colorPalette, colorMapping, viewByAttribute, stackByAttribute, dv);
            colorAssignment = result.outputColorAssignment;
        }
        return {
            fullColorAssignment: colorAssignment,
            outputColorAssignment: colorAssignment,
        };
    };
    return TreemapColorStrategy;
}(MeasureColorStrategy));
export { TreemapColorStrategy };
//# sourceMappingURL=treemapColoring.js.map