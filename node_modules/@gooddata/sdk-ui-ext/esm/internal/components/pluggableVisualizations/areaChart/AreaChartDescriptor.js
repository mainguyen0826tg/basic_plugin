import { __extends } from "tslib";
import { PluggableAreaChart } from "./PluggableAreaChart";
import { BigChartDescriptor } from "../BigChartDescriptor";
import { modifyBucketsAttributesForDrillDown, reverseAndTrimIntersection, addIntersectionFiltersToInsight, } from "../drillDownUtil";
var AreaChartDescriptor = /** @class */ (function (_super) {
    __extends(AreaChartDescriptor, _super);
    function AreaChartDescriptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AreaChartDescriptor.prototype.getFactory = function () {
        return function (params) { return new PluggableAreaChart(params); };
    };
    AreaChartDescriptor.prototype.applyDrillDown = function (insight, drillDownContext) {
        var withFilters = this.addFilters(insight, drillDownContext.drillDefinition, drillDownContext.event);
        return modifyBucketsAttributesForDrillDown(withFilters, drillDownContext.drillDefinition);
    };
    AreaChartDescriptor.prototype.addFilters = function (source, drillConfig, event) {
        var cutIntersection = reverseAndTrimIntersection(drillConfig, event.drillContext.intersection);
        return addIntersectionFiltersToInsight(source, cutIntersection);
    };
    return AreaChartDescriptor;
}(BigChartDescriptor));
export { AreaChartDescriptor };
//# sourceMappingURL=AreaChartDescriptor.js.map