import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import cloneDeep from "lodash/cloneDeep";
import set from "lodash/set";
import DisabledBubbleMessage from "../DisabledBubbleMessage";
import { getTranslation } from "../../utils/translations";
var CheckboxControl = /** @class */ (function (_super) {
    __extends(CheckboxControl, _super);
    function CheckboxControl(props) {
        var _this = _super.call(this, props) || this;
        _this.onValueChanged = _this.onValueChanged.bind(_this);
        return _this;
    }
    CheckboxControl.prototype.render = function () {
        var _a = this.props, checked = _a.checked, disabled = _a.disabled, labelText = _a.labelText, showDisabledMessage = _a.showDisabledMessage, intl = _a.intl;
        return (React.createElement(DisabledBubbleMessage, { showDisabledMessage: showDisabledMessage },
            React.createElement("label", { className: "input-checkbox-label" },
                React.createElement("input", { checked: checked, disabled: disabled, type: "checkbox", className: "input-checkbox", onChange: this.onValueChanged }),
                React.createElement("span", { className: "input-label-text" }, getTranslation(labelText, intl)))));
    };
    CheckboxControl.prototype.onValueChanged = function (event) {
        var _a = this.props, valuePath = _a.valuePath, properties = _a.properties, pushData = _a.pushData;
        var clonedProperties = cloneDeep(properties);
        set(clonedProperties, "controls." + valuePath, event.target.checked);
        pushData({ properties: clonedProperties });
    };
    CheckboxControl.defaultProps = {
        checked: false,
        disabled: false,
        showDisabledMessage: false,
    };
    return CheckboxControl;
}(React.Component));
export default injectIntl(CheckboxControl);
//# sourceMappingURL=CheckboxControl.js.map