// (C) 2019-2021 GoodData Corporation
import { __awaiter, __generator } from "tslib";
import { NotSupported, } from "@gooddata/sdk-backend-spi";
import { TigerExecution } from "./execution/executionFactory";
import { TigerWorkspaceCatalogFactory } from "./catalog/factory";
import { TigerWorkspaceDataSets } from "./datasets";
import { TigerWorkspaceAttributes } from "./attributes";
import { TigerWorkspaceSettings } from "./settings";
import { TigerWorkspacePermissionsFactory } from "./permissions";
import { TigerWorkspaceStyling } from "./styling";
import { TigerWorkspaceInsights } from "./insights";
import { TigerWorkspaceDashboards } from "./dashboards";
import { workspaceConverter } from "../../convertors/fromBackend/WorkspaceConverter";
import { TigerWorkspaceMeasures } from "./measures";
import { TigerWorkspaceFacts } from "./facts";
import { TigerWorkspaceDateFilterConfigsQuery } from "./dateFilterConfigs";
var TigerWorkspace = /** @class */ (function () {
    function TigerWorkspace(authCall, workspace, dateFormatter, descriptor) {
        this.authCall = authCall;
        this.workspace = workspace;
        this.dateFormatter = dateFormatter;
        this.descriptor = descriptor;
    }
    TigerWorkspace.prototype.getDescriptor = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!!this.descriptor) return [3 /*break*/, 2];
                        _a = workspaceConverter;
                        return [4 /*yield*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    return [2 /*return*/, client.organizationObjects.getEntityWorkspaces({
                                            id: this.workspace,
                                            include: ["workspaces"],
                                        })];
                                });
                            }); })];
                    case 1: return [2 /*return*/, _a.apply(void 0, [(_b.sent()).data.data])];
                    case 2: return [2 /*return*/, this.descriptor];
                }
            });
        });
    };
    TigerWorkspace.prototype.getParentWorkspace = function () {
        return __awaiter(this, void 0, void 0, function () {
            var descriptor;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDescriptor()];
                    case 1:
                        descriptor = _a.sent();
                        if (descriptor.parentWorkspace) {
                            return [2 /*return*/, new TigerWorkspace(this.authCall, descriptor.parentWorkspace, this.dateFormatter)];
                        }
                        return [2 /*return*/, undefined];
                }
            });
        });
    };
    TigerWorkspace.prototype.attributes = function () {
        return new TigerWorkspaceAttributes(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.execution = function () {
        return new TigerExecution(this.authCall, this.workspace, this.dateFormatter);
    };
    TigerWorkspace.prototype.settings = function () {
        return new TigerWorkspaceSettings(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.insights = function () {
        return new TigerWorkspaceInsights(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.dashboards = function () {
        return new TigerWorkspaceDashboards(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.measures = function () {
        return new TigerWorkspaceMeasures(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.facts = function () {
        return new TigerWorkspaceFacts(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.styling = function () {
        return new TigerWorkspaceStyling(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.catalog = function () {
        return new TigerWorkspaceCatalogFactory(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.datasets = function () {
        return new TigerWorkspaceDataSets(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.permissions = function () {
        return new TigerWorkspacePermissionsFactory(this.authCall, this.workspace);
    };
    TigerWorkspace.prototype.users = function () {
        throw new NotSupported("Not supported");
    };
    TigerWorkspace.prototype.dateFilterConfigs = function () {
        return new TigerWorkspaceDateFilterConfigsQuery();
    };
    return TigerWorkspace;
}());
export { TigerWorkspace };
//# sourceMappingURL=index.js.map