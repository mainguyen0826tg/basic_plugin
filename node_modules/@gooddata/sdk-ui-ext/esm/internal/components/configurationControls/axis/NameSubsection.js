import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import ConfigSubsection from "../../configurationControls/ConfigSubsection";
import NamePositionControl from "./NamePositionControl";
var NameSubsection = /** @class */ (function (_super) {
    __extends(NameSubsection, _super);
    function NameSubsection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NameSubsection.prototype.render = function () {
        var _a = this.getControlProperties(), axisVisible = _a.axisVisible, axisNameVisible = _a.axisNameVisible;
        var _b = this.props, axis = _b.axis, properties = _b.properties, pushData = _b.pushData, disabled = _b.disabled, configPanelDisabled = _b.configPanelDisabled;
        return (React.createElement(ConfigSubsection, { title: "properties.axis.name", valuePath: axis + ".name.visible", properties: properties, pushData: pushData, canBeToggled: true, toggledOn: axisNameVisible, toggleDisabled: disabled || !axisVisible, showDisabledMessage: !configPanelDisabled && disabled },
            React.createElement(NamePositionControl, { disabled: disabled, configPanelDisabled: configPanelDisabled, axis: axis, properties: properties, pushData: pushData })));
    };
    NameSubsection.prototype.getControlProperties = function () {
        var _a, _b, _c, _d, _e;
        var axisProperties = (_b = (_a = this.props.properties) === null || _a === void 0 ? void 0 : _a.controls) === null || _b === void 0 ? void 0 : _b[this.props.axis];
        var axisVisible = (_c = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.visible) !== null && _c !== void 0 ? _c : true;
        var axisNameVisible = (_e = (_d = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.name) === null || _d === void 0 ? void 0 : _d.visible) !== null && _e !== void 0 ? _e : true;
        return {
            axisVisible: axisVisible,
            axisNameVisible: axisNameVisible,
        };
    };
    return NameSubsection;
}(React.PureComponent));
export default injectIntl(NameSubsection);
//# sourceMappingURL=NameSubsection.js.map