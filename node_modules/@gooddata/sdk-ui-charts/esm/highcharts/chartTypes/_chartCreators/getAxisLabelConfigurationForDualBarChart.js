import { isBarChart } from "../_util/common";
import { ALIGN_LEFT, ALIGN_RIGHT, BOTTOM_AXIS_MARGIN, ROTATE_60_DEGREES, ROTATE_90_DEGREES, ROTATE_NEGATIVE_60_DEGREES, ROTATE_NEGATIVE_90_DEGREES, } from "../../constants/axisLabel";
function getLabelOptions(index, aligns) {
    var isOppositeAxis = index === 1;
    var align = aligns[index];
    var y = isOppositeAxis ? undefined : BOTTOM_AXIS_MARGIN;
    return {
        labels: {
            align: align,
            y: y,
        },
    };
}
export function getAxisLabelConfigurationForDualBarChart(chartOptions) {
    var type = chartOptions.type, _a = chartOptions.yAxes, yAxes = _a === void 0 ? [] : _a;
    var isBar = isBarChart(type);
    var isDualAxis = yAxes.length === 2;
    var isDualAxisBarChart = isBar && isDualAxis;
    if (!isDualAxisBarChart) {
        return {};
    }
    var yAxisProps = chartOptions.yAxisProps, secondary_yAxisProps = chartOptions.secondary_yAxisProps;
    var yAxesConfig = [yAxisProps, secondary_yAxisProps].map(function (axis, index) {
        if (axis === void 0) { axis = {}; }
        var rotation = axis.rotation;
        switch (rotation) {
            case ROTATE_60_DEGREES:
            case ROTATE_90_DEGREES:
                return getLabelOptions(index, [ALIGN_RIGHT, ALIGN_LEFT]);
            case ROTATE_NEGATIVE_60_DEGREES:
            case ROTATE_NEGATIVE_90_DEGREES:
                return getLabelOptions(index, [ALIGN_LEFT, ALIGN_RIGHT]);
            default:
                return undefined;
        }
    });
    return {
        yAxis: yAxesConfig,
    };
}
//# sourceMappingURL=getAxisLabelConfigurationForDualBarChart.js.map