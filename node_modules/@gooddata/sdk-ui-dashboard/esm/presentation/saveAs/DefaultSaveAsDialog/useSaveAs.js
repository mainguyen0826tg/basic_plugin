// (C) 2019-2021 GoodData Corporation
import { useCallback } from "react";
import { saveDashboardAs, selectBackendCapabilities, selectDashboardTitle, selectEnableKPIDashboardSchedule, selectIsDashboardSaving, selectLocale, useDashboardCommandProcessing, useDashboardSelector, } from "../../../model";
export var useSaveAs = function (props) {
    var _a, _b;
    var onSubmit = props.onSubmit, onSubmitSuccess = props.onSubmitSuccess, onSubmitError = props.onSubmitError;
    var locale = useDashboardSelector(selectLocale);
    var dashboardTitle = useDashboardSelector(selectDashboardTitle);
    var isScheduleEmailsEnabled = (_a = useDashboardSelector(selectEnableKPIDashboardSchedule)) !== null && _a !== void 0 ? _a : false;
    var capabilities = useDashboardSelector(selectBackendCapabilities);
    var isDashboardSaving = useDashboardSelector(selectIsDashboardSaving);
    var saveAsCommandProcessing = useDashboardCommandProcessing({
        commandCreator: saveDashboardAs,
        errorEvent: "GDC.DASH/EVT.COMMAND.FAILED",
        successEvent: "GDC.DASH/EVT.COPY_SAVED",
        onError: function (event) {
            onSubmitError === null || onSubmitError === void 0 ? void 0 : onSubmitError(event.payload.error);
        },
        onSuccess: function (event) {
            onSubmitSuccess === null || onSubmitSuccess === void 0 ? void 0 : onSubmitSuccess(event.payload.dashboard);
        },
        onBeforeRun: function (cmd) {
            onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(cmd.payload.title, cmd.payload.switchToCopy);
        },
    });
    var handleSaveAs = useCallback(function (title, switchToDashboard, useOriginalFilterContext) {
        if (switchToDashboard === void 0) { switchToDashboard = false; }
        if (useOriginalFilterContext === void 0) { useOriginalFilterContext = true; }
        saveAsCommandProcessing.run(title, switchToDashboard, useOriginalFilterContext);
    }, []);
    return {
        locale: locale,
        dashboardTitle: dashboardTitle,
        isScheduleEmailsEnabled: isScheduleEmailsEnabled,
        isKpiWidgetEnabled: (_b = capabilities.supportsKpiWidget) !== null && _b !== void 0 ? _b : false,
        isDashboardLoaded: true,
        isDashboardSaving: isDashboardSaving,
        handleSaveAs: handleSaveAs,
        saveAsStatus: saveAsCommandProcessing.status,
    };
};
//# sourceMappingURL=useSaveAs.js.map