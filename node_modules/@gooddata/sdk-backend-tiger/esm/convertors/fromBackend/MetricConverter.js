// (C) 2021 GoodData Corporation
import { newMeasureMetadataObject } from "@gooddata/sdk-backend-base";
import { idRef } from "@gooddata/sdk-model";
import { isInheritedObject } from "./utils";
/**
 * Type guard checking whether object is an instance of JsonApiMetricOutDocument.
 */
function isJsonApiMetricOutDocument(obj) {
    return obj.data !== undefined;
}
export function convertMetricFromBackend(data) {
    var id;
    var attributes;
    if (isJsonApiMetricOutDocument(data)) {
        id = data.data.id;
        attributes = data.data.attributes;
    }
    else {
        id = data.id;
        attributes = data.attributes;
    }
    var ref = idRef(id, "measure");
    return newMeasureMetadataObject(ref, function (m) {
        return m
            .id(id)
            .title((attributes === null || attributes === void 0 ? void 0 : attributes.title) || "")
            .isLocked(isInheritedObject(id))
            .description((attributes === null || attributes === void 0 ? void 0 : attributes.description) || "")
            .expression(attributes.content.maql)
            .format(attributes.content.format || "");
    });
}
//# sourceMappingURL=MetricConverter.js.map