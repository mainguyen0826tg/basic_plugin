import { __extends } from "tslib";
// (C) 2019-2020 GoodData Corporation
import identity from "lodash/identity";
import { MetadataObjectBuilder } from "./factory";
import { builderFactory } from "../builder";
/**
 * Attribute display form metadata object builder
 * See {@link Builder}
 *
 * @beta
 */
var AttributeDisplayFormMetadataObjectBuilder = /** @class */ (function (_super) {
    __extends(AttributeDisplayFormMetadataObjectBuilder, _super);
    function AttributeDisplayFormMetadataObjectBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributeDisplayFormMetadataObjectBuilder.prototype.attribute = function (ref) {
        this.item.attribute = ref;
        return this;
    };
    AttributeDisplayFormMetadataObjectBuilder.prototype.displayFormType = function (type) {
        this.item.displayFormType = type;
        return this;
    };
    AttributeDisplayFormMetadataObjectBuilder.prototype.isDefault = function (value) {
        this.item.isDefault = value;
        return this;
    };
    return AttributeDisplayFormMetadataObjectBuilder;
}(MetadataObjectBuilder));
export { AttributeDisplayFormMetadataObjectBuilder };
/**
 * Attribute display form metadata object factory
 *
 * @param ref - attribute display form reference
 * @param modifications - attribute diplay form builder modifications to perform
 * @returns created attribute display form metadata object
 * @beta
 */
export var newAttributeDisplayFormMetadataObject = function (ref, modifications) {
    if (modifications === void 0) { modifications = identity; }
    return builderFactory(AttributeDisplayFormMetadataObjectBuilder, { type: "displayForm", ref: ref }, modifications);
};
//# sourceMappingURL=displayFormFactory.js.map