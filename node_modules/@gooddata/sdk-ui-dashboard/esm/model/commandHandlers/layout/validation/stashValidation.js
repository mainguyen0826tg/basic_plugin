// (C) 2021 GoodData Corporation
import { __read, __spread } from "tslib";
import { isStashedDashboardItemsId, } from "../../../types/layoutTypes";
/**
 * Given layout stash and a list of dashboard item definitions, this function will validate and resolve those
 * item definitions into actual dashboard items that can be added onto the layout.
 *
 * The dashboard item definitions provided as input in the commands may contain mix of actual dashboard items
 * and identifiers of stashes that contain the actual items. This function resolves any stashes that may be
 * included on the input into the actual items and returns them so that the rest of the code does not have
 * to care about the stashes anymore.
 *
 * @param stash - current state of the layout stash
 * @param itemDefinitions - item definitions
 */
export function validateAndResolveStashedItems(stash, itemDefinitions) {
    var result = {
        missing: [],
        existing: [],
        resolved: [],
        newItemBitmap: [],
    };
    itemDefinitions.forEach(function (item) {
        var _a, _b;
        if (!isStashedDashboardItemsId(item)) {
            result.resolved.push(item);
            result.newItemBitmap.push(true);
            return;
        }
        if (stash[item] !== undefined) {
            result.existing.push(item);
            (_a = result.resolved).push.apply(_a, __spread(stash[item]));
            (_b = result.newItemBitmap).push.apply(_b, __spread(stash[item].map(function (_) { return false; })));
        }
        else {
            result.missing.push(item);
        }
    });
    return result;
}
//# sourceMappingURL=stashValidation.js.map