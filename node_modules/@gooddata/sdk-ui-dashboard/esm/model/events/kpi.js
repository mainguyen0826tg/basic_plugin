// (C) 2021 GoodData Corporation
import { eventGuard } from "./util";
export function kpiWidgetHeaderChanged(ctx, ref, header, correlationId) {
    return {
        type: "GDC.DASH/EVT.KPI_WIDGET.HEADER_CHANGED",
        ctx: ctx,
        correlationId: correlationId,
        payload: {
            ref: ref,
            header: header,
        },
    };
}
/**
 * Tests whether the provided object is an instance of {@link DashboardKpiWidgetHeaderChanged}.
 *
 * @param obj - object to test
 * @alpha
 */
export var isDashboardKpiWidgetHeaderChanged = eventGuard("GDC.DASH/EVT.KPI_WIDGET.HEADER_CHANGED");
export function kpiWidgetMeasureChanged(ctx, ref, kpiWidget, measure, header, correlationId) {
    return {
        type: "GDC.DASH/EVT.KPI_WIDGET.MEASURE_CHANGED",
        ctx: ctx,
        correlationId: correlationId,
        payload: {
            ref: ref,
            kpiWidget: kpiWidget,
            measure: measure,
            header: header,
        },
    };
}
/**
 * Tests whether the provided object is an instance of {@link DashboardKpiWidgetMeasureChanged}.
 *
 * @param obj - object to test
 * @alpha
 */
export var isDashboardKpiWidgetMeasureChanged = eventGuard("GDC.DASH/EVT.KPI_WIDGET.MEASURE_CHANGED");
export function kpiWidgetFilterSettingsChanged(ctx, ref, ignoredAttributeFilters, dateDatasetForFiltering, correlationId) {
    return {
        type: "GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED",
        ctx: ctx,
        correlationId: correlationId,
        payload: {
            ref: ref,
            ignoredAttributeFilters: ignoredAttributeFilters,
            dateDatasetForFiltering: dateDatasetForFiltering,
        },
    };
}
/**
 * Tests whether the provided object is an instance of {@link DashboardKpiWidgetFilterSettingsChanged}.
 *
 * @param obj - object to test
 * @alpha
 */
export var isDashboardKpiWidgetFilterSettingsChanged = eventGuard("GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED");
export function kpiWidgetComparisonChanged(ctx, ref, kpi, correlationId) {
    return {
        type: "GDC.DASH/EVT.KPI_WIDGET.COMPARISON_CHANGED",
        ctx: ctx,
        correlationId: correlationId,
        payload: {
            ref: ref,
            kpi: kpi,
        },
    };
}
/**
 * Tests whether the provided object is an instance of {@link DashboardKpiWidgetComparisonChanged}.
 *
 * @param obj - object to test
 * @alpha
 */
export var isDashboardKpiWidgetComparisonChanged = eventGuard("GDC.DASH/EVT.KPI_WIDGET.COMPARISON_CHANGED");
export function kpiWidgetChanged(ctx, kpiWidget, correlationId) {
    return {
        type: "GDC.DASH/EVT.KPI_WIDGET.WIDGET_CHANGED",
        ctx: ctx,
        correlationId: correlationId,
        payload: {
            kpiWidget: kpiWidget,
        },
    };
}
/**
 * Tests whether the provided object is an instance of {@link DashboardKpiWidgetChanged}.
 *
 * @param obj - object to test
 * @alpha
 */
export var isDashboardKpiWidgetChanged = eventGuard("GDC.DASH/EVT.KPI_WIDGET.WIDGET_CHANGED");
//# sourceMappingURL=kpi.js.map