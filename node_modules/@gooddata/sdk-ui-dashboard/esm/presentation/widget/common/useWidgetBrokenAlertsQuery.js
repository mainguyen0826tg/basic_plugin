// (C) 2020-2021 GoodData Corporation
import { useEffect } from "react";
import { queryWidgetBrokenAlerts, useDashboardQueryProcessing, useDashboardSelector, selectFilterContextFilters, } from "../../../model";
export var useWidgetBrokenAlertsQuery = function (widget, alert) {
    var dashboardFilters = useDashboardSelector(selectFilterContextFilters);
    var _a = useDashboardQueryProcessing({
        queryCreator: queryWidgetBrokenAlerts,
    }), runBrokenAlertsQuery = _a.run, result = _a.result, status = _a.status, error = _a.error;
    var effectiveFilters = result;
    useEffect(function () {
        if (widget.ref) {
            runBrokenAlertsQuery(widget.ref);
        }
        // queryWidgetBrokenAlerts as a parameter it needs just widget.ref but internally result depends on alert, widget, dashboardFilters
        // we have to call query every time when this dependency changed to get fresh results
    }, [alert, widget, dashboardFilters]);
    return {
        result: effectiveFilters,
        status: status,
        error: error,
    };
};
//# sourceMappingURL=useWidgetBrokenAlertsQuery.js.map