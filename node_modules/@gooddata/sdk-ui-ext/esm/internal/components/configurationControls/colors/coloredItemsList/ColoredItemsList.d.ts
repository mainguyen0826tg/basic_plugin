import React from "react";
import { WrappedComponentProps } from "react-intl";
import { IColor, IColorPalette } from "@gooddata/sdk-model";
import { IColoredItem } from "../../../../interfaces/Colors";
export interface IColoredItemsListOwnProps {
    colorPalette: IColorPalette;
    inputItems: IColoredItem[];
    onSelect: (selectedColorItem: IColoredItem, color: IColor) => void;
    showCustomPicker?: boolean;
    disabled?: boolean;
    isLoading?: boolean;
}
export interface IColoredItemsListState {
    searchString?: string;
}
export declare type IColoredItemsListProps = IColoredItemsListOwnProps & WrappedComponentProps;
declare const _default: React.ForwardRefExoticComponent<Pick<IColoredItemsListProps, "disabled" | "isLoading" | "onSelect" | "colorPalette" | "showCustomPicker" | "inputItems"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IColoredItemsListProps>;
};
export default _default;
//# sourceMappingURL=ColoredItemsList.d.ts.map