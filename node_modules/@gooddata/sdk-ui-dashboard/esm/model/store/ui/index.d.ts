export declare const uiSliceReducer: import("@reduxjs/toolkit").Reducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
/**
 * Actions to control ui state of the dashboard.
 *
 * @internal
 */
export declare const uiActions: import("@reduxjs/toolkit").CaseReducerActions<{
    openScheduleEmailDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    closeScheduleEmailDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    openSaveAsDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    closeSaveAsDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    setFilterBarHeight: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, {
        payload: number;
        type: string;
    }>;
    setFilterBarExpanded: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, {
        payload: boolean;
        type: string;
    }>;
    closeKpiAlertDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    openKpiAlertDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, {
        payload: import("@gooddata/sdk-model").ObjRef;
        type: string;
    }>;
    highlightKpiAlert: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, {
        payload: import("@gooddata/sdk-model").ObjRef;
        type: string;
    }>;
    openShareDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
    closeShareDialog: import("@reduxjs/toolkit").CaseReducer<import("./uiState").UiState, import("@reduxjs/toolkit").AnyAction>;
}>;
//# sourceMappingURL=index.d.ts.map