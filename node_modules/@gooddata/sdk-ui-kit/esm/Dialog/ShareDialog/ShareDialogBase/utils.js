import { areObjRefsEqual, objRefToString, uriRef } from "@gooddata/sdk-model";
import differenceWith from "lodash/differenceWith";
export var GROUP_ALL_ID = "groupAll";
export var GranteeGroupAll = {
    id: uriRef(GROUP_ALL_ID),
    type: "groupAll",
};
export var INACTIVE_OWNER_ID = "inactive_owner";
export var InactiveOwner = {
    id: uriRef(INACTIVE_OWNER_ID),
    type: "inactive_user",
};
var exhaustiveCheck = function (_param) {
    throw new Error("unknown grantee type");
};
export var getGranteeLabel = function (grantee, intl) {
    if (grantee.type === "user") {
        return grantee.name;
    }
    else if (grantee.type === "group") {
        return grantee.name;
    }
    else if (grantee.type === "groupAll") {
        return intl.formatMessage({ id: "shareDialog.share.grantee.item.user.all" });
    }
    else if (grantee.type === "inactive_user") {
        return intl.formatMessage({ id: "shareDialog.share.grantee.item.user.inactive" });
    }
    else {
        exhaustiveCheck(grantee);
    }
};
export var sortGranteesByName = function (intl) {
    return function (granteeA, granteeB) {
        var textA = getGranteeLabel(granteeA, intl).toUpperCase();
        var textB = getGranteeLabel(granteeB, intl).toUpperCase();
        return textA < textB ? -1 : textA > textB ? 1 : 0;
    };
};
export var notInArrayFilter = function (array, notInArray) {
    return differenceWith(array, notInArray, function (g, g1) { return areObjRefsEqual(g.id, g1.id); });
};
/**
 * @internal
 */
export var getGranteeItemTestId = function (grantee, prefix) {
    var prefixValue = prefix ? prefix + "-" : "";
    var id = objRefToString(grantee.id).split("/").pop();
    return "s-gd-grantee-item-id-" + prefixValue + id;
};
//# sourceMappingURL=utils.js.map