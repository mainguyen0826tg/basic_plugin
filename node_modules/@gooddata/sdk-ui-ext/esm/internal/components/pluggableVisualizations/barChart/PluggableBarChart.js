import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { render } from "react-dom";
import { VisualizationTypes } from "@gooddata/sdk-ui";
import { PluggableColumnBarCharts } from "../PluggableColumnBarCharts";
import { BAR_CHART_SUPPORTED_PROPERTIES } from "../../../constants/supportedProperties";
import BarChartConfigurationPanel from "../../configurationPanels/BarChartConfigurationPanel";
import { AXIS, AXIS_NAME } from "../../../constants/axis";
var PluggableBarChart = /** @class */ (function (_super) {
    __extends(PluggableBarChart, _super);
    function PluggableBarChart(props) {
        var _this = _super.call(this, props) || this;
        _this.secondaryAxis = AXIS_NAME.SECONDARY_X;
        _this.type = VisualizationTypes.BAR;
        _this.defaultControlsProperties = {
            stackMeasures: false,
        };
        _this.initializeProperties(props.visualizationProperties);
        return _this;
    }
    PluggableBarChart.prototype.getSupportedPropertiesList = function () {
        return BAR_CHART_SUPPORTED_PROPERTIES[this.axis || AXIS.DUAL] || [];
    };
    PluggableBarChart.prototype.renderConfigurationPanel = function (insight) {
        if (document.querySelector(this.configPanelElement)) {
            render(React.createElement(BarChartConfigurationPanel, { locale: this.locale, colors: this.colors, references: this.references, properties: this.visualizationProperties, propertiesMeta: this.propertiesMeta, insight: insight, pushData: this.handlePushData, type: this.type, isError: this.getIsError(), isLoading: this.isLoading, featureFlags: this.featureFlags, axis: this.axis }), document.querySelector(this.configPanelElement));
        }
    };
    return PluggableBarChart;
}(PluggableColumnBarCharts));
export { PluggableBarChart };
//# sourceMappingURL=PluggableBarChart.js.map