import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React from "react";
import DropdownItem from "./DropdownItem";
import DropdownToggleButton from "./DropdownToggleButton";
import { Overlay } from "../../../Overlay";
var FormatTemplatesDropdown = /** @class */ (function (_super) {
    __extends(FormatTemplatesDropdown, _super);
    function FormatTemplatesDropdown() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isOpened: false,
        };
        _this.closeDropdown = function () {
            _this.setState({ isOpened: false });
        };
        _this.onSelect = function (selectedPreset) {
            _this.props.onChange(selectedPreset.format);
            setTimeout(function () {
                _this.closeDropdown();
            });
        };
        _this.toggleDropdown = function () {
            _this.setState(function (state) { return ({ isOpened: !state.isOpened }); });
        };
        return _this;
    }
    FormatTemplatesDropdown.prototype.render = function () {
        var _this = this;
        var isOpened = this.state.isOpened;
        var _a = this.props, templates = _a.templates, separators = _a.separators;
        return (React.createElement("div", { className: "gd-measure-format-templates" },
            React.createElement(DropdownToggleButton, { toggleDropdown: this.toggleDropdown, isOpened: isOpened }),
            isOpened && (React.createElement(Overlay, { closeOnOutsideClick: true, closeOnParentScroll: true, alignTo: ".gd-measure-custom-format-dialog-section-title", alignPoints: [{ align: "br tr" }, { align: "cr cl", offset: { x: 10 } }], onClose: this.closeDropdown },
                React.createElement("div", { className: "gd-dropdown overlay" },
                    React.createElement("div", { className: "gd-measure-number-format-dropdown-body s-measure-number-format-templates-dropdown" }, templates.map(function (template) { return (React.createElement(DropdownItem, { key: template.localIdentifier, template: template, onClick: _this.onSelect, separators: separators })); })))))));
    };
    return FormatTemplatesDropdown;
}(React.Component));
export { FormatTemplatesDropdown };
//# sourceMappingURL=FormatTemplatesDropdown.js.map