import { __extends } from "tslib";
import isEmpty from "lodash/isEmpty";
import { ErrorCodes, GoodDataSdkError, } from "@gooddata/sdk-ui";
export var DATE_DATASET_ATTRIBUTE = "attr.datedataset";
/**
 * Class name of element where pluggable visualization is supposed to render its configuration
 * panels.
 *
 * @alpha
 */
export var ConfigPanelClassName = "gd-configuration-panel-content";
/**
 * @alpha
 */
export var PluggableVisualizationErrorCodes = {
    /**
     * If pluggable visualization is asked to render itself but its buckets do not contain the right 'stuff',
     * then this is the error code to communicate the fact.
     */
    INVALID_BUCKETS: "INVALID_BUCKETS",
    /**
     * This error means that empty AFM was went to the GoodData.UI and as such can't be executed.
     */
    EMPTY_AFM: "EMPTY_AFM",
};
/**
 * @alpha
 */
var InvalidBucketsSdkError = /** @class */ (function (_super) {
    __extends(InvalidBucketsSdkError, _super);
    function InvalidBucketsSdkError(cause) {
        var _this = _super.call(this, ErrorCodes.UNKNOWN_ERROR, undefined, cause) || this;
        _this.pveType = "INVALID_BUCKETS";
        return _this;
    }
    InvalidBucketsSdkError.prototype.getErrorCode = function () {
        return this.pveType;
    };
    return InvalidBucketsSdkError;
}(GoodDataSdkError));
export { InvalidBucketsSdkError };
/**
 * @alpha
 */
var EmptyAfmSdkError = /** @class */ (function (_super) {
    __extends(EmptyAfmSdkError, _super);
    function EmptyAfmSdkError(cause) {
        var _this = _super.call(this, ErrorCodes.UNKNOWN_ERROR, undefined, cause) || this;
        _this.pveType = "EMPTY_AFM";
        return _this;
    }
    EmptyAfmSdkError.prototype.getErrorCode = function () {
        return this.pveType;
    };
    return EmptyAfmSdkError;
}(GoodDataSdkError));
export { EmptyAfmSdkError };
/**
 * @alpha
 */
export function isPluggableVisualizationError(obj) {
    return !isEmpty(obj) && obj.pveType !== undefined;
}
/**
 * @alpha
 */
export function isInvalidBuckets(obj) {
    return !isEmpty(obj) && obj.pveType === "INVALID_BUCKETS";
}
/**
 * @alpha
 */
export function isEmptyAfm(obj) {
    return !isEmpty(obj) && obj.pveType === "EMPTY_AFM";
}
/**
 * Type-guard testing whether the provided object is an instance of {@link IDrillDownDefinition}.
 * @beta
 */
export function isDrillDownDefinition(obj) {
    return !isEmpty(obj) && obj.type === "drillDown";
}
//# sourceMappingURL=Visualization.js.map