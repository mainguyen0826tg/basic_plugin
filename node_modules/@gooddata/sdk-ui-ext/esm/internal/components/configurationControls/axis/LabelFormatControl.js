// (C) 2021 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import DropdownControl from "../DropdownControl";
import { getTranslatedDropdownItems } from "../../../utils/translations";
import { formatDropdownItems } from "../../../constants/dropdowns";
var getControlProperties = function (properties, axis) {
    var _a, _b, _c, _d;
    var axisProperties = (_a = properties === null || properties === void 0 ? void 0 : properties.controls) === null || _a === void 0 ? void 0 : _a[axis];
    var axisVisible = (_b = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.visible) !== null && _b !== void 0 ? _b : true;
    var axisLabelsEnabled = (_c = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.labelsEnabled) !== null && _c !== void 0 ? _c : true;
    var axisFormat = (_d = axisProperties === null || axisProperties === void 0 ? void 0 : axisProperties.format) !== null && _d !== void 0 ? _d : "auto";
    return {
        axisVisible: axisVisible,
        axisLabelsEnabled: axisLabelsEnabled,
        axisFormat: axisFormat,
    };
};
var LabelFormatControlComponent = function (props) {
    var disabled = props.disabled, properties = props.properties, axis = props.axis, configPanelDisabled = props.configPanelDisabled, pushData = props.pushData, intl = props.intl;
    var _a = getControlProperties(properties, axis), axisVisible = _a.axisVisible, axisLabelsEnabled = _a.axisLabelsEnabled, axisFormat = _a.axisFormat;
    var isDisabled = disabled || !axisVisible || !axisLabelsEnabled;
    return (React.createElement(DropdownControl, { value: axisFormat, valuePath: axis + ".format", labelText: "properties.axis.format", disabled: isDisabled, showDisabledMessage: !configPanelDisabled && isDisabled, properties: properties, pushData: pushData, items: getTranslatedDropdownItems(formatDropdownItems, intl) }));
};
export var LabelFormatControl = injectIntl(LabelFormatControlComponent);
//# sourceMappingURL=LabelFormatControl.js.map