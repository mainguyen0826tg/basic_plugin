import { IAlignPoint } from "../typings/positioning";
import { IRegion } from "../typings/domUtilities";
/**
 * @internal
 */
export declare type GetOptimalAlignment = {
    targetRegion: IRegion;
    selfRegion: IRegion;
    ignoreScrollOffsets?: boolean;
    alignPoints: IAlignPoint[];
    getViewportRegion?: (ignoreScrollOffsets: boolean) => void;
    getDocumentRegion?: () => void;
};
/**
 * @internal
 */
export declare type GetPositionedSelfRegion = {
    targetRegion: IRegion;
    selfRegion: IRegion;
    alignPoint: IAlignPoint;
};
/**
 * @internal
 */
export declare type GetOptimalAlignmentForRegion = {
    boundaryRegion: any;
    targetRegion: any;
    selfRegion: any;
    alignPoints: IAlignPoint[];
};
/**
 * @internal
 */
export declare type Alignment = {
    left: number;
    top: number;
    right: number;
    align: string;
};
/**
 * @internal
 */
export interface IOptimalAlignment {
    alignment: Alignment;
    visiblePart?: number;
}
/**
 * @internal
 */
export declare type SameAsTargetPosition = "sameAsTarget";
/**
 * @internal
 */
export declare type OverlayPositionType = "absolute" | "fixed" | SameAsTargetPosition;
//# sourceMappingURL=overlay.d.ts.map