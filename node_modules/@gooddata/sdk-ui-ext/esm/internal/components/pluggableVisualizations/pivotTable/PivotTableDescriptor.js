import { __extends } from "tslib";
// (C) 2021 GoodData Corporation
import { insightSanitize } from "@gooddata/sdk-model";
import { PluggablePivotTable } from "./PluggablePivotTable";
import { BaseChartDescriptor } from "../baseChart/BaseChartDescriptor";
import { addIntersectionFiltersToInsight, modifyBucketsAttributesForDrillDown, sanitizeTableProperties, } from "../drillDownUtil";
var PivotTableDescriptor = /** @class */ (function (_super) {
    __extends(PivotTableDescriptor, _super);
    function PivotTableDescriptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PivotTableDescriptor.prototype.getFactory = function () {
        return function (params) { return new PluggablePivotTable(params); };
    };
    PivotTableDescriptor.prototype.getSizeInfo = function (_insight, layoutDescriptor, settings) {
        return {
            width: {
                default: layoutDescriptor.gridColumnsCount,
                min: 3,
                max: layoutDescriptor.gridColumnsCount,
            },
            height: {
                default: this.getDefaultHeight(settings.enableKDWidgetCustomHeight),
                min: this.getMinHeight(settings.enableKDWidgetCustomHeight),
                max: this.getMaxHeight(settings.enableKDWidgetCustomHeight),
            },
        };
    };
    PivotTableDescriptor.prototype.applyDrillDown = function (insight, drillDownContext) {
        var drillDownInsight = modifyBucketsAttributesForDrillDown(insight, drillDownContext.drillDefinition);
        var drillDownInsightWithFilters = addIntersectionFiltersToInsight(drillDownInsight, drillDownContext.event.drillContext.intersection);
        return sanitizeTableProperties(insightSanitize(drillDownInsightWithFilters));
    };
    return PivotTableDescriptor;
}(BaseChartDescriptor));
export { PivotTableDescriptor };
//# sourceMappingURL=PivotTableDescriptor.js.map