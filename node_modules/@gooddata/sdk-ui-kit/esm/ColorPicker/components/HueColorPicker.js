import { __extends } from "tslib";
// (C) 2007-2020 GoodData Corporation
/**
 * Copyright (c) 2015 Case Sandberg
 * Copyrights licensed under the MIT License. See the accompanying LICENSE file for terms.
 */
import React, { PureComponent } from "react";
import { calculateHueChange } from "../utils";
var HueColorPicker = /** @class */ (function (_super) {
    __extends(HueColorPicker, _super);
    function HueColorPicker(props) {
        var _this = _super.call(this, props) || this;
        _this.handleChange = function (e) {
            var change = calculateHueChange(e, _this.props.initColor.h, _this.hueContainer.current);
            if (change && _this.props.onChange) {
                _this.props.onChange(change);
            }
        };
        _this.handleTouchChange = function (e) {
            _this.handleChange(e.nativeEvent);
        };
        _this.handleMouseDown = function (e) {
            _this.bindEventListeners();
            _this.handleChange(e.nativeEvent);
        };
        _this.handleMouseUp = function () {
            _this.unbindEventListeners();
        };
        _this.hueContainer = React.createRef();
        return _this;
    }
    HueColorPicker.prototype.componentWillUnmount = function () {
        this.unbindEventListeners();
    };
    HueColorPicker.prototype.getPointerStyle = function () {
        return {
            position: "absolute",
            left: (this.props.initColor.h * 100) / 360 + "%",
        };
    };
    HueColorPicker.prototype.bindEventListeners = function () {
        window.addEventListener("mousemove", this.handleChange);
        window.addEventListener("mouseup", this.handleMouseUp);
    };
    HueColorPicker.prototype.unbindEventListeners = function () {
        window.removeEventListener("mousemove", this.handleChange);
        window.removeEventListener("mouseup", this.handleMouseUp);
    };
    HueColorPicker.prototype.render = function () {
        return (React.createElement("div", { className: "hue-picker hue-horizontal s-hue-picker", ref: this.hueContainer, onMouseDown: this.handleMouseDown, onMouseUp: this.handleMouseUp, onTouchMove: this.handleTouchChange, onTouchStart: this.handleTouchChange },
            React.createElement("div", { style: this.getPointerStyle() },
                React.createElement("div", { className: "color-picker-pointer s-color-picker-pointer" }))));
    };
    return HueColorPicker;
}(PureComponent));
export { HueColorPicker };
//# sourceMappingURL=HueColorPicker.js.map