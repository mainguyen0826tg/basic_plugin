import { isAbsoluteDateFilterForm, isRelativeDateFilterForm } from "@gooddata/sdk-backend-spi";
var validateVisibility = function (filterOption) {
    var errors = {};
    if (!filterOption.visible) {
        // indicate that the Apply button should be disabled, it makes no sense for hidden forms
        errors[filterOption.type] = {};
    }
    return errors;
};
var validateAbsoluteForm = function (filterOption) {
    var errors = validateVisibility(filterOption);
    var absoluteFormKeys = ["from", "to"];
    absoluteFormKeys.forEach(function (field) {
        if (!filterOption[field]) {
            errors.absoluteForm = errors.absoluteForm || {};
            // null means empty, undefined means invalid
            // this is dictated by react-day-picker that returns undefined on invalid values
            if (filterOption[field] === undefined) {
                errors.absoluteForm[field] = "filters.staticPeriod.incorrectFormat";
            }
        }
    });
    return errors.absoluteForm ? errors : {};
};
var validateRelativeForm = function (filterOption) {
    var errors = validateVisibility(filterOption);
    var relativeFormKeys = ["from", "to"];
    relativeFormKeys.forEach(function (field) {
        if (filterOption[field] === undefined) {
            errors.relativeForm = errors.relativeForm || {};
            // There is no validation message as we have no place to show it
        }
    });
    return errors.relativeForm ? errors : {};
};
export var validateFilterOption = function (filterOption) {
    if (isAbsoluteDateFilterForm(filterOption)) {
        return validateAbsoluteForm(filterOption);
    }
    else if (isRelativeDateFilterForm(filterOption)) {
        return validateRelativeForm(filterOption);
    }
    else {
        return validateVisibility(filterOption);
    }
};
//# sourceMappingURL=OptionValidation.js.map