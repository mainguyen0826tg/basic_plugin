import { DrillDown, DashboardDrillDownResolved, DashboardCommandFailed } from "../../../model";
/**
 * @internal
 */
export interface UseDrillDownProps {
    onSuccess?: (event: DashboardDrillDownResolved) => void;
    onError?: (event: DashboardCommandFailed<DrillDown>) => void;
    onBeforeRun?: (cmd: DrillDown) => void;
}
/**
 * @internal
 */
export declare const useDrillDown: ({ onSuccess, onError, onBeforeRun }?: UseDrillDownProps) => {
    run: (insight: import("@gooddata/sdk-model").IInsight, drillDefinition: import("../../..").IDrillDownDefinition, drillEvent: import("../../..").IDashboardDrillEvent, correlationId?: string | undefined) => void;
    status?: "running" | "error" | "success" | undefined;
};
//# sourceMappingURL=useDrillDown.d.ts.map