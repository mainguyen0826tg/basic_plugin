import { __extends } from "tslib";
// (C) 2019-2021 GoodData Corporation
import identity from "lodash/identity";
import { isFactMetadataObject } from "@gooddata/sdk-backend-spi";
import { GroupableCatalogItemBuilder } from "./groupFactory";
import { builderFactory } from "../builder";
import { newFactMetadataObject } from "../metadata/factFactory";
/**
 * Catalog fact builder
 * See {@link Builder}
 *
 * @beta
 */
var CatalogFactBuilder = /** @class */ (function (_super) {
    __extends(CatalogFactBuilder, _super);
    function CatalogFactBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CatalogFactBuilder.prototype.fact = function (factOrRef, modifications) {
        if (!isFactMetadataObject(factOrRef)) {
            this.item.fact = newFactMetadataObject(factOrRef, modifications);
        }
        else {
            this.item.fact = factOrRef;
        }
        return this;
    };
    return CatalogFactBuilder;
}(GroupableCatalogItemBuilder));
export { CatalogFactBuilder };
/**
 * Catalog fact factory
 *
 * @param modifications - catalog fact builder modifications to perform
 * @returns created catalog fact
 * @beta
 */
export var newCatalogFact = function (modifications) {
    if (modifications === void 0) { modifications = identity; }
    return builderFactory(CatalogFactBuilder, { type: "fact" }, modifications);
};
//# sourceMappingURL=factFactory.js.map