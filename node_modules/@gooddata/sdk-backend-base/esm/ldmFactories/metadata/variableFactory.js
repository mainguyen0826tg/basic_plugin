import { __extends } from "tslib";
// (C) 2019-2020 GoodData Corporation
import identity from "lodash/identity";
import { MetadataObjectBuilder } from "./factory";
import { builderFactory } from "../builder";
/**
 * Variable metadata object builder
 * See {@link Builder}
 *
 * @beta
 */
var VariableMetadataObjectBuilder = /** @class */ (function (_super) {
    __extends(VariableMetadataObjectBuilder, _super);
    function VariableMetadataObjectBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return VariableMetadataObjectBuilder;
}(MetadataObjectBuilder));
export { VariableMetadataObjectBuilder };
/**
 * Variable metadata object factory
 *
 * @param ref - variable reference
 * @param modifications - variable builder modifications to perform
 * @returns created variable metadata object
 * @beta
 */
export var newVariableMetadataObject = function (ref, modifications) {
    if (modifications === void 0) { modifications = identity; }
    return builderFactory(VariableMetadataObjectBuilder, { type: "variable", ref: ref }, modifications);
};
//# sourceMappingURL=variableFactory.js.map