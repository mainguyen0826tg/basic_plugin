// (C) 2007-2020 GoodData Corporation
import invariant from "ts-invariant";
import find from "lodash/find";
import every from "lodash/every";
var Rules = /** @class */ (function () {
    function Rules() {
        this.rules = [];
    }
    Rules.prototype.addRule = function (tests, callback) {
        this.rules.push([tests, callback]);
    };
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    Rules.prototype.match = function (subject, params) {
        var _a = find(this.rules, function (_a) {
            var tests = _a[0];
            return every(tests, function (test) { return test(subject, params); });
        }), callback = _a[1];
        invariant(callback, "No suitable rule to handle the parameters found.");
        return callback;
    };
    return Rules;
}());
export { Rules };
//# sourceMappingURL=rules.js.map