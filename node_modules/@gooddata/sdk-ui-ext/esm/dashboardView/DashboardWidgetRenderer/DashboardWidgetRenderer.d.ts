import React from "react";
import { IInsight, ObjRef } from "@gooddata/sdk-model";
import { IWidgetAlert, IAnalyticalBackend, IFilterContext, ITempFilterContext, ScreenSize, IWidget, FilterContextItem } from "@gooddata/sdk-backend-spi";
import { ExplicitDrill, IErrorProps, ILoadingProps, OnError, VisType } from "@gooddata/sdk-ui";
import { IDashboardFilter, OnFiredDashboardViewDrillEvent } from "../types";
export declare type IDashboardWidgetRendererProps = {
    backend?: IAnalyticalBackend;
    workspace?: string;
    filters?: FilterContextItem[];
    filterContext: IFilterContext | ITempFilterContext;
    drillableItems?: ExplicitDrill[];
    onDrill?: OnFiredDashboardViewDrillEvent;
    ErrorComponent: React.ComponentType<IErrorProps>;
    LoadingComponent: React.ComponentType<ILoadingProps>;
    onError?: OnError;
    visType?: VisType;
    insight?: IInsight;
    widget?: IWidget;
    screen: ScreenSize;
    dashboardRef: ObjRef;
    alert?: IWidgetAlert;
    onFiltersChange?: (filters: IDashboardFilter[]) => void;
};
export declare const DashboardWidgetRenderer: React.FC<IDashboardWidgetRendererProps>;
//# sourceMappingURL=DashboardWidgetRenderer.d.ts.map