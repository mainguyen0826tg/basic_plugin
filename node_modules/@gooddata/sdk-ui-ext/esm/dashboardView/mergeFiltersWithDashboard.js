import { __spreadArrays } from "tslib";
import { areObjRefsEqual, filterObjRef, isDateFilter } from "@gooddata/sdk-model";
import { filterArrayToFilterContextItems } from "../internal";
/**
 * Gets filters merged with the filters provided by the specified dashboard.
 *
 * @param dashboard - dashboard to get the filters from
 * @param additionalFilters - filters to apply on top of the filters from the dashboard
 * @beta
 * @deprecated superseded by Dashboard component; please see `@gooddata/sdk-ui-dashboard` and GoodData.UI documentation for v8.7
 */
export function mergeFiltersWithDashboard(dashboard, additionalFilters) {
    var _a, _b;
    var sanitizedAdditionalFilters = filterArrayToFilterContextItems(additionalFilters !== null && additionalFilters !== void 0 ? additionalFilters : []);
    return __spreadArrays(((_b = (_a = dashboard === null || dashboard === void 0 ? void 0 : dashboard.filterContext) === null || _a === void 0 ? void 0 : _a.filters) !== null && _b !== void 0 ? _b : []), sanitizedAdditionalFilters);
}
export function hasDateFilterForDateDataset(filters, dateDataset) {
    return filters.some(function (filter) {
        if (!isDateFilter(filter)) {
            return false;
        }
        return areObjRefsEqual(filterObjRef(filter), dateDataset);
    });
}
//# sourceMappingURL=mergeFiltersWithDashboard.js.map