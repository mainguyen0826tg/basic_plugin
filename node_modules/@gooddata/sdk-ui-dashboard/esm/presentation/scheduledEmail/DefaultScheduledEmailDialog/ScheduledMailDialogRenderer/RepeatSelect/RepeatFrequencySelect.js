import { __extends } from "tslib";
// (C) 2019-2020 GoodData Corporation
import * as React from "react";
import { injectIntl } from "react-intl";
import { Dropdown, DropdownList, DropdownButton, SingleSelectListItem } from "@gooddata/sdk-ui-kit";
import invariant from "ts-invariant";
import { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX, FREQUENCY_TYPE } from "../../constants";
var DROPDOWN_WIDTH = 100;
var RenderRepeatFrequencySelect = /** @class */ (function (_super) {
    __extends(RenderRepeatFrequencySelect, _super);
    function RenderRepeatFrequencySelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isRepeatFrequencyItemSelected = function (item) {
            return item.id === _this.props.repeatFrequency;
        };
        _this.getRepeatFrequencyItem = function (repeatFrequency) {
            var _a = _this.props, intl = _a.intl, repeatPeriod = _a.repeatPeriod;
            return {
                id: repeatFrequency,
                title: intl.formatMessage({
                    id: "dialogs.schedule.email.repeats.frequencies." + repeatFrequency,
                }, {
                    n: repeatPeriod,
                }),
            };
        };
        _this.getRepeatFrequencyItems = function () {
            return FREQUENCY_TYPE.map(_this.getRepeatFrequencyItem);
        };
        _this.onRepeatFrequencyChange = function (item) {
            _this.props.onChange(item.id);
        };
        return _this;
    }
    RenderRepeatFrequencySelect.prototype.render = function () {
        var _this = this;
        var repeatFrequencyItems = this.getRepeatFrequencyItems();
        var repeatFrequencyItem = repeatFrequencyItems.find(this.isRepeatFrequencyItemSelected);
        invariant(repeatFrequencyItem, "Inconsistent state in RepeatFrequencySelect");
        return (React.createElement(Dropdown, { alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, className: "gd-schedule-email-dialog-repeat-frequency s-gd-schedule-email-dialog-repeat-frequency", renderButton: function (_a) {
                var toggleDropdown = _a.toggleDropdown;
                return (React.createElement(DropdownButton, { value: repeatFrequencyItem.title, onClick: toggleDropdown }));
            }, renderBody: function (_a) {
                var closeDropdown = _a.closeDropdown, isMobile = _a.isMobile;
                return (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: repeatFrequencyItems, isMobile: isMobile, renderItem: function (_a) {
                        var item = _a.item;
                        return (React.createElement(SingleSelectListItem, { title: item.title, onClick: function () {
                                _this.onRepeatFrequencyChange(item);
                                closeDropdown();
                            }, isSelected: repeatFrequencyItem.id === item.id }));
                    } }));
            }, overlayPositionType: "sameAsTarget", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }));
    };
    return RenderRepeatFrequencySelect;
}(React.PureComponent));
export var RepeatFrequencySelect = injectIntl(RenderRepeatFrequencySelect);
//# sourceMappingURL=RepeatFrequencySelect.js.map