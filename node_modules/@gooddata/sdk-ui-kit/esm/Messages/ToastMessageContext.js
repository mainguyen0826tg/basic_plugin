import { __assign, __read, __spread } from "tslib";
// (C) 2021 GoodData Corporation
import React, { createContext, useState } from "react";
/**
 * @internal
 */
export var ToastMessageContext = createContext({
    messages: [],
    removeMessage: function () {
        /*do nothing*/
    },
    removeAllMessages: function () {
        /*do nothing*/
    },
    addMessage: function () {
        /*do nothing*/
        return "";
    },
});
var idCounter = 0;
var DEFAULT_DURATION = 2500;
/**
 * @internal
 */
export var ToastMessageContextProvider = function (_a) {
    var children = _a.children;
    var _b = __read(useState([]), 2), messages = _b[0], setMessages = _b[1];
    var removeMessage = function (id) {
        setMessages(function (prevMessages) { return prevMessages.filter(function (message) { return message.id !== id; }); });
    };
    var removeAllMessages = function () {
        setMessages([]);
    };
    var addMessage = function (message) {
        var _a;
        var id = (++idCounter).toString(10);
        var newMessage = __assign(__assign({}, message), { id: id });
        setMessages(function (prevMessages) { return __spread(prevMessages, [newMessage]); });
        var duration = (_a = message.duration) !== null && _a !== void 0 ? _a : DEFAULT_DURATION;
        if (duration) {
            setTimeout(function () {
                removeMessage(newMessage.id);
            }, duration);
        }
        return id;
    };
    return (React.createElement(ToastMessageContext.Provider, { value: { messages: messages, removeMessage: removeMessage, removeAllMessages: removeAllMessages, addMessage: addMessage } }, children));
};
//# sourceMappingURL=ToastMessageContext.js.map