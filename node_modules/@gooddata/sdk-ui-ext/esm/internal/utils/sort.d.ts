import { IBucket, IInsightDefinition, IMeasure, SortDirection, ISortItem } from "@gooddata/sdk-model";
import { IExtendedReferencePoint } from "../interfaces/Visualization";
export declare function getAttributeSortItem(identifier: string, direction?: SortDirection, aggregation?: boolean): ISortItem;
export declare function getDefaultTreemapSortFromBuckets(viewBy: IBucket, segmentBy: IBucket, measures: IMeasure[]): ISortItem[];
export declare function createSorts(type: string, insight: IInsightDefinition, canSortStackTotalValue?: boolean): ISortItem[];
export declare function getBucketItemIdentifiers(referencePoint: IExtendedReferencePoint): string[];
export declare function removeSort(referencePoint: Readonly<IExtendedReferencePoint>): IExtendedReferencePoint;
export declare function removeInvalidSort(referencePoint: Readonly<IExtendedReferencePoint>): IExtendedReferencePoint;
export declare function setSortItems(referencePoint: IExtendedReferencePoint): IExtendedReferencePoint;
//# sourceMappingURL=sort.d.ts.map