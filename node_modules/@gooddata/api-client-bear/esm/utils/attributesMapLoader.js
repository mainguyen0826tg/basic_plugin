function getAttributeUris(displayForms) {
    return displayForms.map(function (displayForm) { return displayForm.attributeDisplayForm.content.formOf; });
}
function createAttributesMap(displayForms, attributes) {
    return displayForms.reduce(function (attributesMap, displayForm) {
        var dfUri = displayForm.attributeDisplayForm.meta.uri;
        var attribute = attributes.find(function (attr) { return attr.attribute.meta.uri === displayForm.attributeDisplayForm.content.formOf; });
        attributesMap[dfUri] = attribute;
        return attributesMap;
    }, {});
}
export function getMissingUrisInAttributesMap(displayFormsUris, attributesMap) {
    var uris = displayFormsUris || [];
    return uris.filter(function (uri) { return !attributesMap[uri]; });
}
var AttributesMapLoaderModule = /** @class */ (function () {
    function AttributesMapLoaderModule(md) {
        this.md = md;
    }
    AttributesMapLoaderModule.prototype.loadAttributesMap = function (projectId, attributeDisplayFormUris) {
        var _this = this;
        if (attributeDisplayFormUris.length === 0) {
            return Promise.resolve({});
        }
        return this.md
            .getObjects(projectId, attributeDisplayFormUris)
            .then(function (displayForms) {
            var attributeUris = getAttributeUris(displayForms);
            return _this.md
                .getObjects(projectId, attributeUris)
                .then(function (attributes) {
                return createAttributesMap(displayForms, attributes);
            });
        });
    };
    return AttributesMapLoaderModule;
}());
export { AttributesMapLoaderModule };
//# sourceMappingURL=attributesMapLoader.js.map