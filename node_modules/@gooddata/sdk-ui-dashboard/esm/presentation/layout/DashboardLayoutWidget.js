// (C) 2020 GoodData Corporation
import React from "react";
import { isWidget, isInsightWidget, widgetType as getWidgetType, isKpiWidget, } from "@gooddata/sdk-backend-spi";
import { selectInsightsMap, selectSettings, useDashboardSelector, } from "../../model";
import { DashboardWidget } from "../widget";
import { getDashboardLayoutItemHeight, getDashboardLayoutItemHeightForRatioAndScreen, getDashboardLayoutWidgetDefaultHeight, } from "./DefaultDashboardLayoutRenderer";
function calculateWidgetMinHeight(widget, currentSize, insights, settings) {
    var widgetType;
    var insight;
    var content;
    if (isWidget(widget)) {
        widgetType = getWidgetType(widget);
    }
    if (isInsightWidget(widget)) {
        insight = insights.get(widget.insight);
        content = insight;
    }
    if (isKpiWidget(widget)) {
        content = widget.kpi;
    }
    return (getDashboardLayoutItemHeight(currentSize) ||
        (!currentSize.heightAsRatio
            ? getDashboardLayoutWidgetDefaultHeight(settings, widgetType, content)
            : undefined));
}
/**
 * @internal
 */
export var DashboardLayoutWidget = function (props) {
    var item = props.item, screen = props.screen, DefaultWidgetRenderer = props.DefaultWidgetRenderer, onDrill = props.onDrill, onFiltersChange = props.onFiltersChange, onError = props.onError;
    var insights = useDashboardSelector(selectInsightsMap);
    var settings = useDashboardSelector(selectSettings);
    // TODO: we should probably do something more meaningful when item has no widget; should that even
    //  be allowed? undefined widget will make things explode down the line away so..
    var widget = item.widget();
    var currentSize = item.size()[screen];
    var minHeight = calculateWidgetMinHeight(widget, currentSize, insights, settings);
    var height = currentSize.heightAsRatio && !currentSize.gridHeight
        ? getDashboardLayoutItemHeightForRatioAndScreen(currentSize, screen)
        : undefined;
    var allowOverflow = !!currentSize.heightAsRatio;
    var className = settings.enableKDWidgetCustomHeight ? "custom-height" : undefined;
    return (React.createElement(DefaultWidgetRenderer, { DefaultWidgetRenderer: DefaultWidgetRenderer, item: item, screen: screen, allowOverflow: allowOverflow, height: height, minHeight: minHeight, className: className },
        React.createElement(DashboardWidget, { screen: screen, onDrill: onDrill, onError: onError, onFiltersChange: onFiltersChange, widget: widget })));
};
//# sourceMappingURL=DashboardLayoutWidget.js.map