import { __read } from "tslib";
// (C) 2020 GoodData Corporation
import React, { useState, useCallback } from "react";
import { CSSTransition, TransitionGroup } from "react-transition-group";
import noop from "lodash/noop";
import cx from "classnames";
import { Message } from "./Message";
import { Overlay } from "../Overlay";
/**
 * @internal
 */
export var Messages = function (_a) {
    var _b = _a.messages, messages = _b === void 0 ? [] : _b, _c = _a.onMessageClose, onMessageClose = _c === void 0 ? noop : _c;
    var _d = __read(useState(true), 2), shouldShowMore = _d[0], setShouldShowMore = _d[1];
    var handleMessageClose = useCallback(function (messageId) {
        setShouldShowMore(true);
        onMessageClose(messageId);
    }, []);
    var handleShowMore = useCallback(function (e) {
        e.preventDefault();
        setShouldShowMore(!shouldShowMore);
    }, [shouldShowMore]);
    var renderMessageWithShowMore = function (message) {
        var showMore = message.showMore, showLess = message.showLess, errorDetail = message.errorDetail, text = message.text, type = message.type;
        var contentClassNames = cx("gd-message-text-content", "s-message-text-content", type, {
            off: shouldShowMore,
            on: !shouldShowMore,
        });
        var showMoreLinkClassNames = cx("gd-message-text-showmorelink", "s-message-text-showmorelink", type);
        return (React.createElement("div", { className: "gd-message-text-showmore" },
            React.createElement("p", { className: "gd-message-text-header" },
                React.createElement("span", { className: "s-message-text-header-value", dangerouslySetInnerHTML: { __html: text } }),
                React.createElement("span", { className: showMoreLinkClassNames, onClick: handleShowMore }, shouldShowMore ? showMore : showLess)),
            React.createElement("div", { className: contentClassNames }, errorDetail)));
    };
    return (React.createElement(Overlay, null,
        React.createElement("div", { className: "gd-messages" },
            React.createElement(TransitionGroup, null,
                React.createElement(CSSTransition, { classNames: "gd-message", timeout: 220 },
                    React.createElement("div", null, messages.map(function (message) {
                        var id = message.id, component = message.component, showMore = message.showMore, text = message.text, type = message.type, contrast = message.contrast, intensive = message.intensive;
                        return (React.createElement("div", { key: id },
                            React.createElement(Message, { className: "gd-message-overlay gd-message-overlay" + (showMore && "-custom"), type: type, onClose: function () {
                                    handleMessageClose(id);
                                }, contrast: contrast, intensive: intensive }, component ||
                                (showMore ? (renderMessageWithShowMore(message)) : (React.createElement("div", { className: "s-message-text-header-value", dangerouslySetInnerHTML: { __html: text } }))))));
                    })))))));
};
//# sourceMappingURL=Messages.js.map