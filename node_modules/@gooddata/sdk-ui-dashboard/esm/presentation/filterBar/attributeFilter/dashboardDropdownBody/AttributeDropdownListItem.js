// (C) 2021 GoodData Corporation
import React from "react";
import isEmpty from "lodash/isEmpty";
import uniqueId from "lodash/uniqueId";
import cx from "classnames";
import { FormattedMessage, injectIntl } from "react-intl";
import { stringUtils } from "@gooddata/util";
var AttributeDropdownListItem = function (props) {
    var _a;
    var source = props.source;
    if (isEmpty(source)) {
        return React.createElement("div", null);
    }
    var className = cx("gd-list-item", "attribute-filter-item", "has-only-visible", (_a = {
            "is-selected": props.selected
        },
        _a["s-" + stringUtils.simplifyText(props.source.title)] = true,
        _a));
    function handleSelect() {
        var _a;
        (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, props.source);
    }
    function handleMouseOver() {
        var _a;
        (_a = props.onMouseOver) === null || _a === void 0 ? void 0 : _a.call(props, props.source);
    }
    function handleMouseOut() {
        var _a;
        (_a = props.onMouseOut) === null || _a === void 0 ? void 0 : _a.call(props, props.source);
    }
    function handleOnly(event) {
        var _a;
        event.stopPropagation();
        (_a = props.onOnly) === null || _a === void 0 ? void 0 : _a.call(props, props.source);
    }
    var itemId = uniqueId("attr-filter-item-");
    return (React.createElement("div", { className: className, onClick: handleSelect, onMouseOver: handleMouseOver, onMouseOut: handleMouseOut, title: props.source.title },
        React.createElement("label", { className: "input-checkbox-label" },
            React.createElement("input", { id: itemId, type: "checkbox", className: "input-checkbox", readOnly: true, checked: props.selected }),
            React.createElement("span", { className: "input-label-text" }, props.source.title)),
        React.createElement("span", { className: "gd-list-item-only", onClick: handleOnly },
            React.createElement(FormattedMessage, { id: "gs.list.only" }))));
};
export default injectIntl(AttributeDropdownListItem);
//# sourceMappingURL=AttributeDropdownListItem.js.map