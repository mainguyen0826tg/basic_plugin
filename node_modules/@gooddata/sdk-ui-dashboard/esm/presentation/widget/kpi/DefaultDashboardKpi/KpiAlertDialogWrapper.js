import { __assign, __rest } from "tslib";
// (C) 2021 GoodData Corporation
import React, { useMemo } from "react";
import { injectIntl } from "react-intl";
import { useDashboardSelector, selectCatalogDateDatasets, } from "../../../../model";
import { enrichBrokenAlertsInfo, KpiAlertDialog } from "./KpiAlerts";
import { useBrokenAlertFiltersMeta } from "./useBrokenAlertFiltersMeta";
var KpiAlertDialogWrapperCore = function (props) {
    var brokenAlertFiltersBasicInfo = props.brokenAlertFiltersBasicInfo, backend = props.backend, workspace = props.workspace, intl = props.intl, restProps = __rest(props, ["brokenAlertFiltersBasicInfo", "backend", "workspace", "intl"]);
    var dateDatasets = useDashboardSelector(selectCatalogDateDatasets);
    var _a = useBrokenAlertFiltersMeta({
        dateDatasets: dateDatasets,
        backend: backend,
        workspace: workspace,
        brokenAlertFilters: brokenAlertFiltersBasicInfo,
    }), brokenAlertFiltersMeta = _a.result, status = _a.status;
    var brokenAlertFilters = useMemo(function () {
        if (!brokenAlertFiltersMeta) {
            return null;
        }
        return enrichBrokenAlertsInfo(brokenAlertFiltersBasicInfo, intl, restProps.dateFormat, brokenAlertFiltersMeta.dateDatasets, brokenAlertFiltersMeta.attributeFiltersMeta);
    }, [brokenAlertFiltersMeta, restProps.dateFormat]);
    return (React.createElement(KpiAlertDialog, __assign({}, restProps, { isAlertDialogOpening: status === "loading", brokenAlertFilters: brokenAlertFilters })));
};
export var KpiAlertDialogWrapper = injectIntl(KpiAlertDialogWrapperCore);
//# sourceMappingURL=KpiAlertDialogWrapper.js.map