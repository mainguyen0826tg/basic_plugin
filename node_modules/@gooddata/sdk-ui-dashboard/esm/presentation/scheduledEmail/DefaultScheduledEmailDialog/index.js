// (C) 2019-2020 GoodData Corporation
import React from "react";
import invariant from "ts-invariant";
import { ScheduledMailDialogRenderer } from "./ScheduledMailDialogRenderer/ScheduledMailDialogRenderer";
import { useScheduledEmail } from "./useScheduledEmail";
/**
 * @alpha
 */
export var DefaultScheduledEmailDialog = function (props) {
    var onSubmit = props.onSubmit, onCancel = props.onCancel, onError = props.onError, isVisible = props.isVisible, onSuccess = props.onSuccess;
    var _a = useScheduledEmail({ onSubmit: onSubmit, onSubmitSuccess: onSuccess }), currentUser = _a.currentUser, dashboardRef = _a.dashboardRef, dashboardTitle = _a.dashboardTitle, handleCreateScheduledEmail = _a.handleCreateScheduledEmail, locale = _a.locale, canListUsersInWorkspace = _a.canListUsersInWorkspace, dateFormat = _a.dateFormat, enableKPIDashboardSchedule = _a.enableKPIDashboardSchedule, enableKPIDashboardScheduleRecipients = _a.enableKPIDashboardScheduleRecipients;
    // trigger the invariant only if the user tries to open the dialog
    if (isVisible) {
        invariant(enableKPIDashboardSchedule, "Feature flag enableKPIDashboardSchedule must be enabled to make ScheduledMailDialog work properly.");
    }
    if (!isVisible) {
        return null;
    }
    return (React.createElement(ScheduledMailDialogRenderer, { locale: locale, canListUsersInProject: canListUsersInWorkspace, enableKPIDashboardScheduleRecipients: enableKPIDashboardScheduleRecipients, dateFormat: dateFormat, currentUser: currentUser, dashboard: dashboardRef, dashboardTitle: dashboardTitle, onSubmit: handleCreateScheduledEmail, onCancel: onCancel, onError: onError }));
};
//# sourceMappingURL=index.js.map