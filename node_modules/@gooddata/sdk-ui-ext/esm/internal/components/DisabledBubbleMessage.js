import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import cx from "classnames";
import { Bubble, BubbleHoverTrigger } from "@gooddata/sdk-ui-kit";
import { getTranslation } from "../utils/translations";
var DisabledBubbleMessage = /** @class */ (function (_super) {
    __extends(DisabledBubbleMessage, _super);
    function DisabledBubbleMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DisabledBubbleMessage.prototype.render = function () {
        var _a = this.props, className = _a.className, children = _a.children, intl = _a.intl;
        return (React.createElement(BubbleHoverTrigger, { className: className },
            children,
            React.createElement(Bubble, { className: this.getBubbleClassNames(), alignPoints: [{ align: "cr cl" }] }, getTranslation("properties.not_applicable", intl))));
    };
    DisabledBubbleMessage.prototype.getBubbleClassNames = function () {
        return cx("bubble-primary", {
            invisible: !this.props.showDisabledMessage,
        });
    };
    return DisabledBubbleMessage;
}(React.PureComponent));
export { DisabledBubbleMessage };
export default injectIntl(DisabledBubbleMessage);
//# sourceMappingURL=DisabledBubbleMessage.js.map