import { convertError, useCancelablePromise, } from "../base";
/**
 * This hook provides easy way to export data in your preferred format (csv/xlsx/raw) for the provided {@link @gooddata/sdk-backend-spi#IPreparedExecution}.
 * As a result, you will receive a string with uri, so you can easily create a download link.
 * Be aware that execution is re-executed only on dependency list change, not on execution/exportConfig/callbacks change.
 *
 * @beta
 */
export function useDataExport(_a, deps) {
    var execution = _a.execution, _b = _a.exportConfig, exportConfig = _b === void 0 ? {} : _b, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess;
    return useCancelablePromise({
        promise: execution
            ? function () {
                return execution
                    .execute()
                    .then(function (executionResult) { return executionResult.export(exportConfig); })
                    .then(function (exportResult) {
                    return exportResult.uri;
                })
                    .catch(function (error) {
                    throw convertError(error);
                });
            }
            : null,
        onCancel: onCancel,
        onError: onError,
        onLoading: onLoading,
        onPending: onPending,
        onSuccess: onSuccess,
    }, deps);
}
//# sourceMappingURL=useDataExport.js.map