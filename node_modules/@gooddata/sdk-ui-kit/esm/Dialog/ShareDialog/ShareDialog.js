// (C) 2021 GoodData Corporation
import React, { useCallback, useMemo } from "react";
import { ShareDialogBase } from "./ShareDialogBase/ShareDialogBase";
import { mapGranteesToShareStatus, mapOwnerToGrantee, mapShareStatusToGroupAll, mapUserToInactiveGrantee, } from "./shareDialogMappers";
/**
 * @internal
 */
export var ShareDialog = function (props) {
    var sharedObject = props.sharedObject, currentUserRef = props.currentUserRef, onApply = props.onApply, onCancel = props.onCancel;
    var createdBy = sharedObject.createdBy, shareStatus = sharedObject.shareStatus;
    var owner = useMemo(function () {
        if (sharedObject.createdBy) {
            return mapOwnerToGrantee(createdBy, currentUserRef);
        }
        return mapUserToInactiveGrantee();
    }, [createdBy, currentUserRef]);
    var grantees = useMemo(function () {
        var groupAll = mapShareStatusToGroupAll(shareStatus);
        if (groupAll) {
            return [groupAll];
        }
        return [];
    }, [shareStatus]);
    var onSubmit = useCallback(function (granteesToAdd, granteesToDelete) {
        var shareStatus = mapGranteesToShareStatus(grantees, granteesToAdd, granteesToDelete);
        var isUnderStrictControl = shareStatus !== "public";
        onApply({ shareStatus: shareStatus, isUnderStrictControl: isUnderStrictControl });
    }, [grantees, onApply]);
    return React.createElement(ShareDialogBase, { owner: owner, grantees: grantees, onCancel: onCancel, onSubmit: onSubmit });
};
//# sourceMappingURL=ShareDialog.js.map