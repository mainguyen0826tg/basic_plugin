import { __assign, __read } from "tslib";
// (C) 2007-2021 GoodData Corporation
import React, { useMemo } from "react";
import { FormattedMessage } from "react-intl";
import cx from "classnames";
import partition from "lodash/partition";
import { FilterLabel } from "@gooddata/sdk-ui-kit";
import { getFilterLabelFilter } from "./utils/filterUtils";
var ITEMS_SCROLL_LIMIT = 5;
var KpiAlertDialogBrokenFiltersSection = function (_a) {
    var filters = _a.filters, type = _a.type;
    if (!filters.length) {
        return null;
    }
    var contentClassNames = cx("filter-section-content", {
        "more-items": filters.length > ITEMS_SCROLL_LIMIT,
    });
    return (React.createElement("div", { className: "filter-section" },
        React.createElement("div", { className: "filter-section-headline" },
            React.createElement(FormattedMessage, { id: type === "deleted" ? "kpiAlertDialog.removedFilters" : "kpiAlertDialog.ignoredFilters" })),
        React.createElement("div", { className: contentClassNames }, filters.map(function (filter) {
            var filterProps = getFilterLabelFilter(filter);
            return (React.createElement("div", { className: "attribute-filter-label", key: filter.title },
                React.createElement(FilterLabel, __assign({}, filterProps))));
        }))));
};
export var KpiAlertDialogBrokenFilters = function (_a) {
    var brokenFilters = _a.brokenFilters;
    var _b = __read(useMemo(function () { return partition(brokenFilters, function (filter) { return filter.brokenType === "deleted"; }); }, [brokenFilters]), 2), deletedFilters = _b[0], ignoredFilters = _b[1];
    return (React.createElement(React.Fragment, null,
        React.createElement(KpiAlertDialogBrokenFiltersSection, { filters: deletedFilters, type: "deleted" }),
        React.createElement(KpiAlertDialogBrokenFiltersSection, { filters: ignoredFilters, type: "ignored" })));
};
//# sourceMappingURL=KpiAlertDialogBrokenFilters.js.map