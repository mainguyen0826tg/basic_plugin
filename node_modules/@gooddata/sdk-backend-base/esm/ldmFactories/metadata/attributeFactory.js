import { __extends } from "tslib";
// (C) 2019-2021 GoodData Corporation
import identity from "lodash/identity";
import { MetadataObjectBuilder } from "./factory";
import { builderFactory } from "../builder";
/**
 * Attribute metadata object builder
 * See {@link Builder}
 *
 * @beta
 */
var AttributeMetadataObjectBuilder = /** @class */ (function (_super) {
    __extends(AttributeMetadataObjectBuilder, _super);
    function AttributeMetadataObjectBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AttributeMetadataObjectBuilder.prototype.drillDownStep = function (ref) {
        if (ref) {
            this.item.drillDownStep = ref;
        }
        return this;
    };
    AttributeMetadataObjectBuilder.prototype.drillToAttributeLink = function (ref) {
        if (ref) {
            this.item.drillToAttributeLink = ref;
        }
        return this;
    };
    AttributeMetadataObjectBuilder.prototype.displayForms = function (displayForms) {
        this.item.displayForms = displayForms;
        return this;
    };
    return AttributeMetadataObjectBuilder;
}(MetadataObjectBuilder));
export { AttributeMetadataObjectBuilder };
/**
 * Attribute metadata object factory
 *
 * @param ref - attribute reference
 * @param modifications - attribute builder modifications to perform
 * @returns created attribute metadata object
 * @beta
 */
export var newAttributeMetadataObject = function (ref, modifications) {
    if (modifications === void 0) { modifications = identity; }
    return builderFactory(AttributeMetadataObjectBuilder, { type: "attribute", ref: ref }, modifications);
};
//# sourceMappingURL=attributeFactory.js.map