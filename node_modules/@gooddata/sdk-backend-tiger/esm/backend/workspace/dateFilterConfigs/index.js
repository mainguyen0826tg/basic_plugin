import { __awaiter, __generator } from "tslib";
// (C) 2019-2021 GoodData Corporation
import { InMemoryPaging } from "@gooddata/sdk-backend-base";
import { idRef } from "@gooddata/sdk-model";
import invariant from "ts-invariant";
var DefaultDateFilterConfig = {
    ref: idRef("defaultDateFilterProjectConfig"),
    selectedOption: "THIS_MONTH",
    allTime: {
        localIdentifier: "ALL_TIME",
        type: "allTime",
        name: "",
        visible: true,
    },
    absoluteForm: {
        localIdentifier: "ABSOLUTE_FORM",
        type: "absoluteForm",
        name: "",
        visible: true,
    },
    relativeForm: {
        type: "relativeForm",
        // month has to be the first as it should be the default selected option
        availableGranularities: ["GDC.time.month", "GDC.time.date", "GDC.time.quarter", "GDC.time.year"],
        localIdentifier: "RELATIVE_FORM",
        name: "",
        visible: true,
    },
    relativePresets: [
        {
            from: -6,
            to: 0,
            granularity: "GDC.time.date",
            localIdentifier: "LAST_7_DAYS",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -29,
            to: 0,
            granularity: "GDC.time.date",
            localIdentifier: "LAST_30_DAYS",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -89,
            to: 0,
            granularity: "GDC.time.date",
            localIdentifier: "LAST_90_DAYS",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: 0,
            to: 0,
            granularity: "GDC.time.month",
            localIdentifier: "THIS_MONTH",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -1,
            to: -1,
            granularity: "GDC.time.month",
            localIdentifier: "LAST_MONTH",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -11,
            to: 0,
            granularity: "GDC.time.month",
            localIdentifier: "LAST_12_MONTHS",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: 0,
            to: 0,
            granularity: "GDC.time.quarter",
            localIdentifier: "THIS_QUARTER",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -1,
            to: -1,
            granularity: "GDC.time.quarter",
            localIdentifier: "LAST_QUARTER",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -3,
            to: 0,
            granularity: "GDC.time.quarter",
            localIdentifier: "LAST_4_QUARTERS",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: 0,
            to: 0,
            granularity: "GDC.time.year",
            localIdentifier: "THIS_YEAR",
            type: "relativePreset",
            visible: true,
            name: "",
        },
        {
            from: -1,
            to: -1,
            granularity: "GDC.time.year",
            localIdentifier: "LAST_YEAR",
            type: "relativePreset",
            visible: true,
            name: "",
        },
    ],
    absolutePresets: [],
};
var TigerWorkspaceDateFilterConfigsQuery = /** @class */ (function () {
    function TigerWorkspaceDateFilterConfigsQuery() {
    }
    TigerWorkspaceDateFilterConfigsQuery.prototype.withLimit = function (limit) {
        invariant(limit > 0, "limit must be a positive number, got: " + limit);
        this.limit = limit;
        return this;
    };
    TigerWorkspaceDateFilterConfigsQuery.prototype.withOffset = function (offset) {
        this.offset = offset;
        return this;
    };
    TigerWorkspaceDateFilterConfigsQuery.prototype.query = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new InMemoryPaging([DefaultDateFilterConfig], this.limit, this.offset)];
            });
        });
    };
    return TigerWorkspaceDateFilterConfigsQuery;
}());
export { TigerWorkspaceDateFilterConfigsQuery };
//# sourceMappingURL=index.js.map