import { isFreemiumEdition, shouldHidePPExperience, shouldEnableNewNavigation } from "../utils/featureFlags";
/**
 * @internal
 */
export var HEADER_ITEM_ID_DASHBOARDS = "gs.header.dashboards";
/**
 * @internal
 */
export var HEADER_ITEM_ID_REPORTS = "gs.header.reports";
/**
 * @internal
 */
export var HEADER_ITEM_ID_KPIS_NEW = "gs.header.kpis.new";
/**
 * @internal
 */
export var HEADER_ITEM_ID_KPIS = "gs.header.kpis";
/**
 * @internal
 */
export var HEADER_ITEM_ID_ANALYZE = "gs.header.analyze";
/**
 * @internal
 */
export var HEADER_ITEM_ID_METRICS = "gs.header.metrics";
/**
 * @internal
 */
export var HEADER_ITEM_ID_LOAD = "gs.header.load";
/**
 * @internal
 */
export var HEADER_ITEM_ID_DATA = "gs.header.data";
/**
 * @internal
 */
export var HEADER_ITEM_ID_MANAGE = "gs.header.manage";
/**
 * @internal
 */
export function generateHeaderMenuItemsGroups(featureFlags, workspacePermissions, hasAnalyticalDashboards, workspaceId, dashboardId, tabId, hasNoDataSet, backendSupportsDataItem, backendSupportsCsvUploader, hasMeasures) {
    if (hasAnalyticalDashboards === void 0) { hasAnalyticalDashboards = false; }
    if (workspaceId === void 0) { workspaceId = undefined; }
    if (dashboardId === void 0) { dashboardId = undefined; }
    if (tabId === void 0) { tabId = undefined; }
    if (hasNoDataSet === void 0) { hasNoDataSet = false; }
    if (backendSupportsDataItem === void 0) { backendSupportsDataItem = false; }
    if (backendSupportsCsvUploader === void 0) { backendSupportsCsvUploader = true; }
    if (hasMeasures === void 0) { hasMeasures = false; }
    if (!workspaceId) {
        return [];
    }
    var workspaceRef = featureFlags.enableRenamingProjectToWorkspace ? "workspace" : "project";
    var pixelPerfectItemsGroup = createPixelPerfectItemsGroup(featureFlags, workspacePermissions, workspaceRef, workspaceId, dashboardId, tabId);
    var insightItemsGroup = createInsightsItemsGroup(featureFlags, workspaceRef, workspaceId, workspacePermissions, hasAnalyticalDashboards, hasMeasures, backendSupportsCsvUploader, backendSupportsDataItem, hasNoDataSet);
    var manageItemsGroup = createManageItemsGroup(workspacePermissions, workspaceRef, workspaceId);
    return [pixelPerfectItemsGroup, insightItemsGroup, manageItemsGroup].filter(function (itemsGroup) { return itemsGroup.length > 0; });
}
function createPixelPerfectItemsGroup(featureFlags, workspacePermissions, workspaceRef, workspaceId, dashboardId, tabId) {
    var canAccessWorkbench = workspacePermissions.canAccessWorkbench, canManageReport = workspacePermissions.canManageReport;
    var shouldHidePixelPerfectExperience = shouldHidePPExperience(featureFlags);
    var pixelPerfectItemsGroup = [];
    var dashboardUrl = dashboardsItemUrl(workspaceRef, workspaceId, dashboardId, tabId);
    pushConditionally(pixelPerfectItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_DASHBOARDS, "s-menu-dashboards", dashboardUrl), !shouldHidePixelPerfectExperience && canAccessWorkbench === true);
    var reportsUrl = reportsItemUrl(workspaceRef, workspaceId);
    pushConditionally(pixelPerfectItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_REPORTS, "s-menu-reports", reportsUrl), !shouldHidePixelPerfectExperience && canManageReport === true);
    return pixelPerfectItemsGroup;
}
function createManageItemsGroup(workspacePermissions, workspaceRef, workspaceId) {
    var canManageMetric = workspacePermissions.canManageMetric;
    var manageItemsGroup = [];
    var manageUrl = manageItemUrl(workspaceRef, workspaceId);
    pushConditionally(manageItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_MANAGE, "s-menu-manage", manageUrl), canManageMetric);
    return manageItemsGroup;
}
function createInsightsItemsGroup(featureFlags, workspaceRef, workspaceId, workspacePermissions, hasAnalyticalDashboards, hasMeasures, backendSupportsCsvUploader, backendSupportsDataItem, hasNoDataSet) {
    var isFreemiumCustomer = isFreemiumEdition(featureFlags.platformEdition);
    var insightItemsGroup = [];
    var kpisUrl = kpisItemUrl(workspaceRef, workspaceId);
    var kpisKey = shouldEnableNewNavigation(featureFlags) ? HEADER_ITEM_ID_KPIS_NEW : HEADER_ITEM_ID_KPIS;
    pushConditionally(insightItemsGroup, createIHeaderMenuItem(kpisKey, "s-menu-kpis", kpisUrl), canShowKpisItem(featureFlags, workspacePermissions, hasAnalyticalDashboards));
    var analyzeUrl = analyzeItemUrl(workspaceId);
    pushConditionally(insightItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_ANALYZE, "s-menu-analyze", analyzeUrl), canShowAnalyzeItem(featureFlags, workspacePermissions));
    var measuresUrl = measuresItemUrl(workspaceId);
    pushConditionally(insightItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_METRICS, "s-menu-metrics", measuresUrl), hasMeasures);
    var loadUrl = loadItemUrl(workspaceRef, workspaceId);
    pushConditionally(insightItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_LOAD, "s-menu-load", loadUrl), canShowLoadItem(featureFlags, workspacePermissions, isFreemiumCustomer, backendSupportsCsvUploader));
    var dataUrl = dataItemUrl(workspaceRef, workspaceId, workspacePermissions, backendSupportsDataItem, hasNoDataSet);
    pushConditionally(insightItemsGroup, createIHeaderMenuItem(HEADER_ITEM_ID_DATA, "s-menu-data", dataUrl), canShowDataItem(featureFlags, workspacePermissions, isFreemiumCustomer, backendSupportsDataItem));
    return insightItemsGroup;
}
function createIHeaderMenuItem(key, className, href) {
    return {
        key: key,
        className: className,
        href: href,
    };
}
function pushConditionally(items, item, cond) {
    if (cond) {
        items.push(item);
    }
}
function manageItemUrl(workspaceRef, workspaceId) {
    return "/#s=/gdc/" + workspaceRef + "s/" + workspaceId + "|dataPage|";
}
function measuresItemUrl(workspaceId) {
    return "/metrics/#/" + workspaceId;
}
function kpisItemUrl(workspaceRef, workspaceId) {
    return "/dashboards/#/" + workspaceRef + "/" + workspaceId;
}
function canShowKpisItem(featureFlags, workspacePermissions, hasAnalyticalDashboards) {
    return Boolean(hasAnalyticalDashboards ||
        (workspacePermissions.canCreateAnalyticalDashboard === true &&
            featureFlags.enableAnalyticalDashboards));
}
function analyzeItemUrl(workspaceId) {
    return "/analyze/#/" + workspaceId + "/reportId/edit";
}
function canShowAnalyzeItem(featureFlags, workspacePermissions) {
    return Boolean(workspacePermissions.canCreateVisualization === true && featureFlags.analyticalDesigner);
}
function dataItemUrl(workspaceRef, workspaceId, workspacePermissions, backendSupportsDataItem, hasNoDataSet) {
    if (backendSupportsDataItem) {
        return "/modeler/#/" + workspaceId;
    }
    if (workspacePermissions.canManageProject && hasNoDataSet) {
        return "/admin/connect/#/" + workspaceRef + "s/" + workspaceId + "/datasource";
    }
    return "/modeler/#/" + workspaceRef + "s/" + workspaceId;
}
function canShowDataItem(featureFlags, workspacePermissions, isFreemiumCustomer, backendSupportsDataItem) {
    return (featureFlags.enableDataSection &&
        (isFreemiumCustomer || backendSupportsDataItem) &&
        (workspacePermissions.canInitData || workspacePermissions.canRefreshData));
}
function loadItemUrl(workspaceRef, workspaceId) {
    return "/data/#/" + workspaceRef + "s/" + workspaceId + "/datasets";
}
function canShowLoadItem(featureFlags, workspacePermissions, isFreemiumCustomer, backendSupportsCsvUploader) {
    var canAccessLoadCsvPage = workspacePermissions.canUploadNonProductionCSV === true && featureFlags.enableCsvUploader;
    var canShowLoadCsvItem = featureFlags.enableDataSection
        ? !isFreemiumCustomer && canAccessLoadCsvPage
        : canAccessLoadCsvPage;
    return Boolean(canShowLoadCsvItem && backendSupportsCsvUploader);
}
function dashboardsItemUrl(workspaceRef, workspaceId, dashboardId, tabId) {
    var dashboardIdAndTabId = dashboardId && tabId ? dashboardId + "|" + tabId : "";
    return "/#s=/gdc/" + workspaceRef + "s/" + workspaceId + "|" + workspaceRef + "DashboardPage|" + dashboardIdAndTabId;
}
function reportsItemUrl(workspaceRef, workspaceId) {
    return "/#s=/gdc/" + workspaceRef + "s/" + workspaceId + "|domainPage|all-reports";
}
//# sourceMappingURL=generateHeaderMenuItemsGroups.js.map