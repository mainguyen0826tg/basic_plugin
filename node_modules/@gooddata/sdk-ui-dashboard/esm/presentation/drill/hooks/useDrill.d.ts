import { Drill, DashboardDrillResolved, DashboardCommandFailed } from "../../../model";
/**
 * @internal
 */
export interface UseDrillProps {
    onSuccess?: (event: DashboardDrillResolved) => void;
    onError?: (event: DashboardCommandFailed<Drill>) => void;
    onBeforeRun?: (cmd: Drill) => void;
}
/**
 * @internal
 */
export declare const useDrill: ({ onSuccess, onError, onBeforeRun }?: UseDrillProps) => {
    run: (drillEvent: import("../../..").IDashboardDrillEvent, drillContext: import("../../..").DashboardDrillContext, correlationId?: string | undefined) => void;
    status?: "running" | "error" | "success" | undefined;
};
//# sourceMappingURL=useDrill.d.ts.map