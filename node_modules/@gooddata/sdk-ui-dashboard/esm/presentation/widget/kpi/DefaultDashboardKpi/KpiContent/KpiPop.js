import { __extends } from "tslib";
// (C) 2007-2020 GoodData Corporation
import React, { PureComponent } from "react";
import cx from "classnames";
import { FormattedHTMLMessage, injectIntl } from "react-intl";
import { ResponsiveText } from "@gooddata/sdk-ui-kit";
import { formatMetric, HYPHEN, isValueUnhandledNull } from "./utils/format";
import { getErrorPopInfo, getPopInfo } from "./utils/pop";
import { HeadlinePagination, shouldRenderPagination, getHeadlineResponsiveClassName, } from "@gooddata/sdk-ui-vis-commons";
var LOADING_PLACEHOLDER = "â€¦";
var NO_DATA_PLACEHOLDER = HYPHEN;
var KpiPop = /** @class */ (function (_super) {
    __extends(KpiPop, _super);
    function KpiPop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kpiSectionItemNode = React.createRef();
        _this.renderPercentage = function () {
            var popInfo = _this.props.disabled || !!_this.props.error
                ? getErrorPopInfo()
                : getPopInfo(_this.props.previousPeriodValue, _this.props.currentPeriodValue, _this.props.meaning);
            var tooltip = _this.props.isLoading ? "" : popInfo.percentage;
            return (React.createElement("dl", { className: "gd-flex-item kpi-pop-section-item kpi-pop-change headline-compare-section-item headline-tertiary-item" },
                React.createElement("div", { className: "headline-value-wrapper s-headline-value-wrapper" },
                    React.createElement(ResponsiveText, { title: tooltip, tagClassName: "is-kpi-" + popInfo.meaning, tagName: "dt" }, _this.renderPercentageValue(popInfo))),
                React.createElement("dd", null,
                    React.createElement(FormattedHTMLMessage, { id: "kpiPop.change" }))));
        };
        _this.renderPreviousPeriod = function () {
            return (React.createElement("dl", { className: "gd-flex-item kpi-pop-section-item kpi-pop-period headline-compare-section-item headline-secondary-item", title: _this.renderFormattedValue() },
                React.createElement(ResponsiveText, { tagName: "dt" }, _this.renderPreviousPeriodValue()),
                _this.renderPreviousPeriodName()));
        };
        return _this;
    }
    KpiPop.prototype.render = function () {
        var _a = this.props, enableCompactSize = _a.enableCompactSize, clientHeight = _a.clientHeight, clientWidth = _a.clientWidth;
        var pagination = shouldRenderPagination(enableCompactSize, clientWidth, clientHeight);
        if (pagination) {
            return (React.createElement("div", { className: "gd-flex-container headline-compare-section headline-paginated-compare-section" },
                React.createElement(HeadlinePagination, { renderSecondaryItem: this.renderPreviousPeriod, renderTertiaryItem: this.renderPercentage })));
        }
        return (React.createElement("div", { className: this.getKpiSectionClassName() },
            this.renderPercentage(),
            this.renderPreviousPeriod()));
    };
    KpiPop.prototype.renderPercentageValue = function (popInfo) {
        return this.props.isLoading ? (false) : (React.createElement(React.Fragment, null,
            React.createElement("span", { className: cx("gd-icon-trend-" + popInfo.trend, "gd-kpi-trend-icon") }),
            popInfo.percentage));
    };
    KpiPop.prototype.renderPreviousPeriodName = function () {
        return this.props.previousPeriodName ? (React.createElement("dd", { className: "headline-title-wrapper", ref: this.kpiSectionItemNode, title: this.props.previousPeriodName }, this.props.previousPeriodName)) : (false);
    };
    KpiPop.prototype.renderPreviousPeriodValue = function () {
        if (this.props.isLoading) {
            return LOADING_PLACEHOLDER;
        }
        return this.props.error ? this.formatMessage("error") : this.renderFormattedValue();
    };
    KpiPop.prototype.renderFormattedValue = function () {
        var _a;
        var value = this.props.previousPeriodValue;
        if (this.props.disabled || isValueUnhandledNull(value, (_a = this.props.format) !== null && _a !== void 0 ? _a : "")) {
            return NO_DATA_PLACEHOLDER;
        }
        return formatMetric(value, this.props.format, this.props.separators);
    };
    KpiPop.prototype.getKpiSectionClassName = function () {
        var clientWidth = this.props.clientWidth;
        var kpiSectionItemNode = this.kpiSectionItemNode.current;
        var className = "gd-flex-container headline-compare-section";
        var responsiveClassName = getHeadlineResponsiveClassName(clientWidth);
        if (kpiSectionItemNode && responsiveClassName) {
            return className + " " + responsiveClassName;
        }
        return className;
    };
    KpiPop.prototype.formatMessage = function (id) {
        return this.props.intl.formatMessage({ id: id });
    };
    KpiPop.defaultProps = {
        error: null,
        disabled: false,
        isLoading: false,
        previousPeriodName: "",
        clientWidth: 0,
        clientHeight: 0,
        enableCompactSize: false,
    };
    return KpiPop;
}(PureComponent));
export default injectIntl(KpiPop);
//# sourceMappingURL=KpiPop.js.map