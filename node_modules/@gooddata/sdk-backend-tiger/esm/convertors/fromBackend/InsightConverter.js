import { __assign } from "tslib";
import { idRef } from "@gooddata/sdk-model";
import { isInheritedObject } from "./utils";
import { convertVisualizationObject } from "./visualizationObjects/VisualizationObjectConverter";
export var insightFromInsightDefinition = function (insight, id, uri, tags) {
    return {
        insight: __assign(__assign({}, insight.insight), { identifier: id, uri: uri, ref: idRef(id, "insight"), 
            // TODO: TIGER-HACK: inherited objects must be locked; they are read-only for all
            isLocked: isInheritedObject(id), tags: tags }),
    };
};
export var visualizationObjectsItemToInsight = function (visualizationObject) {
    return insightFromInsightDefinition(convertVisualizationObject(visualizationObject.attributes.content, visualizationObject.attributes.title), visualizationObject.id, visualizationObject.links.self, visualizationObject.attributes.tags);
};
//# sourceMappingURL=InsightConverter.js.map