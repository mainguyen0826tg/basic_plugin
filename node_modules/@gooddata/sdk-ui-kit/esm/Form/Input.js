import { __assign, __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React from "react";
import isNumber from "lodash/isNumber";
import isString from "lodash/isString";
import isNaN from "lodash/isNaN";
import { InputPure } from "./InputPure";
var isValidNumber = function (value) { return isNumber(value) && !isNaN(value); };
var isNumberOrString = function (value) {
    return isValidNumber(value) || (isString(value) && value.length);
};
var toValidValue = function (value) { return (isNumberOrString(value) ? value : ""); };
/**
 * @internal
 */
var Input = /** @class */ (function (_super) {
    __extends(Input, _super);
    function Input(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (value) {
            _this.valueChanged(value);
        };
        var value = props.value;
        _this.state = {
            value: toValidValue(value),
        };
        return _this;
    }
    Input.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        var validValue = toValidValue(nextProps.value);
        if (this.props.value !== validValue) {
            this.valueChanged(validValue);
        }
    };
    Input.prototype.valueChanged = function (value) {
        if (this.state.value !== value) {
            this.setState({
                value: value,
            });
            this.props.onChange(value);
        }
    };
    Input.prototype.render = function () {
        var _this = this;
        return (React.createElement(InputPure, __assign({}, this.props, { ref: function (ref) {
                _this.inputNodeRef = ref;
            }, onChange: this.onChange, value: this.state.value })));
    };
    Input.defaultProps = __assign({}, InputPure.defaultProps);
    return Input;
}(React.PureComponent));
export { Input };
//# sourceMappingURL=Input.js.map