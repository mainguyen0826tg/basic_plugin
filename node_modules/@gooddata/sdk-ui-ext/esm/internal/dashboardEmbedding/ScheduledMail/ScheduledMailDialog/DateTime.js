import { __extends } from "tslib";
// (C) 2019-2020 GoodData Corporation
import * as React from "react";
import { Datepicker, Timepicker } from "@gooddata/sdk-ui-kit";
import { DEFAULT_DROPDOWN_ZINDEX } from "../constants";
var MAX_VISIBLE_ITEMS_COUNT = 5;
var DateTime = /** @class */ (function (_super) {
    __extends(DateTime, _super);
    function DateTime() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeChange = function (selectedTime) {
            _this.props.onTimeChange({
                hour: selectedTime.getHours(),
                minute: selectedTime.getMinutes(),
                second: selectedTime.getSeconds(),
            });
        };
        return _this;
    }
    DateTime.prototype.render = function () {
        var _a = this.props, date = _a.date, dateFormat = _a.dateFormat, label = _a.label, locale = _a.locale, timezone = _a.timezone, onDateChange = _a.onDateChange;
        return (React.createElement("div", { className: "gd-input-component gd-schedule-email-dialog-datetime s-gd-schedule-email-dialog-datetime" },
            React.createElement("label", { className: "gd-label" }, label),
            React.createElement("div", null,
                React.createElement(Datepicker, { date: date, dateFormat: dateFormat, locale: locale, placeholder: dateFormat, resetOnInvalidValue: true, onChange: onDateChange }),
                React.createElement(Timepicker, { className: "gd-schedule-email-dialog-datetime-time", maxVisibleItemsCount: MAX_VISIBLE_ITEMS_COUNT, skipNormalizeTime: true, time: date, onChange: this.timeChange, overlayPositionType: "sameAsTarget", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }),
                React.createElement("span", { className: "gd-schedule-email-dialog-datetime-timezone s-gd-schedule-email-dialog-datetime-timezone" }, timezone))));
    };
    return DateTime;
}(React.PureComponent));
export { DateTime };
//# sourceMappingURL=DateTime.js.map