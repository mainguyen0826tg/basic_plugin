import { __assign } from "tslib";
// (C) 2007-2018 GoodData Corporation
import React from "react";
import { newBucket } from "@gooddata/sdk-model";
import { BucketNames, useResolveValuesWithPlaceholders, withContexts, } from "@gooddata/sdk-ui";
import { CoreHeadline } from "./CoreHeadline";
import omit from "lodash/omit";
import invariant from "ts-invariant";
var WrappedHeadline = withContexts(RenderHeadline);
/**
 * [Headline](https://sdk.gooddata.com/gooddata-ui/docs/headline_component.html)
 * Headline shows a single number or compares two numbers. You can display both measures and attributes.
 *
 * Headlines have two sections: Measure (primary) and Measure (secondary).
 * You can add one item to each section. If you add two items, the headline also displays the change in percent.
 *
 * @public
 */
export var Headline = function (props) {
    var _a = useResolveValuesWithPlaceholders([props.primaryMeasure, props.secondaryMeasure, props.filters], props.placeholdersResolutionContext), primaryMeasure = _a[0], secondaryMeasure = _a[1], filters = _a[2];
    return React.createElement(WrappedHeadline, __assign({}, props, { primaryMeasure: primaryMeasure, secondaryMeasure: secondaryMeasure, filters: filters }));
};
export function RenderHeadline(props) {
    invariant(props.primaryMeasure, "The property primaryMeasure must be specified.");
    return React.createElement(CoreHeadline, __assign({}, toCoreHeadlineProps(props)));
}
export function toCoreHeadlineProps(props) {
    var buckets = [
        newBucket(BucketNames.MEASURES, props.primaryMeasure, props.secondaryMeasure),
    ];
    var newProps = omit(props, [
        "primaryMeasure",
        "secondaryMeasure",
        "filters",
        "backend",
    ]);
    return __assign(__assign({}, newProps), { execution: createExecution(buckets, props), exportTitle: props.exportTitle || "Headline" });
}
function createExecution(buckets, props) {
    var backend = props.backend, workspace = props.workspace, execConfig = props.execConfig;
    return backend
        .withTelemetry("Headline", props)
        .workspace(workspace)
        .execution()
        .forBuckets(buckets, props.filters)
        .withDimensions({ itemIdentifiers: ["measureGroup"] })
        .withExecConfig(execConfig);
}
//# sourceMappingURL=Headline.js.map