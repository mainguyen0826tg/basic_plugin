import React from "react";
import { WrappedComponentProps } from "react-intl";
import { IColor, IColorPalette } from "@gooddata/sdk-model";
import { IColoredItem } from "../../../../interfaces/Colors";
export interface IColoredItemProps {
    colorPalette: IColorPalette;
    className?: string;
    item?: IColoredItem;
    onSelect?: (source: IColoredItem, color: IColor) => void;
    showCustomPicker?: boolean;
    isSelected?: boolean;
    disabled?: boolean;
}
declare const _default: React.ForwardRefExoticComponent<Pick<IColoredItemProps & WrappedComponentProps<"intl">, "disabled" | "className" | "isSelected" | "onSelect" | "item" | "colorPalette" | "showCustomPicker"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IColoredItemProps & WrappedComponentProps<"intl">>;
};
export default _default;
//# sourceMappingURL=ColoredItem.d.ts.map