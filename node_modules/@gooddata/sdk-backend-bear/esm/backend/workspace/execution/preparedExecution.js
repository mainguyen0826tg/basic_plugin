// (C) 2019-2021 GoodData Corporation
import { __awaiter, __generator, __spreadArrays } from "tslib";
import { defFingerprint, defWithDimensions, defWithSorting, defWithDateFormat, } from "@gooddata/sdk-model";
import isEqual from "lodash/isEqual";
import isEmpty from "lodash/isEmpty";
import { convertExecutionApiError } from "../../../utils/errorHandling";
import { BearExecutionResult } from "./executionResult";
import { toAfmExecution } from "../../../convertors/toBackend/afm/ExecutionConverter";
var BearPreparedExecution = /** @class */ (function () {
    function BearPreparedExecution(authCall, definition, executionFactory) {
        this.authCall = authCall;
        this.definition = definition;
        this.executionFactory = executionFactory;
    }
    BearPreparedExecution.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var afmExecution;
            var _this = this;
            return __generator(this, function (_a) {
                afmExecution = toAfmExecution(this.definition);
                return [2 /*return*/, this.authCall(function (sdk) {
                        return sdk.execution
                            .getExecutionResponse(_this.definition.workspace, afmExecution)
                            .then(function (response) {
                            return new BearExecutionResult(_this.authCall, _this.definition, _this.executionFactory, response);
                        });
                    }, convertExecutionApiError)];
            });
        });
    };
    BearPreparedExecution.prototype.explain = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // eslint-disable-next-line no-console
                console.warn("Backend does not support explain mode");
                return [2 /*return*/, new Promise(function (resolve) { return resolve(); })];
            });
        });
    };
    BearPreparedExecution.prototype.withDimensions = function () {
        var dimsOrGen = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            dimsOrGen[_i] = arguments[_i];
        }
        return this.executionFactory.forDefinition(defWithDimensions.apply(void 0, __spreadArrays([this.definition], dimsOrGen)));
    };
    BearPreparedExecution.prototype.withSorting = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        return this.executionFactory.forDefinition(defWithSorting(this.definition, items));
    };
    BearPreparedExecution.prototype.withDateFormat = function (dateFormat) {
        return this.executionFactory.forDefinition(defWithDateFormat(this.definition, dateFormat));
    };
    BearPreparedExecution.prototype.withExecConfig = function (config) {
        if (!isEmpty(config === null || config === void 0 ? void 0 : config.dataSamplingPercentage)) {
            // eslint-disable-next-line no-console
            console.warn("Backend does not support data sampling, result will be not affected");
        }
        return this.executionFactory.forDefinition(this.definition);
    };
    BearPreparedExecution.prototype.fingerprint = function () {
        if (!this._fingerprint) {
            this._fingerprint = defFingerprint(this.definition);
        }
        return this._fingerprint;
    };
    BearPreparedExecution.prototype.equals = function (other) {
        return isEqual(this.definition, other.definition);
    };
    return BearPreparedExecution;
}());
export { BearPreparedExecution };
//# sourceMappingURL=preparedExecution.js.map