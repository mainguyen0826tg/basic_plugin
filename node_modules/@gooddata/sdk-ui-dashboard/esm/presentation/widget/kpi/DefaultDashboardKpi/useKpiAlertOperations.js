import { __read, __spread } from "tslib";
// (C) 2020-2021 GoodData Corporation
import { useCallback, useState } from "react";
import { createAlert, updateAlert, removeAlerts, dispatchAndWaitFor, useDashboardDispatch, } from "../../../../model";
function useKpiAlertOperation(commandCreator, onSuccess) {
    var _a = __read(useState("idle"), 2), status = _a[0], setStatus = _a[1];
    var dispatch = useDashboardDispatch();
    var run = useCallback(function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        setStatus("inProgress");
        dispatchAndWaitFor(dispatch, commandCreator.apply(void 0, __spread(args)))
            .then(function () {
            setStatus("idle");
            onSuccess();
        })
            .catch(function () { return setStatus("error"); });
    }, [onSuccess]);
    return [status, run];
}
export var useKpiAlertOperations = function (closeAlertDialog) {
    var _a = __read(useKpiAlertOperation(createAlert, closeAlertDialog), 2), creatingStatus = _a[0], onCreateAlert = _a[1];
    var _b = __read(useKpiAlertOperation(updateAlert, closeAlertDialog), 2), updatingStatus = _b[0], onUpdateAlert = _b[1];
    var _c = __read(useKpiAlertOperation(removeAlerts, closeAlertDialog), 2), removingStatus = _c[0], onRemoveAlerts = _c[1];
    var onRemoveAlert = useCallback(function (alert) {
        onRemoveAlerts([alert.ref]);
    }, [onRemoveAlerts]);
    return {
        onCreateAlert: onCreateAlert,
        creatingStatus: creatingStatus,
        onUpdateAlert: onUpdateAlert,
        updatingStatus: updatingStatus,
        onRemoveAlert: onRemoveAlert,
        removingStatus: removingStatus,
    };
};
//# sourceMappingURL=useKpiAlertOperations.js.map