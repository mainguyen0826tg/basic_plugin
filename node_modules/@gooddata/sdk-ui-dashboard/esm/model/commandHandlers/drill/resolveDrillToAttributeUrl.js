import { __generator } from "tslib";
// (C) 2020-2021 GoodData Corporation
import { call } from "redux-saga/effects";
import { isDrillIntersectionAttributeItem, } from "@gooddata/sdk-ui";
import { areObjRefsEqual } from "@gooddata/sdk-model";
import { getElementTitle } from "./getElementTitle";
function getDrillToAttributeUrlIntersectionAttributeItemHeader(drillConfig, event) {
    var _a;
    return (_a = event.drillContext.intersection.find(function (item) {
        return isDrillIntersectionAttributeItem(item.header) &&
            areObjRefsEqual(item.header.attributeHeader.ref, drillConfig.target.displayForm);
    })) === null || _a === void 0 ? void 0 : _a.header;
}
export function resolveDrillToAttributeUrl(drillConfig, event, ctx) {
    var header, url;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                header = getDrillToAttributeUrlIntersectionAttributeItemHeader(drillConfig, event);
                if (!header) {
                    return [2 /*return*/];
                }
                return [4 /*yield*/, call(getElementTitle, ctx.workspace, drillConfig.target.hyperlinkDisplayForm, header.attributeHeaderItem.uri, ctx)];
            case 1:
                url = _a.sent();
                return [2 /*return*/, url];
        }
    });
}
//# sourceMappingURL=resolveDrillToAttributeUrl.js.map