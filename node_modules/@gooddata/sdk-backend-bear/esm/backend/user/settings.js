import { __assign, __awaiter, __generator } from "tslib";
import { userLoginMd5FromAuthenticatedPrincipalWithAnonymous } from "../../utils/api";
import { ANONYMOUS_USER_SETTINGS } from "../constants";
var BearUserSettingsService = /** @class */ (function () {
    function BearUserSettingsService(authCall) {
        this.authCall = authCall;
    }
    BearUserSettingsService.prototype.getSettings = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (sdk, _a) {
                        var getPrincipal = _a.getPrincipal;
                        return __awaiter(_this, void 0, void 0, function () {
                            var userLoginMd5, _b, flags, currentProfile, separators, language;
                            return __generator(this, function (_c) {
                                switch (_c.label) {
                                    case 0: return [4 /*yield*/, userLoginMd5FromAuthenticatedPrincipalWithAnonymous(getPrincipal)];
                                    case 1:
                                        userLoginMd5 = _c.sent();
                                        // for anonymous users, return defaults
                                        if (!userLoginMd5) {
                                            return [2 /*return*/, ANONYMOUS_USER_SETTINGS];
                                        }
                                        return [4 /*yield*/, Promise.all([
                                                sdk.user.getUserFeatureFlags(userLoginMd5),
                                                sdk.user.getCurrentProfile(),
                                                sdk.user.getUserRegionalNumberFormatting(userLoginMd5),
                                            ])];
                                    case 2:
                                        _b = _c.sent(), flags = _b[0], currentProfile = _b[1], separators = _b[2];
                                        language = currentProfile.language;
                                        return [2 /*return*/, __assign({ userId: userLoginMd5, locale: language, separators: separators }, flags)];
                                }
                            });
                        });
                    })];
            });
        });
    };
    return BearUserSettingsService;
}());
export { BearUserSettingsService };
//# sourceMappingURL=settings.js.map