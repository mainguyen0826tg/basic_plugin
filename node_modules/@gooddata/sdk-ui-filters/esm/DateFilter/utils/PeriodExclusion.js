// (C) 2007-2020 GoodData Corporation
import { __assign } from "tslib";
import { isAllTimeDateFilterOption, isAbsoluteDateFilterForm, isAbsoluteDateFilterPreset, isRelativeDateFilterForm, isRelativeDateFilterPreset, } from "@gooddata/sdk-backend-spi";
/**
 * Returns the date filter option with excludeCurrentPeriod applied if applicable.
 */
export var applyExcludeCurrentPeriod = function (dateFilterOption, excludeCurrentPeriod) {
    if (!dateFilterOption || !excludeCurrentPeriod) {
        return dateFilterOption;
    }
    if (isAllTimeDateFilterOption(dateFilterOption) ||
        isAbsoluteDateFilterForm(dateFilterOption) ||
        isAbsoluteDateFilterPreset(dateFilterOption) ||
        isRelativeDateFilterForm(dateFilterOption)) {
        return dateFilterOption;
    }
    else if (isRelativeDateFilterPreset(dateFilterOption)) {
        var from = dateFilterOption.from, to = dateFilterOption.to;
        var shouldExcludeCurrent = to === 0 && from < to;
        return __assign(__assign({}, dateFilterOption), { from: shouldExcludeCurrent ? dateFilterOption.from - 1 : dateFilterOption.from, to: shouldExcludeCurrent ? -1 : to });
    }
    else {
        throw new Error("Unknown date filter value type");
    }
};
export var canExcludeCurrentPeriod = function (dateFilterOption) {
    if (!dateFilterOption.visible) {
        return false;
    }
    if (isRelativeDateFilterPreset(dateFilterOption)) {
        return dateFilterOption.to === 0 && dateFilterOption.from < dateFilterOption.to;
    }
    return false;
};
//# sourceMappingURL=PeriodExclusion.js.map