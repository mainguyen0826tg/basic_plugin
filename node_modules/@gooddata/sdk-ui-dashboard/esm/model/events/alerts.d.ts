import { IWidgetAlert } from "@gooddata/sdk-backend-spi";
import { DashboardContext } from "../types/commonTypes";
import { IDashboardEvent } from "./base";
/**
 * This event is emitted after the Kpi alert is successfully saved.
 *
 * @alpha
 */
export interface DashboardAlertCreated extends IDashboardEvent {
    readonly type: "GDC.DASH/EVT.ALERT.CREATED";
    readonly payload: {
        readonly alert: IWidgetAlert;
    };
}
export declare function alertCreated(ctx: DashboardContext, alert: IWidgetAlert, correlationId?: string): DashboardAlertCreated;
/**
 * Tests whether the provided object is an instance of {@link DashboardAlertCreated}.
 *
 * @param obj - object to test
 * @alpha
 */
export declare const isDashboardAlertCreated: (obj: unknown) => obj is DashboardAlertCreated;
/**
 * This event is emitted after the Kpi alerts are successfully removed.
 *
 * @alpha
 */
export interface DashboardAlertsRemoved extends IDashboardEvent {
    readonly type: "GDC.DASH/EVT.ALERTS.REMOVED";
    readonly payload: {
        readonly alerts: IWidgetAlert[];
    };
}
export declare function alertsRemoved(ctx: DashboardContext, alerts: IWidgetAlert[], correlationId?: string): DashboardAlertsRemoved;
/**
 * Tests whether the provided object is an instance of {@link DashboardAlertsRemoved}.
 *
 * @param obj - object to test
 * @alpha
 */
export declare const isDashboardAlertsRemoved: (obj: unknown) => obj is DashboardAlertsRemoved;
/**
 * This event is emitted after the Kpi alert is updated.
 *
 * @alpha
 */
export interface DashboardAlertUpdated extends IDashboardEvent {
    readonly type: "GDC.DASH/EVT.ALERT.UPDATED";
    readonly payload: {
        readonly updated: IWidgetAlert;
    };
}
export declare function alertUpdated(ctx: DashboardContext, updated: IWidgetAlert, correlationId?: string): DashboardAlertUpdated;
/**
 * Tests whether the provided object is an instance of {@link DashboardAlertUpdated}.
 *
 * @param obj - object to test
 * @alpha
 */
export declare const isDashboardAlertUpdated: (obj: unknown) => obj is DashboardAlertUpdated;
//# sourceMappingURL=alerts.d.ts.map