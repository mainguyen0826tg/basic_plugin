import { isAbsoluteDateFilter, isAllTimeDateFilter, isDateFilter, isRelativeDateFilter, relativeDateFilterValues, } from "@gooddata/sdk-model";
import last from "lodash/last";
export function isAlertingTemporarilyDisabledForGivenFilter(kpi, filters, userWorkspaceSettings) {
    var hasDateDataSet = !!kpi.dateDataSet;
    if (!hasDateDataSet) {
        // for KPI's not connected to a dateDataSet, the filter config is irrelevant -> alerts are never disabled
        return false;
    }
    var effectiveDateFilter = last(filters.filter(isDateFilter));
    if (!effectiveDateFilter || isAllTimeDateFilter(effectiveDateFilter)) {
        return false;
    }
    var isAfmExecutorEnabled = !!(userWorkspaceSettings === null || userWorkspaceSettings === void 0 ? void 0 : userWorkspaceSettings["kpi.alerting.useAfmExecutor"]);
    if (isAfmExecutorEnabled) {
        // AfmExecutor supports all filters except static ranges
        return isAbsoluteDateFilter(effectiveDateFilter);
    }
    else {
        // we only allow the alerts for backwards-compatible filters now
        // i.e. relative presets without exclude current period selected
        if (!isRelativeDateFilter(effectiveDateFilter)) {
            return true;
        }
        var _a = relativeDateFilterValues(effectiveDateFilter), from = _a.from, to = _a.to;
        var endsInPreviousPeriod = to === -1; // ends in previous period
        var isLongerThanOnePeriod = from !== to; // but is not only that period (e.g. last year)
        return endsInPreviousPeriod && isLongerThanOnePeriod;
    }
}
//# sourceMappingURL=filterUtils.js.map