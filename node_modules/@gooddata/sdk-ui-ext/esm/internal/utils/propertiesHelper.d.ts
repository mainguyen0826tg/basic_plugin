import { IExtendedReferencePoint, IVisualizationProperties, IBucketItem } from "../interfaces/Visualization";
import { AxisType } from "../interfaces/AxisType";
import { ColumnWidthItem } from "@gooddata/sdk-ui-pivot";
export declare function getSupportedPropertiesControls(visualizationControlsProperties: IVisualizationProperties["controls"], supportedPropertiesList: string[]): IVisualizationProperties;
export declare function hasColorMapping(properties: IVisualizationProperties): boolean;
export declare function setSecondaryMeasures(referencePoint: IExtendedReferencePoint, axisName: AxisType): IExtendedReferencePoint;
export declare function isEmptyObject(obj: object): boolean;
export declare function getSupportedProperties(visualizationProperties: IVisualizationProperties, supportedPropertiesList: string[]): IVisualizationProperties;
export declare function getReferencePointWithSupportedProperties(referencePoint: IExtendedReferencePoint, supportedPropertiesList: string[]): IExtendedReferencePoint;
export declare function isStackingMeasure(properties: IVisualizationProperties): boolean;
export declare function isStackingToPercent(properties: IVisualizationProperties): boolean;
export declare function isDualAxisOrSomeSecondaryAxisMeasure(extReferencePoint: IExtendedReferencePoint, secondaryMeasures: IBucketItem[]): boolean;
export declare function removeImmutableOptionalStackingProperties(referencePoint: IExtendedReferencePoint, supportedPropertiesList: string[]): string[];
export declare function getHighchartsAxisNameConfiguration(controlProperties: IVisualizationProperties, enableAxisNameConfiguration?: boolean): IVisualizationProperties;
export declare function getDataPointsConfiguration(controlProperties: IVisualizationProperties, enableHidingOfDataPoints?: boolean): IVisualizationProperties;
export declare function getColumnWidthsFromProperties(visualizationProperties: IVisualizationProperties): ColumnWidthItem[] | undefined;
//# sourceMappingURL=propertiesHelper.d.ts.map