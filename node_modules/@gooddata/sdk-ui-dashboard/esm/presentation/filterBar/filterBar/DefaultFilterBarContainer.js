// (C) 2021 GoodData Corporation
import React from "react";
import Measure from "react-measure";
import { IntlWrapper } from "../../localization";
import { selectFilterBarExpanded, selectFilterBarHeight, selectLocale, uiActions, useDashboardDispatch, useDashboardSelector, } from "../../../model";
import { ShowAllFiltersButton } from "./ShowAllFiltersButton";
import { DEFAULT_FILTER_BAR_HEIGHT } from "../../constants";
var DefaultFilterBarContainerCore = function (_a) {
    var children = _a.children;
    var dispatch = useDashboardDispatch();
    var filterBarHeight = useDashboardSelector(selectFilterBarHeight);
    var filterBarExpanded = useDashboardSelector(selectFilterBarExpanded);
    var setFilterBarExpanded = function (isExpanded) {
        return dispatch(uiActions.setFilterBarExpanded(isExpanded));
    };
    var setFilterBarHeight = function (height) { return dispatch(uiActions.setFilterBarHeight(height)); };
    var onAttributeFilterBarHeightChange = function (val) {
        if (val !== filterBarHeight) {
            setFilterBarHeight(val);
        }
    };
    var areFiltersHidden = Math.round(filterBarHeight) <= DEFAULT_FILTER_BAR_HEIGHT;
    var dashFiltersVisibleStyle = {
        height: filterBarExpanded ? filterBarHeight : DEFAULT_FILTER_BAR_HEIGHT,
    };
    return (React.createElement("div", { className: "dash-filters-wrapper s-gd-dashboard-filter-bar" },
        React.createElement("div", { className: "dash-filters-visible", style: dashFiltersVisibleStyle },
            React.createElement(Measure, { bounds: true, onResize: function (dimensions) { return onAttributeFilterBarHeightChange(dimensions.bounds.height); } }, function (_a) {
                var measureRef = _a.measureRef;
                return (React.createElement("div", { className: "dash-filters-all", ref: measureRef }, children));
            })),
        React.createElement(ShowAllFiltersButton, { isFilterBarExpanded: filterBarExpanded, isVisible: !areFiltersHidden, onToggle: function (isExpanded) { return setFilterBarExpanded(isExpanded); } })));
};
/**
 * @internal
 */
export var DefaultFilterBarContainer = function (_a) {
    var children = _a.children;
    var locale = useDashboardSelector(selectLocale);
    return (React.createElement(IntlWrapper, { locale: locale },
        React.createElement(DefaultFilterBarContainerCore, null, children)));
};
//# sourceMappingURL=DefaultFilterBarContainer.js.map