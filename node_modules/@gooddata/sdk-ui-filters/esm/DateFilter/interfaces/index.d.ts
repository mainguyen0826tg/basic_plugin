import { IAbsoluteDateFilterForm, IAbsoluteDateFilterPreset, IRelativeDateFilterForm, IRelativeDateFilterPreset, IAllTimeDateFilterOption, DateFilterGranularity, IRelativeDateFilterPresetOfGranularity, DateString, RelativeGranularityOffset } from "@gooddata/sdk-backend-spi";
/**
 * Represents the global absolute date filter, which may contain selected values
 * @public
 */
export interface IUiAbsoluteDateFilterForm extends IAbsoluteDateFilterForm {
    /**
     * Selected global absolute date filter start date
     */
    from?: DateString;
    /**
     * Selected global absolute date filter end date
     */
    to?: DateString;
}
/**
 * Type-guard testing whether the provided object is an instance of {@link IUiRelativeDateFilterForm}.
 * @public
 */
export declare const isUiRelativeDateFilterForm: (obj: unknown) => obj is IUiRelativeDateFilterForm;
/**
 * Represents the global relative date filter, which may contain selected granularity and values
 * @public
 */
export interface IUiRelativeDateFilterForm extends Omit<IRelativeDateFilterForm, "availableGranularities"> {
    /**
     * Selected global relative date filter granularity
     */
    granularity?: DateFilterGranularity;
    /**
     * Selected global relative date filter granularity start offset
     */
    from?: RelativeGranularityOffset;
    /**
     * Selected global relative date filter granularity end offset
     */
    to?: RelativeGranularityOffset;
}
/**
 * Represents a absolute date filter option in the date filter dropdown
 * @public
 */
export declare type AbsoluteDateFilterOption = IUiAbsoluteDateFilterForm | IAbsoluteDateFilterPreset;
/**
 * Type-guard testing whether the provided object is an instance of {@link AbsoluteDateFilterOption}.
 * @public
 */
export declare const isAbsoluteDateFilterOption: (obj: unknown) => obj is AbsoluteDateFilterOption;
/**
 * Represents a relative date filter option in the date filter dropdown
 * @public
 */
export declare type RelativeDateFilterOption = IUiRelativeDateFilterForm | IRelativeDateFilterPreset;
/**
 * Type-guard testing whether the provided object is an instance of {@link RelativeDateFilterOption}.
 * @public
 */
export declare const isRelativeDateFilterOption: (obj: unknown) => obj is RelativeDateFilterOption;
/**
 * Represents any option in the date filter dropdown
 * @public
 */
export declare type DateFilterOption = IAllTimeDateFilterOption | AbsoluteDateFilterOption | RelativeDateFilterOption;
/**
 * Relative date filter options grouped by their granularity
 * @public
 */
export declare type DateFilterRelativeOptionGroup = {
    [key in DateFilterGranularity]?: Array<IRelativeDateFilterPresetOfGranularity<key>>;
};
/**
 * All date filter options grouped by their type
 * @public
 */
export interface IDateFilterOptionsByType {
    /**
     * Global all time date filter options
     */
    allTime?: IAllTimeDateFilterOption;
    /**
     * Global absolute date filter options
     */
    absoluteForm?: IUiAbsoluteDateFilterForm;
    /**
     * Global relative date filter options
     */
    relativeForm?: IUiRelativeDateFilterForm;
    /**
     * Custom absolute date filter presets
     */
    absolutePreset?: IAbsoluteDateFilterPreset[];
    /**
     * Custom relative date filter presets
     */
    relativePreset?: DateFilterRelativeOptionGroup;
}
/**
 * Extended date filter errors
 * @public
 */
export interface IExtendedDateFilterErrors {
    /**
     * Global absolute date filter errors
     */
    absoluteForm?: {
        from?: string;
        to?: string;
    };
    /**
     * Global relative date filter errors
     */
    relativeForm?: {
        from?: string;
        to?: string;
    };
}
//# sourceMappingURL=index.d.ts.map