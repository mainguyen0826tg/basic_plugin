import { __extends } from "tslib";
// (C) 2019 GoodData Corporation
import React from "react";
import CustomEvent from "custom-event";
import { injectIntl } from "react-intl";
import { DropdownList } from "@gooddata/sdk-ui-kit";
import ColoredItem from "./ColoredItem";
import { getSearchedItems } from "../../../../utils/colors";
var VISIBLE_ITEMS_COUNT = 5;
var SEARCHFIELD_VISIBILITY_THRESHOLD = 7;
var DROPDOWN_BODY_WIDTH = 218;
var ColoredItemsList = /** @class */ (function (_super) {
    __extends(ColoredItemsList, _super);
    function ColoredItemsList(props) {
        var _this = _super.call(this, props) || this;
        _this.onScroll = function () {
            if (_this.listRef && _this.listRef.current) {
                var node = _this.listRef.current;
                node.dispatchEvent(new CustomEvent("goodstrap.scrolled", { bubbles: true }));
            }
        };
        _this.onSearch = function (searchString) {
            _this.setState({ searchString: searchString });
            _this.closeOpenDropdownOnSearch();
        };
        _this.isSearchFieldVisible = function () {
            return _this.props.inputItems.length > SEARCHFIELD_VISIBILITY_THRESHOLD && !_this.props.isLoading;
        };
        _this.onSelect = function (selectedColorItem, color) {
            _this.props.onSelect(selectedColorItem, color);
        };
        _this.state = {
            searchString: "",
        };
        _this.listRef = React.createRef();
        return _this;
    }
    ColoredItemsList.prototype.render = function () {
        var _this = this;
        var searchString = this.isSearchFieldVisible() ? this.state.searchString : "";
        var items = getSearchedItems(this.props.inputItems, searchString);
        return (React.createElement("div", { ref: this.listRef },
            React.createElement(DropdownList, { width: DROPDOWN_BODY_WIDTH, showSearch: this.isSearchFieldVisible(), searchString: searchString, onSearch: this.onSearch, onScrollStart: this.onScroll, items: items, className: "gd-colored-items-list", maxVisibleItemsCount: VISIBLE_ITEMS_COUNT, isLoading: this.props.isLoading, renderItem: function (_a) {
                    var item = _a.item;
                    return (React.createElement(ColoredItem, { colorPalette: _this.props.colorPalette, onSelect: _this.onSelect, showCustomPicker: _this.props.showCustomPicker, disabled: _this.props.disabled, item: item }));
                } })));
    };
    ColoredItemsList.prototype.closeOpenDropdownOnSearch = function () {
        // we have to close all dropdown ONE-3526
        // (IE has bug onClick on ClearIcon in Input doesn't fire click event and dropdown will not close)
        // so we can close it by onScroll event
        this.onScroll();
    };
    ColoredItemsList.defaultProps = {
        disabled: false,
        isLoading: false,
    };
    return ColoredItemsList;
}(React.PureComponent));
export default injectIntl(ColoredItemsList);
//# sourceMappingURL=ColoredItemsList.js.map