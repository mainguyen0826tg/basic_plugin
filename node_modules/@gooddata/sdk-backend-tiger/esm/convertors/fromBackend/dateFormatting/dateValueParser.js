// (C) 2020 GoodData Corporation
import parse from "date-fns/parse";
import identity from "lodash/identity";
import { UnexpectedError } from "@gooddata/sdk-backend-spi";
var granularityParseValueTransformations = {
    "GDC.time.day_in_week": function (value) {
        // server returns 0 = Sunday, 6 = Saturday
        // date-fns expects 1 = Monday, 7 = Sunday
        return value === "0" ? "7" : value;
    },
};
var granularityParsePatterns = {
    "GDC.time.minute": "yyyy-MM-dd HH:mm",
    "GDC.time.minute_in_hour": "mm",
    "GDC.time.hour": "yyyy-MM-dd HH",
    "GDC.time.hour_in_day": "HH",
    "GDC.time.date": "yyyy-MM-dd",
    "GDC.time.day_in_month": "d",
    "GDC.time.day_in_week": "i",
    "GDC.time.day_in_year": "D",
    "GDC.time.month": "yyyy-MM",
    "GDC.time.month_in_year": "M",
    "GDC.time.quarter": "yyyy-q",
    "GDC.time.quarter_in_year": "q",
    "GDC.time.week_us": "YYYY-ww",
    "GDC.time.week_in_year": "w",
    "GDC.time.year": "yyyy",
};
/**
 * Parses a string representation of a date of a given granularity to a Date object.
 * @param value - value to parse.
 * @param granularity - granularity to assume when parsing the value.
 * @internal
 */
export var parseDateValue = function (value, granularity) {
    var _a;
    var parsePattern = granularityParsePatterns[granularity];
    if (!parsePattern) {
        throw new UnexpectedError("No date parser for the \"" + granularity + "\" granularity available.");
    }
    var valueTransform = (_a = granularityParseValueTransformations[granularity]) !== null && _a !== void 0 ? _a : identity;
    return parse(valueTransform(value), parsePattern, new Date(), {
        useAdditionalDayOfYearTokens: true,
        useAdditionalWeekYearTokens: true,
    });
};
//# sourceMappingURL=dateValueParser.js.map