import { __assign } from "tslib";
// (C) 2021 GoodData Corporation
import React, { useCallback } from "react";
import { useIntl } from "react-intl";
import { ExportDialog } from "@gooddata/sdk-ui-kit";
import { useExportDialogContext } from "../dashboardContexts";
/**
 * @internal
 */
export var ExportDialogProvider = function () {
    var _a = useExportDialogContext(), closeDialog = _a.closeDialog, dialogConfig = _a.dialogConfig, isOpen = _a.isOpen;
    var intl = useIntl();
    var originalOnClose = dialogConfig.onClose;
    var onClose = useCallback(function () {
        originalOnClose === null || originalOnClose === void 0 ? void 0 : originalOnClose();
        closeDialog();
    }, [originalOnClose, closeDialog]);
    return isOpen ? (React.createElement(ExportDialog, __assign({}, dialogConfig, { headline: intl.formatMessage({ id: "dialogs.export.headline" }), cancelButtonText: intl.formatMessage({ id: "cancel" }), submitButtonText: intl.formatMessage({ id: "dialogs.export.submit" }), filterContextText: intl.formatMessage({ id: "dialogs.export.includeFilters" }), filterContextTitle: intl.formatMessage({ id: "dialogs.export.filters" }), mergeHeadersText: intl.formatMessage({ id: "dialogs.export.mergeHeaders" }), mergeHeadersTitle: intl.formatMessage({ id: "dialogs.export.cells" }), onClose: onClose, onCancel: closeDialog }))) : null;
};
//# sourceMappingURL=ExportDialogProvider.js.map