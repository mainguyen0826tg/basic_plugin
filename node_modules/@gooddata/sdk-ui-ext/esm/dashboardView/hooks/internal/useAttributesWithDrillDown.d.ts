import { IAnalyticalBackend, ICatalogAttribute, ICatalogDateAttribute } from "@gooddata/sdk-backend-spi";
import { GoodDataSdkError, UseCancelablePromiseCallbacks, UseCancelablePromiseState } from "@gooddata/sdk-ui";
interface IAttributesWithDrillDownConfig extends UseCancelablePromiseCallbacks<Array<ICatalogAttribute | ICatalogDateAttribute>, GoodDataSdkError> {
    /**
     * Backend to work with.
     *
     * Note: the backend must come either from this property or from BackendContext. If you do not specify
     * backend here, then the hook MUST be rendered within an existing BackendContext.
     */
    backend?: IAnalyticalBackend;
    /**
     * Workspace to get the color palette for.
     *
     * Note: the workspace must come either from this property or from WorkspaceContext. If you do not specify
     * workspace here, then the hook MUST be rendered within an existing WorkspaceContext.
     */
    workspace?: string;
    /**
     * If false, the catalog loading is skipped since nobody cares about the results anyway (no one is handling the drills).
     */
    hasDrillingEnabled?: boolean;
}
/**
 * Hook allowing to download attributes with drillDown of the given workspace
 * @param config - configuration of the hook
 * @internal
 */
export declare function useAttributesWithDrillDown({ backend, hasDrillingEnabled, onCancel, onError, onLoading, onPending, onSuccess, workspace, }: IAttributesWithDrillDownConfig): UseCancelablePromiseState<Array<ICatalogAttribute | ICatalogDateAttribute>, any>;
export {};
//# sourceMappingURL=useAttributesWithDrillDown.d.ts.map