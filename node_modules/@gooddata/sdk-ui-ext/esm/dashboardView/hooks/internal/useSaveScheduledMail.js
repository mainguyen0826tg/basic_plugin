import { useBackend, useCancelablePromise, useWorkspace, } from "@gooddata/sdk-ui";
import { backendInvariant, workspaceInvariant } from "../utils";
/**
 * Hook allowing to schedule email
 * @param config - configuration of the hook
 * @internal
 */
export function useSaveScheduledMail(_a) {
    var scheduledMail = _a.scheduledMail, filterContext = _a.filterContext, backend = _a.backend, workspace = _a.workspace, onCancel = _a.onCancel, onError = _a.onError, onLoading = _a.onLoading, onPending = _a.onPending, onSuccess = _a.onSuccess;
    var effectiveBackend = useBackend(backend);
    var effectiveWorkspace = useWorkspace(workspace);
    backendInvariant(effectiveBackend, "useSaveScheduledMail");
    workspaceInvariant(effectiveWorkspace, "useSaveScheduledMail");
    var promise = scheduledMail
        ? function () {
            return effectiveBackend
                .workspace(effectiveWorkspace)
                .dashboards()
                .createScheduledMail(scheduledMail, filterContext);
        }
        : null;
    return useCancelablePromise({ promise: promise, onCancel: onCancel, onError: onError, onLoading: onLoading, onPending: onPending, onSuccess: onSuccess }, [
        effectiveBackend,
        effectiveWorkspace,
        scheduledMail,
        filterContext,
    ]);
}
//# sourceMappingURL=useSaveScheduledMail.js.map