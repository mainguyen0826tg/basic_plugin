/// <reference types="lodash" />
import { DashboardState } from "../types";
import { ObjRef } from "@gooddata/sdk-model";
import { IWidgetAlert } from "@gooddata/sdk-backend-spi";
/**
 * Selects all alerts used on the dashboard.
 *
 * @alpha
 */
export declare const selectAlerts: (state: DashboardState) => IWidgetAlert[];
/**
 * Selects alert or undefined by widget ref
 *
 * @alpha
 */
export declare const selectAlertByWidgetRef: ((widgetRef: ObjRef) => (state: DashboardState) => IWidgetAlert | undefined) & import("lodash").MemoizedFunction;
/**
 * Selects dashboard alerts in mapping an obj ref to widget map.
 *
 * @internal
 */
export declare const selectAlertsMap: import("@reduxjs/toolkit").OutputSelector<DashboardState, import("../../../_staging/metadata/objRefMap").ObjRefMap<IWidgetAlert>, (res: IWidgetAlert[]) => import("../../../_staging/metadata/objRefMap").ObjRefMap<IWidgetAlert>>;
/**
 * Selects alert or undefined by alert ref
 *
 * @alpha
 */
export declare const selectAlertByRef: ((ref: ObjRef) => (state: DashboardState) => IWidgetAlert | undefined) & import("lodash").MemoizedFunction;
//# sourceMappingURL=alertsSelectors.d.ts.map