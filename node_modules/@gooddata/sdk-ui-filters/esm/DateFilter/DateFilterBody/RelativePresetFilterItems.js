// (C) 2019 GoodData Corporation
import React from "react";
import kebabCase from "lodash/kebabCase";
import cx from "classnames";
import { ListItem } from "../ListItem/ListItem";
import { ListHeading } from "../ListHeading/ListHeading";
import { RelativePresetTitleTranslated } from "../RelativePresetTitleTranslated/RelativePresetTitleTranslated";
import { DateFilterTextLocalized } from "../DateFilterTextLocalized/DateFilterTextLocalized";
var granularityOrder = [
    "GDC.time.date",
    "GDC.time.week_us",
    "GDC.time.month",
    "GDC.time.quarter",
    "GDC.time.year",
];
export var RelativePresetFilterItems = function (_a) {
    var dateFormat = _a.dateFormat, filterOption = _a.filterOption, selectedFilterOption = _a.selectedFilterOption, onSelectedFilterOptionChange = _a.onSelectedFilterOptionChange, className = _a.className;
    var relativePresets = granularityOrder
        .filter(function (granularity) {
        return Boolean(filterOption && filterOption[granularity] && filterOption[granularity].length > 0);
    })
        .map(function (granularity) { return ({
        granularity: granularity,
        items: filterOption[granularity],
    }); });
    return (React.createElement(React.Fragment, null, relativePresets.map(function (preset) { return (React.createElement(React.Fragment, { key: preset.granularity },
        React.createElement(ListHeading, { className: className },
            React.createElement(RelativePresetTitleTranslated, { granularity: preset.granularity })),
        preset.items.map(function (item) { return (React.createElement(ListItem, { key: item.localIdentifier, isSelected: item.localIdentifier === selectedFilterOption.localIdentifier, onClick: function () { return onSelectedFilterOptionChange(item); }, className: cx("s-relative-preset-" + kebabCase(item.localIdentifier), className) },
            React.createElement(DateFilterTextLocalized, { filter: item, dateFormat: dateFormat }))); }))); })));
};
//# sourceMappingURL=RelativePresetFilterItems.js.map