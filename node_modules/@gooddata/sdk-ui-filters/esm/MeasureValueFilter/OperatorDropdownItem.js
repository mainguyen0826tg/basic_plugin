import { __extends } from "tslib";
// (C) 2007-2019 GoodData Corporation
import React from "react";
import { injectIntl } from "react-intl";
import cx from "classnames";
import capitalize from "lodash/capitalize";
import noop from "lodash/noop";
import { stringUtils } from "@gooddata/util";
import { getOperatorTranslationKey, getOperatorIcon } from "./helpers/measureValueFilterOperator";
import { Bubble, BubbleHoverTrigger } from "@gooddata/sdk-ui-kit";
var OperatorDropdownItem = /** @class */ (function (_super) {
    __extends(OperatorDropdownItem, _super);
    function OperatorDropdownItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleOnClick = function (e) {
            var _a = _this.props, operator = _a.operator, onClick = _a.onClick;
            onClick(operator);
            e.preventDefault();
        };
        return _this;
    }
    OperatorDropdownItem.prototype.render = function () {
        var _a = this.props, intl = _a.intl, operator = _a.operator, selectedOperator = _a.selectedOperator, bubbleText = _a.bubbleText;
        var className = cx("gd-list-item", "gd-list-item-shortened", "s-mvf-operator-" + stringUtils.simplifyText(operator), {
            "is-selected": selectedOperator === operator,
        });
        var title = intl.formatMessage({ id: getOperatorTranslationKey(operator) });
        return (React.createElement("div", { className: className, onClick: this.handleOnClick },
            React.createElement("div", { className: "gd-icon-" + getOperatorIcon(operator), title: title }),
            React.createElement("span", { title: title }, capitalize(title)),
            bubbleText && this.renderBubble(bubbleText)));
    };
    OperatorDropdownItem.prototype.renderBubble = function (message) {
        return (React.createElement("div", { className: "tooltip-bubble" },
            React.createElement(BubbleHoverTrigger, { tagName: "div", showDelay: 400, hideDelay: 200 },
                React.createElement("div", { className: "inlineBubbleHelp" }),
                React.createElement(Bubble, { className: "bubble-primary", alignPoints: [{ align: "tc bl" }] }, message))));
    };
    OperatorDropdownItem.defaultProps = {
        onClick: noop,
        bubbleText: null,
    };
    return OperatorDropdownItem;
}(React.PureComponent));
export { OperatorDropdownItem };
export default injectIntl(OperatorDropdownItem);
//# sourceMappingURL=OperatorDropdownItem.js.map