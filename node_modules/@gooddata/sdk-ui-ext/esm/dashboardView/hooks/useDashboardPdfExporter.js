// (C) 2021 GoodData Corporation
import { useState } from "react";
import { useExportDashboardToPdf as useExportDashboardToPdfCore } from "./internal/useExportDashboardToPdf";
function downloadFile(uri) {
    var anchor = document.createElement("a");
    anchor.id = "downloader";
    anchor.href = uri;
    anchor.download = uri;
    document.body.appendChild(anchor);
    anchor.click();
    document.body.removeChild(anchor);
}
/**
 * Hook providing convenience function for exporting a dashboard to PDF.
 *
 * @param config - configuration of the hook
 * @beta
 * @deprecated superseded by Dashboard component; please see `@gooddata/sdk-ui-dashboard` and GoodData.UI documentation for v8.7
 */
export function useDashboardPdfExporter(_a) {
    var _b = _a === void 0 ? {} : _a, backend = _b.backend, workspace = _b.workspace, onError = _b.onError, onCancel = _b.onCancel, onLoading = _b.onLoading, onPending = _b.onPending, onSuccess = _b.onSuccess;
    var _c = useState(), dashboardToExport = _c[0], setDashboardToExport = _c[1];
    var _d = useState(), filtersToExport = _d[0], setFiltersToExport = _d[1];
    var exportDashboard = function (dashboard, filters) {
        setDashboardToExport(dashboard);
        setFiltersToExport(filters);
    };
    var _e = useExportDashboardToPdfCore({
        backend: backend,
        workspace: workspace,
        dashboard: dashboardToExport,
        filters: filtersToExport,
        onError: function (error) {
            setDashboardToExport(undefined);
            onError === null || onError === void 0 ? void 0 : onError(error);
        },
        onSuccess: function (url) {
            downloadFile(url);
            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(url);
        },
        onCancel: onCancel,
        onLoading: onLoading,
        onPending: onPending,
    }), status = _e.status, error = _e.error;
    return {
        exportDashboard: exportDashboard,
        status: status,
        error: error,
    };
}
//# sourceMappingURL=useDashboardPdfExporter.js.map