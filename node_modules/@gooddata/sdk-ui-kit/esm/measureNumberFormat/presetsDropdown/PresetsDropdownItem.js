import { __extends } from "tslib";
// (C) 2020 GoodData Corporation
import React from "react";
import cx from "classnames";
import { stringUtils } from "@gooddata/util";
import { FormattedPreview } from "../customFormatDialog/shared/FormattedPreview";
var PresetsDropdownItem = /** @class */ (function (_super) {
    __extends(PresetsDropdownItem, _super);
    function PresetsDropdownItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleOnClick = function (e) {
            var _a = _this.props, preset = _a.preset, onClick = _a.onClick;
            onClick(preset);
            e.preventDefault();
        };
        return _this;
    }
    PresetsDropdownItem.prototype.render = function () {
        var _a = this.props, preset = _a.preset, separators = _a.separators, isSelected = _a.isSelected;
        var localIdentifier = preset.localIdentifier, name = preset.name, previewNumber = preset.previewNumber, format = preset.format;
        var className = cx("gd-list-item", "gd-format-preset", "s-format-preset-" + localIdentifier, "s-format-preset-name-" + stringUtils.simplifyText(name), {
            "is-selected": isSelected,
        });
        return (React.createElement("div", { className: className, onClick: this.handleOnClick },
            React.createElement("span", { title: name, className: "gd-format-preset-name gd-list-item-shortened" }, name),
            previewNumber !== null && format !== null && (React.createElement(FormattedPreview, { previewNumber: previewNumber, format: format, separators: separators, colors: false, className: "gd-format-preset-preview" }))));
    };
    PresetsDropdownItem.defaultProps = {
        isSelected: false,
    };
    return PresetsDropdownItem;
}(React.PureComponent));
export { PresetsDropdownItem };
//# sourceMappingURL=PresetsDropdownItem.js.map