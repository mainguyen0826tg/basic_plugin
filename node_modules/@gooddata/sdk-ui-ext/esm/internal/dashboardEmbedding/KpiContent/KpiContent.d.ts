import React from "react";
import { WrappedComponentProps } from "react-intl";
import { GoodDataSdkError, ISeparators } from "@gooddata/sdk-ui";
import { IKpiWidget, IKpiWidgetDefinition } from "@gooddata/sdk-backend-spi";
import { IFilter } from "@gooddata/sdk-model";
import { IKpiResult } from "../types";
export interface IKpiContentProps {
    kpi: IKpiWidget | IKpiWidgetDefinition;
    isLoading: boolean;
    filters?: IFilter[];
    separators?: ISeparators;
    kpiResult: IKpiResult | undefined;
    error?: GoodDataSdkError | undefined;
    errorHelp?: string;
    enableCompactSize?: boolean;
    isKpiUnderlineHiddenWhenClickable?: boolean;
    isKpiValueClickDisabled?: boolean;
    onKpiValueClick?: () => void;
}
declare const _default: React.ForwardRefExoticComponent<Pick<IKpiContentProps & WrappedComponentProps<"intl">, "kpi" | "error" | "filters" | "separators" | "isLoading" | "kpiResult" | "errorHelp" | "enableCompactSize" | "isKpiValueClickDisabled" | "isKpiUnderlineHiddenWhenClickable" | "onKpiValueClick"> & {
    forwardedRef?: React.Ref<any>;
} & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IKpiContentProps & WrappedComponentProps<"intl">>;
};
export default _default;
//# sourceMappingURL=KpiContent.d.ts.map