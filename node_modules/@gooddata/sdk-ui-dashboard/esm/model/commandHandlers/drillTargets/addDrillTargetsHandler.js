import { __generator } from "tslib";
import { put, select } from "redux-saga/effects";
import { drillTargetsAdded } from "../../events/drillTargets";
import { drillTargetsActions } from "../../store/drillTargets";
import { selectWidgetsMap } from "../../store/layout/layoutSelectors";
import { validateExistingInsightWidget } from "../widgets/validation/widgetValidations";
export function addDrillTargetsHandler(ctx, cmd) {
    var availableDrillTargets, correlationId, widgets, insightWidget, ref, uri, identifier;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                availableDrillTargets = cmd.payload.availableDrillTargets, correlationId = cmd.correlationId;
                return [4 /*yield*/, select(selectWidgetsMap)];
            case 1:
                widgets = _a.sent();
                insightWidget = validateExistingInsightWidget(widgets, cmd, ctx);
                ref = insightWidget.ref, uri = insightWidget.uri, identifier = insightWidget.identifier;
                return [4 /*yield*/, put(drillTargetsActions.addDrillTargets({
                        identifier: identifier,
                        uri: uri,
                        ref: ref,
                        availableDrillTargets: availableDrillTargets,
                    }))];
            case 2:
                _a.sent();
                return [2 /*return*/, drillTargetsAdded(ctx, ref, availableDrillTargets, correlationId)];
        }
    });
}
//# sourceMappingURL=addDrillTargetsHandler.js.map