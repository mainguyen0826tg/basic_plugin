// (C) 2021 GoodData Corporation
import { useState } from "react";
import { isWidgetAlert } from "@gooddata/sdk-backend-spi";
import { useSaveOrUpdateWidgetAlert } from "../../../hooks/internal";
import { useAlerts } from "../../../contexts";
export function useAlertSaveOrUpdateHandler(_a) {
    var closeAlertDialog = _a.closeAlertDialog, backend = _a.backend, workspace = _a.workspace;
    var _b = useAlerts(), addAlert = _b.addAlert, updateAlert = _b.updateAlert;
    var _c = useState(), alertToSave = _c[0], setAlertToSave = _c[1];
    var saveOrUpdateAlert = function (alert) { return setAlertToSave(alert); };
    var _d = useState("idle"), alertSavingStatus = _d[0], setAlertSavingStatus = _d[1];
    useSaveOrUpdateWidgetAlert({
        backend: backend,
        workspace: workspace,
        widgetAlert: alertToSave,
        onError: function () {
            setAlertSavingStatus("error");
            setAlertToSave(undefined);
        },
        onLoading: function () { return setAlertSavingStatus("inProgress"); },
        onSuccess: function (saved) {
            setAlertSavingStatus("idle");
            var wasUpdate = isWidgetAlert(alertToSave);
            if (wasUpdate) {
                updateAlert(saved);
            }
            else {
                addAlert(saved);
            }
            setAlertToSave(undefined);
            closeAlertDialog();
        },
    });
    return {
        alertSavingStatus: alertSavingStatus,
        saveOrUpdateAlert: saveOrUpdateAlert,
    };
}
//# sourceMappingURL=useAlertSaveOrUpdateHandler.js.map