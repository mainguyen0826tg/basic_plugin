// (C) 2021 GoodData Corporation
import { __extends } from "tslib";
import { PluggableLineChart } from "./PluggableLineChart";
import { BaseChartDescriptor } from "../baseChart/BaseChartDescriptor";
import { addIntersectionFiltersToInsight, modifyBucketsAttributesForDrillDown, reverseAndTrimIntersection, } from "../drillDownUtil";
var LineChartDescriptor = /** @class */ (function (_super) {
    __extends(LineChartDescriptor, _super);
    function LineChartDescriptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineChartDescriptor.prototype.getFactory = function () {
        return function (params) { return new PluggableLineChart(params); };
    };
    LineChartDescriptor.prototype.applyDrillDown = function (source, drillDownContext) {
        var withFilters = this.addFilters(source, drillDownContext.drillDefinition, drillDownContext.event);
        return modifyBucketsAttributesForDrillDown(withFilters, drillDownContext.drillDefinition);
    };
    LineChartDescriptor.prototype.addFilters = function (source, drillConfig, event) {
        var cutIntersection = reverseAndTrimIntersection(drillConfig, event.drillContext.intersection);
        return addIntersectionFiltersToInsight(source, cutIntersection);
    };
    return LineChartDescriptor;
}(BaseChartDescriptor));
export { LineChartDescriptor };
//# sourceMappingURL=LineChartDescriptor.js.map