import { __extends } from "tslib";
// (C) 2019-2021 GoodData Corporation
import identity from "lodash/identity";
import { Builder, builderFactory } from "../builder";
/**
 * Groupable catalog item builder
 * See {@link Builder}
 *
 * @beta
 */
var GroupableCatalogItemBuilder = /** @class */ (function (_super) {
    __extends(GroupableCatalogItemBuilder, _super);
    function GroupableCatalogItemBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GroupableCatalogItemBuilder.prototype.groups = function (tagRefs) {
        this.item.groups = tagRefs;
        return this;
    };
    return GroupableCatalogItemBuilder;
}(Builder));
export { GroupableCatalogItemBuilder };
/**
 * Catalog group builder
 * See {@link Builder}
 *
 * @beta
 */
var CatalogGroupBuilder = /** @class */ (function (_super) {
    __extends(CatalogGroupBuilder, _super);
    function CatalogGroupBuilder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CatalogGroupBuilder.prototype.title = function (title) {
        this.item.title = title;
        return this;
    };
    CatalogGroupBuilder.prototype.tag = function (tagRef) {
        this.item.tag = tagRef;
        return this;
    };
    return CatalogGroupBuilder;
}(Builder));
export { CatalogGroupBuilder };
/**
 * Catalog group factory
 *
 * @param modifications - catalog group builder modifications to perform
 * @returns created catalog group
 * @beta
 */
export var newCatalogGroup = function (modifications) {
    if (modifications === void 0) { modifications = identity; }
    return builderFactory(CatalogGroupBuilder, {}, modifications);
};
//# sourceMappingURL=groupFactory.js.map