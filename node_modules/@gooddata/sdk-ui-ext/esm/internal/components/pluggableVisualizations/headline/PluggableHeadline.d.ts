import { IExecutionFactory } from "@gooddata/sdk-backend-spi";
import { IInsightDefinition } from "@gooddata/sdk-model";
import { IBucketItem, IBucketOfFun, IExtendedReferencePoint, IReferencePoint, IVisConstruct, IVisProps } from "../../../interfaces/Visualization";
import { AbstractPluggableVisualization } from "../AbstractPluggableVisualization";
export declare class PluggableHeadline extends AbstractPluggableVisualization {
    private readonly settings?;
    private readonly renderFun;
    constructor(props: IVisConstruct);
    unmount(): void;
    getExtendedReferencePoint(referencePoint: Readonly<IReferencePoint>): Promise<IExtendedReferencePoint>;
    protected checkBeforeRender(insight: IInsightDefinition): boolean;
    protected renderVisualization(options: IVisProps, insight: IInsightDefinition, executionFactory: IExecutionFactory): void;
    protected renderConfigurationPanel(): void;
    protected mergeDerivedBucketItems(referencePoint: IReferencePoint, bucket: IBucketOfFun, newDerivedBucketItems: IBucketItem[]): IBucketItem[];
}
//# sourceMappingURL=PluggableHeadline.d.ts.map