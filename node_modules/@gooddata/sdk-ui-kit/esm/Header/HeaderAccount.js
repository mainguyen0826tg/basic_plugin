import { __extends } from "tslib";
// (C) 2007-2020 GoodData Corporation
import React, { PureComponent } from "react";
import cx from "classnames";
import { injectIntl, FormattedMessage } from "react-intl";
import { Overlay } from "../Overlay";
var WrappedHeaderAccount = /** @class */ (function (_super) {
    __extends(WrappedHeaderAccount, _super);
    function WrappedHeaderAccount(props) {
        var _this = _super.call(this, props) || this;
        _this.toggleAccountMenu = function (isOpen) {
            if (isOpen === void 0) { isOpen = !_this.state.isOpen; }
            _this.setState({
                isOpen: isOpen,
            });
        };
        _this.toggleAccountMenuHandler = function () {
            _this.toggleAccountMenu();
        };
        _this.state = {
            isOpen: false,
        };
        return _this;
    }
    WrappedHeaderAccount.prototype.getClassNames = function () {
        var _a;
        return cx((_a = {
                "gd-header-account": true,
                "is-open": this.state.isOpen
            },
            _a[this.props.className] = !!this.props.className,
            _a));
    };
    WrappedHeaderAccount.prototype.getMenuItems = function () {
        var _this = this;
        return this.props.items.map(function (item) {
            return (React.createElement("a", { key: item.key, href: item.href, onClick: function (e) {
                    _this.menuItemClicked(item, e);
                }, className: "gd-list-item " + item.className },
                React.createElement(FormattedMessage, { id: item.key })));
        });
    };
    WrappedHeaderAccount.prototype.menuItemClicked = function (item, e) {
        this.toggleAccountMenu(false);
        this.props.onMenuItemClick(item, e);
    };
    WrappedHeaderAccount.prototype.renderAccountMenu = function () {
        var _this = this;
        return this.state.isOpen ? (React.createElement(Overlay, { alignTo: ".gd-header-account", alignPoints: [
                {
                    align: "br tr",
                },
            ], closeOnOutsideClick: true, closeOnMouseDrag: true, closeOnParentScroll: true, onClose: function () {
                _this.toggleAccountMenu(false);
            } },
            React.createElement("div", { className: "gd-dialog gd-dropdown overlay gd-header-account-dropdown" },
                React.createElement("div", { className: "gd-list small" }, this.getMenuItems())))) : (false);
    };
    WrappedHeaderAccount.prototype.render = function () {
        return (React.createElement("div", { className: this.getClassNames(), onClick: this.toggleAccountMenuHandler },
            React.createElement("span", { className: "gd-header-account-icon gd-icon-user" }),
            React.createElement("span", { className: "gd-header-account-user" }, this.props.userName),
            this.renderAccountMenu()));
    };
    WrappedHeaderAccount.defaultProps = {
        className: "",
        items: [],
        userName: "",
    };
    return WrappedHeaderAccount;
}(PureComponent));
export var HeaderAccount = injectIntl(WrappedHeaderAccount);
//# sourceMappingURL=HeaderAccount.js.map